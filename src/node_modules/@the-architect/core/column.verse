
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Tableau

column_device<public> := class(creative_device, config_device, side_effect_device):
    @editable TypeID:string = "Column"

    GetResources<override>():[]resource= array:
        resource:
            Type := TypeID
            Props := map:
                "Exists" => Bool of true
                "Block Label" => Str of "Block"
                "Column Label" => Str of "Column"
                "Location ID" => prop_str. DefaultFrom := option. Path("Grid", "Location ID")
                "Partial Location ID" => Str of (Path("Location ID"), "Append", COMMA())
                "Block Location ID" => Str of (Path("Partial Location ID"), "Append", Path("Height"))
                "Block ID" => Str of (Path("Block Label"), "Append", Path("Block Location ID"))
                "XY Location" => prop_vec2. DefaultFrom := option. Path("Cursor", "XY Location")
                "Blocks" => Strs of array{}
                "Height" => Integer of (Path("Blocks"), "Length")
                "Top Block" => Str of ""
                "Top Block Type" => Str of Path(Path("Top Block"), "Block Type")
                "Stackable" => Bool of Path(Path("Top Block Type"), "Stackable")
            Actions := map:
                "Add Block" => Action of array:
                    Create("Block ID").As("Block Label")
                    Set("Top Block").To("Block ID")
                    Insert("Block ID").Into("Blocks")

    GetResourceID<override>()<computes>:?string= false
    GetPerType<override>()<computes>:?string= option. TypeID
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect= array{}
        # Debug("Height", "{State.Source} Height")
        # Debug("Blocks", "{State.Source} Blocks")

