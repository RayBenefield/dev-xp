
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Banding
using. Gooey
using. Tableau

architect_cursor_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Architect Cursor"
    @editable CursorSettings:cursor_settings = cursor_settings{}

    @editable Place:input_trigger_device = input_trigger_device{}
    @editable ChangeType:input_trigger_device = input_trigger_device{}
    @editable ChangeBlock:input_trigger_device = input_trigger_device{}

    @editable Forward:input_trigger_device = input_trigger_device{}
    @editable Left:input_trigger_device = input_trigger_device{}
    @editable Right:input_trigger_device = input_trigger_device{}
    @editable Back:input_trigger_device = input_trigger_device{}

    @editable TypeHUDSettings:canvas_settings = canvas_settings{}
    @editable BlockHUDSettings:canvas_settings = canvas_settings{}

    GetResources<override>():[]resource= array:
        CreateCursorResource(CursorSettings)
        resource:
            ID := ResourceID
            Props := map:
                "Column Label" => prop_str. Default := "Column"
                "Block Label" => prop_str. Default := "Block"
                "Selector Label" => prop_str. Default := " Selector"
                "Height" => prop_int{ Focus := Path(Path("Column ID"), "Height") }
                "Height Increment" => prop_float. Default := 64.0
                "Column ID" => prop_str{ Focus := Path("Column Label"), FN := "Append", Tweak := Path("Cursor", "Location ID") }
                "Partial Location ID" => prop_str{ Focus := Path("Cursor", "Location ID"), FN := "Append", Tweak := COMMA() }
                "Location ID" => prop_str{ Focus := Path("Partial Location ID"), FN := "Append", Tweak := Path("Height") }
                "Block ID" => prop_str{ Focus := Path("Block Label"), FN := "Append", Tweak := Path("Location ID") }
                "Z Coord" => prop_float{ Focus := Path("Height"), FN := "*", Tweak := Path("Height Increment")}
                "Location" => prop_vec3{ Focus := Path("Cursor", "XY Location"), FN := "Append", Tweak := Path("Z Coord") }
                "Column Exists" => prop_bool{ Focus := Path(Path("Column ID"), "Exists") }
                "Block Exists" => prop_bool{ Focus := Path(Path("Block ID"), "Exists") }
                "Current Type" => prop_str{ Focus := Path("Type Selector", "Selection") }
                "Current Selector" => prop_str{ Focus := Path("Current Type"), FN := "Append", Tweak := Path("Selector Label") }
                "Block Type" => prop_str{ Focus := Path(Path("Current Selector"), "Selection") }
            Abilities := map:
                "Add Block" => ability. Effects := array:
                    Execute("Try Add Column")
                    Execute("Try Add Block")
                "Try Add Column" => ability. Effects := array:
                    IsFalse("Column Exists")
                    Create("Column ID").As("Column Label")
                "Try Add Block" => ability. Effects := array:
                    IsFalse("Block Exists")
                    Create("Block ID").As("Block Label")
                    Execute(Path("Column ID"), "Add Block")
                "Change Block" => ability. Effects := array:
                    Execute(Path("Current Selector"), "Next")
                "Change Type" => ability. Effects := array:
                    Execute("Type Selector", "Next")

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        State.AttachAction("Add Block", Place.ReleasedEvent)
        State.AttachAction("Change Type", ChangeType.ReleasedEvent)
        State.AttachAction("Change Block", ChangeBlock.ReleasedEvent)

        State.AttachAction("Cursor", "Increase Y", Forward.ReleasedEvent)
        State.AttachAction("Cursor", "Decrease X", Left.ReleasedEvent)
        State.AttachAction("Cursor", "Increase X", Right.ReleasedEvent)
        State.AttachAction("Cursor", "Decrease Y", Back.ReleasedEvent)

        Sleep(0.1)
        BlockWidget := WhiteText()
        State.GameState.AddUI(BlockWidget, "Player1", BlockHUDSettings)
        TypeWidget := WhiteText()
        State.GameState.AddUI(TypeWidget, "Player1", TypeHUDSettings)

        array:
            PushMsg("Current Type", Prefixer("Type: ").FN, SetText(TypeWidget).FN)
            PushMsg("Block Type", Prefixer("Block: ").FN, SetText(BlockWidget).FN)
            PushVec3("Location", Move(CursorSettings.Prop, 0.2).FN)
            # Debug("Column ID", "Column ID")
            # Debug("Block ID", "Block ID")
