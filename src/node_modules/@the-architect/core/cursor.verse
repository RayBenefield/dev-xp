
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Banding
using. Gooey
using. Tableau

architect_cursor_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Architect Cursor"
    @editable CursorSettings:cursor_settings = cursor_settings{}

    @editable TypeHUDSettings:canvas_settings = canvas_settings{}
    @editable BlockHUDSettings:canvas_settings = canvas_settings{}

    GetResources<override>():[]resource= array:
        CreateCursorResource(CursorSettings)
        resource:
            ID := ResourceID
            Props := map:
                "Column Label" => Str of "Column"
                "Selector Label" => Str of " Selector"
                "Height" => Integer of (Path(Path("Column ID"), "Height"), "+", ONE())
                "Height Increment" => Float of 64.0
                "Column ID" => Str of (Path("Column Label"), "Append", Path("Cursor", "Location ID"))
                "Z Coord" => Float of (Path("Height"), "*", Path("Height Increment"))
                "Location" => Vec3 of (Path("Cursor", "XY Location"), "Append", Path("Z Coord") )
                "Column Exists" => Bool of Path(Path("Column ID"), "Exists")
                "Current Type" => Str of (Path("Type Selector", "Selection"))
                "Current Selector" => Str of (Path("Current Type"), "Append", Path("Selector Label"))
                "Block Type" => Str of (Path(Path("Current Selector"), "Selection"))
            Actions := map:
                "Prim Action" => Action of array:
                    IsTrue("Column Exists").Else("Create Column")
                    Execute(Path("Column ID"), "Add Block")
                "Create Column" => Action of array:
                    Create("Column ID").As("Column Label")
                    Execute(Path("Column ID"), "Add Block")
                "Alt Action" => Action of array:
                    Execute(Path("Current Selector"), "Next")
                "Util Action" => Action of array:
                    Execute("Type Selector", "Next")
                "Move Right" => Action of array:
                    Execute(CursorSettings.ID, "Increase X")
                "Move Left" => Action of array:
                    Execute(CursorSettings.ID, "Decrease X")
                "Move Up" => Action of array:
                    Execute(CursorSettings.ID, "Increase Y")
                "Move Down" => Action of array:
                    Execute(CursorSettings.ID, "Decrease Y")

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect= array:
        PushVec3("Location", Move(CursorSettings.Prop, 0.2).FN)
        # Debug("Current Camera")
        # Debug("Column ID", "Column ID")
