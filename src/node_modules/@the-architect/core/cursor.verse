
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Banding
using. Gooey
using. Tableau

architect_cursor_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Architect Cursor"

    GetResources<override>():[]resource= array:
        resource:
            ID := ResourceID
            Props := map:
                "Column Label" => Str of "Column"
                "Selector Label" => Str of " Selector"
                "Z" => Integer of (Path(Path("Column ID"), "Height"), "+", ONE())
                "Column ID" => Str of (Path("Column Label"), "Append", Path("Grid", "Location ID"))
                "Column Exists" => Bool of Path(Path("Column ID"), "Exists")
                "Current Type" => Str of (Path("Type Selector", "Selection"))
                "Current Selector" => Str of (Path("Current Type"), "Append", Path("Selector Label"))
                "Block Type" => Str of (Path(Path("Current Selector"), "Selection"))
                "North Label" => Str of "North"
                "East Label" => Str of "East"
                "South Label" => Str of "South"
                "West Label" => Str of "West"
                "Current Camera" => Str of Path("Camera Selector", "Selection")
                "Is North" => Bool of (Path("Current Camera"), "String Equals", Path("North Label"))
                "Is East" => Bool of (Path("Current Camera"), "String Equals", Path("East Label"))
                "Is South" => Bool of (Path("Current Camera"), "String Equals", Path("South Label"))
                "Is West" => Bool of (Path("Current Camera"), "String Equals", Path("West Label"))
            Actions := map:
                "Prim Action" => Action of array:
                    IsTrue("Column Exists").Else("Create Column")
                    Execute(Path("Column ID"), "Add Block")
                "Create Column" => Action of array:
                    Create("Column ID").As("Column Label")
                    Execute(Path("Column ID"), "Add Block")
                "Alt Action" => Action of (Path("Current Selector"), "Next")
                "Util Action" => Action of ("Type Selector", "Next")
                "Move Right" => Action of (Path("Current Camera"), "Move Right")
                "Move Left" => Action of (Path("Current Camera"), "Move Left")
                "Move Up" => Action of (Path("Current Camera"), "Move Up")
                "Move Down" => Action of (Path("Current Camera"), "Move Down")
                "Next Action" => Action of ("Camera Selector", "Next")
                "Prev Action" => Action of ("Camera Selector", "Previous")

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect= array{}
        # Debug("Current Camera")
        # Debug("Column ID")
