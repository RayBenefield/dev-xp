import { Socket } from 'rete'
import * as _ from '@dev-xp/utils'

const any = new Socket('any')
const arrayAny = new Socket('array-any')
const functor = new Socket('array-functor')

const insertTo = _.invoker(1, 'combineWith')
const makeSocket = _.pipe(
    _.constructN(1, Socket),
    _.tap(insertTo(any)),
    _.tap(insertTo(arrayAny)),
    _.tap(insertTo(functor))
)

const sockets = {
    number: makeSocket('number'),
    function: makeSocket('function'),
    boolean: makeSocket('boolean'),
}

_.callForEach('combineWith', any, sockets)

const arrays = _.pipe(
    _.renameKeysWith(_.prefix('array-')),
    _.mapObjIndexed((old, name) =>
        _.pipe(
            makeSocket,
            // eslint-disable-next-line no-underscore-dangle
            _.tap(insertTo(_.__, old)),
            _.tap(insertTo(functor))
        )(name)
    )
)({ ...sockets })

insertTo(functor)(any)
insertTo(functor)(arrayAny)

export const isArraySocket = _.pipe(
    _.prop('name'),
    _.split('-'),
    _.nth(0),
    _.equals('array')
)

export default { any, 'array-any': arrayAny, functor, ...sockets, ...arrays }
