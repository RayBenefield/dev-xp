/* eslint-disable no-unused-vars */
import { resolve } from 'path'

import P from 'parsimmon'
import { read } from '@dev-xp/fs'
import int from '@dev-xp/parse-int'
import isObject from 'lodash.isobject'

const getNum = index => arr => arr[index]

const asset = P.createLanguage({
    lbrace: r => P.string('{'),
    rbrace: r => P.string('}'),
    colon: r => P.string(':'),
    space: r => P.string(' '),
    EOL: r => P.string('\n'),
    key: r => P.seq(r.identifier, r.colon).map(getNum(0)),
    identifier: r => P.regexp(/[a-z_][a-z0-9_]*/i),
    quote: r => P.string('"'),
    string: r => P.seq(r.quote, r.identifier, r.quote).map(getNum(1)),
    number: r => P.regexp(/[0-9_]*/i).map(int),
    values: r => P.alt(r.string, r.number),
    property: r => P.seqObj(['key', r.key], r.space, ['value', r.values]),
    root: r => P.alt(r.property, r.EOL).many(),
})

const parser = unparsed => (!unparsed ? [] : asset.root.tryParse(unparsed))

read(resolve(__dirname, 'tree.pbt'), 'utf-8')
    .then(x => x.trim())
    .then(parser)
    .then(nodes => nodes.filter(isObject))
    .then(console.log)
