
using. /Verse.org/Assets
using. /Verse.org/Simulation
using. /Fortnite.com/Devices
using. /UnrealEngine.com/Temporary/SpatialMath

using. TheDoctorAssets.Materials
using. Tableau
using. Vertex

CreateSlotResource<constructor>(X:int, Y:int, Location:vector3, SlotNumber:int) := resource:
    ID := "Slot{X},{Y}"
    Type := "Slot"
    Props := map:
        "Slot Number" => Integer of SlotNumber
        "Item Type" => Str of (Path("Inventory", "Items"), "Get", Path("Slot Number"))
        "Location" => Vec3 of Location

slot_device<public> := class(tableau_device):
    @editable ResourceID<override>:string = "Slot"
    @editable SideEffectSettings<override>:side_effect_settings = side_effect_settings. PerResource := true

    @editable SlotProp:creative_prop_asset = DefaultCreativePropAsset
    @editable ItemProp:creative_prop_asset = DefaultCreativePropAsset

    GetResources<override>():[]resource=
        Offset := GetTransform().Translation
        for (X := 1..5, Y := 1..5, SlotNumber := ((Y-1) * 5) + X):
            Location := Offset + V3(0.0, (X-1)*96.0, (Y-1)*-96.0)
            Spawn(SlotProp, Location)
            CreateSlotResource(X, Y, Location, SlotNumber)

    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        Mat := M_Item_material{}
        PlaceItem := Spawn(ItemProp, V3(), R3(), V3One(), option. material[Mat])
        array:
            PushVec3("Location", Offsetter(V3X(-0.1)).FN, SetLocation(PlaceItem).FN)
            PushStr("Item Type", SetTexture(ItemSetter(Mat).FN, ItemTypes, DefaultTexture).FN)
            # Debug("Location", "{State.Source} Location")
