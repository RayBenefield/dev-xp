
using. /Verse.org/Assets
using. /Verse.org/Random
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /Fortnite.com/Devices/CreativeAnimation
using. /UnrealEngine.com/Temporary/SpatialMath
using. /Fortnite.com/Devices/CreativeAnimation/InterpolationTypes

using. TheDoctor.Materials
using. FantasyWarriorHUD.HUD
using. Anima
using. Tableau
using. TableauDevice
using. TableauEffect
using. TableauResource
using. Vertex

place_slot_fn := class():
    Prop:creative_prop_asset
    FN<public>(Position:vector3)<suspends>:void=
        MaybeProp := SpawnProp(Prop, Position, IdentityRotation())(0)
        if (P := MaybeProp?, Anim := P.GetAnimationController[]):
            Invisible := Frame(ScaleTo(0.1))
            Visible := Frame(ScaleTo(1.0)).SetTime(0.75).SetEasing(EaseOut)
            Anim.SetAnimation(array. Invisible.Delta(), ?Mode:=animation_mode.OneShot)
            Anim.Play()
            Sleep(0.0)
            Anim.SetAnimation(array. Visible.Delta(P.GetTransform()), ?Mode:=animation_mode.OneShot)
            Anim.Play()

place_item_fn := class():
    Prop:creative_prop_asset
    Mat:M_Item_material
    FN<public>(Position:vector3)<suspends>:void=
        Sleep(2.0)
        MaybeProp := SpawnProp(Prop, Position + vector3{ X := -0.1, Y := 0.0, Z := 0.0 }, IdentityRotation())(0)
        if (P := MaybeProp?, Anim := P.GetAnimationController[]):
            P.SetMaterial(Mat)
            Invisible := Frame(ScaleTo(0.1))
            Visible := Frame(ScaleTo(1.0)).SetTime(0.75).SetEasing(EaseOut)
            Anim.SetAnimation(array. Invisible.Delta(), ?Mode:=animation_mode.OneShot)
            Anim.Play()
            Sleep(0.0)
            Anim.SetAnimation(array. Visible.Delta(P.GetTransform()), ?Mode:=animation_mode.OneShot)
            Anim.Play()

change_texture_fn := class():
    Mat:M_Item_material
    TextureMap:[string]texture
    DefaultTexture:texture
    FN<public>(Key:string):void=
        set Mat.ItemTexture = TextureMap[Key] or DefaultTexture

CreateSlotResource<constructor>(X:int, Y:int, Offset:vector3, SlotNumber:int) := resource:
    ID := "Slot{X},{Y}"
    Type := "Slot"
    Props := map:
        "Slot Number" => prop_int. Default := SlotNumber
        "Item Type" => prop_str{ Focus := Path("Inventory", "Items"), FN := "Get", Tweak := Path("Slot Number") }
        "Location" => prop_vec3. Default := Offset + vector3{ X := 0.0, Y := (X-1) * 96.0, Z := (Y-1) * -96.0 }

slot_device<public> := class(creative_device, config_device, side_effect_device):
    @editable TypeID:string = "Slot"
    @editable SlotProp:creative_prop_asset = DefaultCreativePropAsset
    @editable ItemProp:creative_prop_asset = DefaultCreativePropAsset
    DefaultItemTexture:texture = SPR_HUD_FantasyWarrior_Icon_Tooltip01

    GetResources<override>():[]resource=
        Offset := GetTransform().Translation
        for (X := 1..5, Y := 1..5, SlotNumber := ((Y-1) * 5) + X):
            CreateSlotResource(X, Y, Offset, SlotNumber)

    GetResourceID<override>()<computes>:?string= false
    GetPerType<override>()<computes>:?string= option. TypeID
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        Sleep(0.2)
        Mat := M_Item_material{}
        PlaceSlot := place_slot_fn. Prop := SlotProp
        PlaceItem := place_item_fn{ Prop := ItemProp, Mat := Mat }
        ChangeItem := change_texture_fn{ Mat := Mat, TextureMap := ItemTypes, DefaultTexture := DefaultItemTexture }
        array:
            PushSusVec3("Location", PlaceSlot.FN)
            PushSusVec3("Location", PlaceItem.FN)
            PushStr("Item Type", ChangeItem.FN)
            # Debug("Location", "{State.Source} Location")
