
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Gooey
using. Tableau
using. TableauDevice
using. TableauEffect
using. TableauLogic
using. TableauResource

inventory_cursor_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Inventory Cursor"
    @editable CursorSettings:cursor_settings = cursor_settings{}

    @editable Cursor:creative_prop = creative_prop{}
    @editable Action:input_trigger_device = input_trigger_device{}

    @editable Forward:input_trigger_device = input_trigger_device{}
    @editable Left:input_trigger_device = input_trigger_device{}
    @editable Right:input_trigger_device = input_trigger_device{}
    @editable Back:input_trigger_device = input_trigger_device{}

    GetResources<override>():[]resource= array:
        CreateCursorResource(CursorSettings)
        resource:
            ID := ResourceID
            Props := map:
                "-ONE" => prop_float. Default := -1.0
                "Offset" => prop_vec3. Default := GetTransform().Translation
                "X Coord" => prop_float{}
                "Y Coord" => prop_float. Focus := Path(CursorSettings.ID, "X Coord")
                "Z Coord" => prop_float{ Focus := Path(CursorSettings.ID, "Y Coord"), FN := "*", Tweak := Path("-ONE") }
                "XY Coord" => prop_vec2{ Focus := Path("X Coord"), FN := "Append", Tweak := Path("Y Coord") }
                "XYZ Coord" => prop_vec3{ Focus := Path("XY Coord"), FN := "Append", Tweak := Path("Z Coord") }
                "Location" => prop_vec3{ Focus := Path("XYZ Coord"), FN := "+", Tweak := Path("Offset") }
            Abilities := map{}

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        State.AttachAction(CursorSettings.ID, "Move Forward", Forward.PressedEvent)
        State.AttachAction(CursorSettings.ID, "Move Left", Left.PressedEvent)
        State.AttachAction(CursorSettings.ID, "Move Right", Right.PressedEvent)
        State.AttachAction(CursorSettings.ID, "Move Back", Back.PressedEvent)

        array:
            move{ PropertyID := "Location", Prop := option. Cursor, Time := 0.2 }
