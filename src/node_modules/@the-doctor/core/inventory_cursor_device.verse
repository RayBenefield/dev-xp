
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

using. Tableau

inventory_cursor_device<public> := class(tableau_device):
    @editable ResourceID<override>:string = "Inventory Cursor"

    @editable GridID:string = "Grid"
    @editable CursorID:string = "Cursor"

    GetResources<override>():[]resource= array:
        resource:
            ID := "Inventory"
            Props := map:
                "Max Item Count" => Integer of 25
                "Items" => Strs of for(I:=1..25). "Bottle_14"
                "Item Count" => Integer of (Path("Items"), "Length")
                "Maxed" => Bool of (Path("Item Count"), "Int >=", Path("Max Item Count"))
                "Current Item Number" => Integer of (Path(Path("Inventory Cursor", "Current Slot"), "Slot Number"))
                "Current Item Type" => Str of (Path("Items"), "Get", Path("Current Item Number"))
                "Needs Target" => Bool of Path(Path("Current Item Type"), "Needs Target")
            Actions := map:
                "Prim Action" => Action of array:
                    IsTrue("Needs Target").Else("Use Self Item")
                    IsTrue("Targets", "Has Targets")
                    Execute("Section Selector", "Set Targets")
                "Use Item" => Action of array:
                    Remove("Current Item Number").From("Inventory", "Items")
                "Use Self Item" => Action of array:
                    IsFalse("Needs Target")
                    Execute("Use Item")
                "Try Shop" => Action of array:
                    IsTrue("Inventory Cursor", "To Shop")
                    Execute("Section Selector", "Set Shop")
                "Alt Action" => Action of Execute("Heroes", "Add Random Hero")
                "Move Right" => Action of Execute(GridID, "Increase X")
                "Move Up" => Action of Execute(GridID, "Decrease Y")
                "Move Down" => Action of Execute(GridID, "Increase Y")
                "Move Left" => Action of array:
                    Execute("Try Shop")
                    IsTrue("Section Selector", "Is Inventory")
                    Execute(GridID, "Decrease X")
        resource:
            ID := ResourceID
            Props := map:
                "All Slots" => Strs of array{}
                "Max Slots" => Integer of 25
                "Index" => Integer of (Path("All Slots"), "Count")
                "Next Slot Number" => Integer of (Path("Index"), "+", ONE())
                "Potential Slot ID" => Str of (Path("Slot Label"), "Append", Path("Next Slot Number"))
                "Not Maxed" => Bool of (Path("Index"), "Int <", Path("Max Slots"))
                "Next Slot ID" => Str of (Path("Not Maxed"), "If True", Path("Potential Slot ID"))
                "Slot Label" => Str of "Slot"
                "Current Slot" => Str of (Path("Slot Label"), "Append", Path(GridID, "Selection Number"))
                "Item Type" => Str of (Path("Inventory", "Current Item Type"))
                "Items" => Strs of (Path("Inventory", "Items"))
                "Visible Item Type" => Str of (Path("Section Selector", "Is Inventory"), "If True", Path("Inventory", "Current Item Type"))
                "To Shop" => Bool of (Path("Section Selector", "Is Inventory"), "AND", Path(GridID, "At Min X"))
            Actions := map:
                "Add Slot" => Action of Insert("Potential Slot ID").Into("All Slots")
