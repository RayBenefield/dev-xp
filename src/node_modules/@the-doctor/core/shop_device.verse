
using. /Verse.org/Assets
using. /Verse.org/Simulation
using. /Fortnite.com/Devices
using. /Fortnite.com/Devices/CreativeAnimation

using. TheDoctor.Materials
using. FantasyWarriorHUD.HUD
using. Anima
using. Tableau
using. TableauEffect
using. TableauResource
using. TableauDevice
using. Vertex

shop_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ShopItem:creative_prop = creative_prop{}
    @editable ShopUpArrow:creative_prop = creative_prop{}
    @editable ShopDownArrow:creative_prop = creative_prop{}

    DefaultItemTexture:texture = SPR_HUD_FantasyWarrior_Icon_Tooltip01

    GetResources<override>():[]resource= array:
        CreateSelectorResource("Item Selector", ItemTypes.Keys())
        resource:
            ID := "Shop"
            Props := map:
                "Shop Label" => prop_str. Default := "Shop"
                "Inventory Label" => prop_str. Default := "Inventory"
                "In Shop" => prop_bool{ Focus := Path("Root", "Context"), FN := "String Equals", Tweak := Path("Shop Label") }
                "Shop Item" => prop_str. Focus := Path("Item Selector", "Selection")
            Abilities := map:
                "Action" => ability. Effects := array:
                    Insert("Shop Item").To(Path("Inventory", "Items"))
                "Move Up" => ability. Effects := array:
                    Execute("Item Selector", "Next")
                "Move Down" => ability. Effects := array:
                    Execute("Item Selector", "Previous")
                "Move Right" => ability. Effects := array:
                    Set("Root", "Context").To("Inventory Label")

    GetResourceID<override>()<computes>:?string= option. "Shop"
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        if (Anim := ShopUpArrow.GetAnimationController[]):
            Bounce := Frame(MoveZBy(5.0)).SetTime(0.5)
            Anim.SetAnimation(array. Bounce.Delta(), ?Mode := animation_mode.PingPong)
            Anim.Play()
        if (Anim := ShopDownArrow.GetAnimationController[]):
            Bounce := Frame(MoveZBy(-5.0)).SetTime(0.5)
            Anim.SetAnimation(array. Bounce.Delta(), ?Mode := animation_mode.PingPong)
            Anim.Play()

        Mat := M_Item_material{}
        ShopItem.SetMaterial(Mat)
        ChangeItem := change_item_texture_fn{ Mat := Mat, TexMap := ItemTypes, Default := DefaultItemTexture }
        array:
            toggle_prop{ PropertyID := "In Shop", Prop := option. ShopUpArrow }
            toggle_prop{ PropertyID := "In Shop", Prop := option. ShopDownArrow }
            PushStr("Shop Item", ChangeItem.FN)
            # Debug("Shop Item", "Shop Item")
