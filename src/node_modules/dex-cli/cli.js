import argv from 'argv'
import defaults from 'lodash.defaults'
import { cosmiconfig, defaultLoaders } from 'cosmiconfig'
import { prettify, createLogger } from '@dexterity/logger'

import dexProject from './package.json'

argv.version(dexProject.version)
argv.info(dexProject.description)

argv.option([
    {
        name: 'log',
        short: 'l',
        type: 'string',
        description:
            'Level of logging to print [error, warn, info, verbose, debug, silly]',
        example: '--log=level-name',
    },
])

const { options: { log: level = 'info' } } = argv.run()
const logger = createLogger({ level })

logger.info('Dex CLI')

const explorer = cosmiconfig('dex', {
    searchPlaces: ['.dexrc'],
    loaders: { noExt: defaultLoaders['.json'] },
})

explorer
    .search()
    .then(results => {
        const configDefaults = { session: 0, subprojects: [] }

        if (!results) {
            logger.warn('No Dex config file found')
            return configDefaults
        }

        logger.info('Config file loaded')
        logger.debug(prettify(results))
        return defaults(results.config, configDefaults)
    })
    .then(config => {
        logger.info(`${config.session} sessions currently logged.`)
        return config
    })
    .catch(err => {
        logger.error('Error loading config file')
        logger.error(prettify(err))
    })
