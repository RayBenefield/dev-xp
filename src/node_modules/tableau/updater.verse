using { /UnrealEngine.com/Temporary/Diagnostics }

updatable_sub := struct:
    Updatable:updatable
    Subscription:event_subscription

updater<public> := class():
    Dispatcher<public>:dispatcher
    Updatables<public>:[]updatable

    var AllUpdates:[]updatable = array{}
    var EntitySubscriptions:[string][]updatable_sub = map{}

    SetupUpdates<public>()<suspends>:void=
        # Print("Setting up updates")
        for (Updatable:Updatables, Subscriptions := Updatable.Subscriptions()):
            if (Subscriptions.Length = 0). set AllUpdates += array. Updatable
            for (Sub:Subscriptions):
                if:
                    not (EntitySubs := EntitySubscriptions[Sub.SubjectType.Name()])
                    set EntitySubscriptions[Sub.SubjectType.Name()] = array{}
                if:
                    EntitySubs := EntitySubscriptions[Sub.SubjectType.Name()]
                    UpdatableSub := updatable_sub { Updatable := Updatable, Subscription := Sub }
                    Value := EntitySubs.Insert[EntitySubs.Length, array. UpdatableSub]
                    set EntitySubscriptions[Sub.SubjectType.Name()] = Value

        if (AllUpdates.Length > 0):
            ProjectLog("[{AllUpdates.Length}] entities are getting all domain updates.", log_level.Warning)

        loop:
            DomainEvents := Dispatcher.DomainEvents().Await()
            # Print("Domain Event Fired")
            for (Updatable:AllUpdates). spawn. Updatable.Update()
            for (DomainEvent:DomainEvents):
                if(EntitySubs := EntitySubscriptions[DomainEvent.SubjectType.Name()]):
                    for (UpdatableSub:EntitySubs, Updatable := UpdatableSub.Updatable):
                        if:
                            Subject := UpdatableSub.Subscription.Subject?
                        then:
                            if (Subject = DomainEvent.Subject):
                                # Print("Device Updated by ID")
                                spawn. Updatable.Update()
                        else:
                            # Print("Device Updated by EntityType")
                            spawn. Updatable.Update()
