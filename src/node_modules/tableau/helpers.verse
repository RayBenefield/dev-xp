
using. /Fortnite.com/Devices
using. /UnrealEngine.com/Temporary/SpatialMath

using. Vertex

(GameState:game_state).AfterTrue<public>(ResourceID:string, PropertyID:string, PlayerID:string)<suspends>:void=
    GameState.WhenTrue(ResourceID, PropertyID, PlayerID, NOOP)

(GameState:game_state).WhenTrue<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_():void})<suspends>:void=
    Bool := GameState.GetBoolProp(ResourceID, PropertyID, PlayerID)
    loop:
        Value := Bool.UpdatedEvent().Await()
        if (Value = true):
            Tap()
            break

(GameState:game_state).OnUpdated<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_()<suspends>:void})<suspends>:void=
    if (GSResource := GameState.Resources[ResourceID]):
        PropType := GameState.ResourceRepository.GetPropTypes[ResourceID][PropertyID] or prop_type.Unknown
        return case(PropType):
            prop_type.Num =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Str =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Bool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Float =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Agent =>
                Prop := GameState.GetAgentProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Vec2 =>
                Prop := GameState.GetVec2Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Vec3 =>
                Prop := GameState.GetVec3Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatNum =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatStr =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatBool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatFloat =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatVec2 =>
                Prop := GameState.GetVec2Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatVec3 =>
                Prop := GameState.GetVec3Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.StatAgent =>
                Prop := GameState.GetAgentProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompNum =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompStr =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompBool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompFloat =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompVec2 =>
                Prop := GameState.GetVec2Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.CompVec3 =>
                Prop := GameState.GetVec3Prop(ResourceID, PropertyID, PlayerID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    spawn. Tap()
            prop_type.Unknown => {}

(GameState:game_state).SyncBool<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_(:logic)<suspends>:void})<suspends>:void=
    Prop := GameState.GetBoolProp(ResourceID, PropertyID, PlayerID)
    Tap(Prop.Get())
    loop:
        Value := Prop.UpdatedEvent().Await()
        spawn. Tap(Value)

(GameState:game_state).SyncFloat<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_(:float)<suspends>:void})<suspends>:void=
    Prop := GameState.GetFloatProp(ResourceID, PropertyID, PlayerID)
    Tap(Prop.Get())
    loop:
        Value := Prop.UpdatedEvent().Await()
        spawn. Tap(Value)

(GameState:game_state).SyncStr<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_(:string)<suspends>:void})<suspends>:void=
    Prop := GameState.GetStrProp(ResourceID, PropertyID, PlayerID)
    Tap(Prop.Get())
    loop:
        Value := Prop.UpdatedEvent().Await()
        spawn. Tap(Value)

(GameState:game_state).SyncInt<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_(:int)<suspends>:void})<suspends>:void=
    Prop := GameState.GetFloatProp(ResourceID, PropertyID, PlayerID)
    Tap(Prop.Get().ToInt())
    loop:
        Value := Prop.UpdatedEvent().Await()
        spawn. Tap(Value.ToInt())

(GameState:game_state).SyncVec3<public>(ResourceID:string, PropertyID:string, PlayerID:string, Tap:type{_(:vector3)<suspends>:void})<suspends>:void=
    Prop := GameState.GetVec3Prop(ResourceID, PropertyID, PlayerID)
    Tap(Prop.Get())
    loop:
        Value := Prop.UpdatedEvent().Await()
        spawn. Tap(Value)

# TODO: Using Get() and calling twice in a row creates a lock
(GameState:game_state).SpawnProp<public>(Asset:creative_prop_asset, ResourceID:string, Location:half_path)<suspends>:?creative_prop=
    Loc := GameState.GetVec3Prop(ResourceID, Location, "").Latest
    SpawnProp(Asset, Loc, IdentityRotation())(0)
