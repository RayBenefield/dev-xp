(GameState:game_state).AfterTrue<public>(ResourceID:string, PropertyID:string, ParticipantID:string)<suspends>:void=
    GameState.WhenTrue(ResourceID, PropertyID, ParticipantID, NOOP)

(GameState:game_state).WhenTrue<public>(ResourceID:string, PropertyID:string, ParticipantID:string, Tap:tap)<suspends>:void=
    Bool := GameState.GetBoolProp(ResourceID, PropertyID, ParticipantID)
    loop:
        Value := Bool.UpdatedEvent().Await()
        if (Value = true):
            Tap()
            break

(GameState:game_state).OnUpdated<public>(ResourceID:string, PropertyID:string, ParticipantID:string, Tap:tap)<suspends>:void=
    if (GSResource := GameState.Resources[ResourceID]):
        PropType := GSResource.PropTypes[PropertyID] or prop_type.Unknown
        return case(PropType):
            prop_type.Num =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.Str =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.Bool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.Float =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.Agent =>
                Prop := GameState.GetAgentProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.StatNum =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.StatStr =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.StatBool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.StatFloat =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.StatAgent =>
                Prop := GameState.GetAgentProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.CompNum =>
                Prop := GameState.GetNumProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.CompStr =>
                Prop := GameState.GetStrProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.CompBool =>
                Prop := GameState.GetBoolProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.CompFloat =>
                Prop := GameState.GetFloatProp(ResourceID, PropertyID, ParticipantID)
                loop:
                    Value := Prop.UpdatedEvent().Await()
                    Tap()
            prop_type.Unknown => {}

(GameState:game_state).SyncFloat<public>(ResourceID:string, PropertyID:string, ParticipantID:string, Tap:float_tap)<suspends>:void=
    Prop := GameState.GetFloatProp(ResourceID, PropertyID, ParticipantID)
    Tap(Prop.Get())
    loop:
        Value := Prop.UpdatedEvent().Await()
        Tap(Value)
