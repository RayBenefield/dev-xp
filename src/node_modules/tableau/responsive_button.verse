
using { /Fortnite.com/UI }
using { /UnrealEngine.com/Temporary/UI }

responsive_button<public> := class(game_hud):
    DefaultText<public>:string = ""
    GooeyText<public>:gooey_string = gooey_string{}
    GooeyEnabled<public>:gooey_bool = gooey_bool. Latest := true
    GooeyVisibility<public>:gooey_bool = gooey_bool. Latest := true
    Button<public>:text_button_base = button_regular{}
    Action<public>:tap = NOOP

    Initialize<override>():widget=
        Button.OnClick().Subscribe(OnPressed)
        spawn. KeepUpdated()
        Button

    KeepUpdated()<suspends>:void=
        MessageVM := gooey_message. VM := Map(GooeyText, Str2Msg)
        Default := if (GooeyText.Latest <> ""). GooeyText.Latest else. DefaultText
        Button.SetText(Str2Msg(Default))
        Button.SetEnabled(GooeyEnabled.Latest)
        Button.SetVisibility(if (GooeyVisibility.Latest?). widget_visibility.Visible else. widget_visibility.Collapsed)
        loop:
            if (1 = 0). break
            race:
                block:
                    Msg := MessageVM.UpdatedEvent().Await()
                    Button.SetText(Msg)
                block:
                    Enabled := GooeyEnabled.UpdatedEvent().Await()
                    Button.SetEnabled(Enabled)
                block:
                    Visible := GooeyVisibility.UpdatedEvent().Await()
                    Button.SetVisibility(if (Visible?). widget_visibility.Visible else. widget_visibility.Collapsed)

    OnPressed(Msg:widget_message):void = Action()
