
using { /Verse.org/Simulation }

player_watcher<public> := class():
    GameState<public>:game_state
    OnPossessed<public>:type{_(:game_state, :string, :agent)<suspends>:void}

    Start<public>()<suspends>:void=
        loop:
            ID := GameState.ResourceAddedEvent("Player").Await()
            spawn. WaitForPossession(ID)

    WaitForPossession(PlayerID:string)<suspends>:void=
        # TODO: Support later possession and abandonment
        if (AgentProp := GameState.Resources[PlayerID].StatProps.Agents["Possessed By"]):
            # loop:
                # MaybeAgent := AgentProp.UpdatedEvent().Await()
                MaybeAgent := AgentProp.Get()
                if (Agent := MaybeAgent?):
                    spawn. OnPossessed(GameState, PlayerID, Agent)
