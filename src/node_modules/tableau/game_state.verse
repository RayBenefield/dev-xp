using { TableauResource }
using { TableauParticipant }
using { TableauProducer }

game_state<public> := class():
    var Participants<public>:[int]participant_vm = map{}
    ParticipantAdded<public>:event(int) = event(int){}
    ParticipantRemoved<public>:event(int) = event(int){}
    AddParticipant<public>(InitialParticipant:participant)<suspends>:participant_vm=
        ID := InitialParticipant.ID
        VM := participant_vm. ID := ID
        spawn. VM.Init(InitialParticipant)
        if (set Participants[ID] = VM). ParticipantAdded.Signal(ID)
        return VM
    AwaitParticipant<public>(ID:int)<suspends>:participant_vm=
        if (Part := Participants[ID]). return Part
        loop:
            IncomingID := ParticipantAdded.Await()
            if (ID = IncomingID, Part := Participants[ID]). return Part

    var Resources<public>:[int]resource_vm = map{}
    ResourceAdded<public>:event(int) = event(int){}
    ResourceRemoved<public>:event(int) = event(int){}
    AddResource<public>(InitialResource:resource, Buy:effector)<suspends>:resource_vm=
        ID := InitialResource.ID
        VM := resource_vm{ ID := ID, BuyEffector := Buy }
        spawn. VM.Init(InitialResource)
        if (set Resources[ID] = VM). ResourceAdded.Signal(ID)
        return VM
    AwaitResource<public>(ID:int)<suspends>:resource_vm=
        if (Res := Resources[ID]). return Res
        loop:
            IncomingID := ResourceAdded.Await()
            if (ID = IncomingID, Res:= Resources[ID]). return Res

    var Producers<public>:[int]producer_vm = map{}
    ProducerAdded<public>:event(int) = event(int){}
    ProducerRemoved<public>:event(int) = event(int){}
    AddProducer<public>(InitialProducer:producer, Buy:effector)<suspends>:producer_vm=
        ID := InitialProducer.ID
        VM := producer_vm{ ID := ID, BuyEffector := Buy }
        spawn. VM.Init(InitialProducer)
        if (set Producers[ID] = VM). ProducerAdded.Signal(ID)
        return VM
    AwaitProducer<public>(ID:int)<suspends>:producer_vm=
        if (Res := Producers[ID]). return Res
        loop:
            IncomingID := ProducerAdded.Await()
            if (ID = IncomingID, Res:= Producers[ID]). return Res
