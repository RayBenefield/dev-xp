using. /UnrealEngine.com/Temporary/Diagnostics

my_log_channel<public> := class(log_channel):

var IndentLevel:weak_map(session, int) = map{}

Tab<public>(S:string)<transacts>:string=
    if (not IndentLevel[GetSession()]):
        if. set IndentLevel[GetSession()] = 0

    Result := if (Level := IndentLevel[GetSession()] = 0). "\n{S}" else. S

    if (Level := IndentLevel[GetSession()]):
        if. set IndentLevel[GetSession()] = Level + 1
    Result

EndTab<public>()<transacts>:string=
    if (Level := IndentLevel[GetSession()]):
        if. set IndentLevel[GetSession()] = Level - 1
    ""

WithIndent<public>(S:string)<transacts>:string= "\n" + AddIndent() + S

AddIndent()<transacts>:string= if (Level := IndentLevel[GetSession()]):
    Count := Level*4
    Indents := for(I := 0..Count). array. ' '
    Concatenate(Indents)
else. ""


# A project-wide "Logger" to print messages from functions that are not in a class with a log.
# The non-Logger Print is <no_rollback>, so it can't be used in a <transacts> function.
ProjectLog<public>(Message:[]char)<transacts>:void=
    Logger := log{Channel := my_log_channel}
    Logger.Print(Message, ?Level := log_level.Normal)

ProjectLog<public>(Message:[]char, Level:log_level)<transacts>:void=
    Logger := log{Channel := my_log_channel}
    Logger.Print(Message, ?Level := Level)

# # Usage:
# ProjectLog("EndGame: Player has won!", ?Level := log_level.Verbose)

# # You don't have to specify the Level
# ProjectLog("Hello Verse!")