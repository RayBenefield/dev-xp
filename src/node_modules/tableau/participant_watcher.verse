
using { /Verse.org/Simulation }

participant_watcher<public> := class():
    GameState<public>:game_state
    OnPossessed<public>:type{_(:game_state, :string, :agent):void}

    Start<public>()<suspends>:void=
        loop:
            ID := GameState.ParticipantAdded.Await()
            spawn. WaitForPossession(ID)

    WaitForPossession(ParticipantID:string)<suspends>:void=
        if (Participant := GameState.Participants[ParticipantID]):
            loop:
                MaybeAgent := Participant.Agent.UpdatedEvent().Await()
                if (Agent := MaybeAgent?). OnPossessed(GameState, ParticipantID, Agent)
