
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Numb
using. TableauResource

command<public> := class(){}

Path<public><constructor>(PropertyID:string)<transacts> := half_path. PropertyID := option. PropertyID
Path<public><constructor>(PropPath:half_path)<transacts> := half_path. PropertyPath := option. PropPath
Path<public><constructor>(ResPath:half_path, PropertyID:string)<transacts> := half_path:
    ResourcePath := option. ResPath
    PropertyID := option. PropertyID
Path<public><constructor>(ResID:string, PropertyPath:half_path)<transacts> := half_path:
    ResourceID := option. ResID
    PropertyPath := option. PropertyPath
Path<public><constructor>(ResPath:half_path, PropPath:half_path)<transacts> := half_path:
    ResourcePath := option. ResPath
    PropertyPath := option. PropPath
Path<public><constructor>(ResourceID:string, PropertyID:string)<transacts> := half_path:
    ResourceID := option. ResourceID
    PropertyID := option. PropertyID

half_path<public> := class<concrete>():
    @editable ResourceID<public>:?string = false
    @editable PropertyID<public>:?string = false
    @editable ResourcePath<public>:?half_path = false
    @editable PropertyPath<public>:?half_path = false

ToString<public>(P:prop_path):string= "[{P.ResourceID}.{P.PropertyID}]"
prop_path<public> := class<concrete>():
    @editable ResourceID<public>:string = ""
    @editable PropertyID<public>:string = ""

CopyEffect<public><constructor>(Old:effect) := effect:
    FN := Old.FN
    Focus := Old.Focus
    Tweak := Old.Tweak
effect<public> := class<concrete>():
    @editable FN<public>:string = ""
    Focus<public>:half_path = half_path{}
    Tweak<public>:half_path = half_path{}

    To<public>(PropID:string):effect= To(Path(PropID))
    To<public>(ResID:string, PropID:string):effect= To(Path(ResID, PropID))
    To<public>(T:half_path):effect= effect:
        CopyEffect<constructor>(Self)
        Tweak := T

    By<public>(PropID:string):effect= By(Path(PropID))
    By<public>(ResID:string, PropID:string):effect= By(Path(ResID, PropID))
    By<public>(T:half_path):effect= effect:
        CopyEffect<constructor>(Self)
        Tweak := T

    As<public>(PropID:string):effect= As(Path(PropID))
    As<public>(ResID:string, PropID:string):effect= As(Path(ResID, PropID))
    As<public>(T:half_path):effect= effect:
        CopyEffect<constructor>(Self)
        Tweak := T

effector<public> := interface():
    Play<public>(Source:string, Activator:string, Focus:prop_path, Tweak:prop_path)<suspends>:?[]command

prop_int<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:int = 0
    GetType<override>()<computes>:prop_type = prop_type.Integer
    GetFN<override>()<computes>:string = FN

prop_float<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:float = 0.0
    GetType<override>()<computes>:prop_type = prop_type.Float
    GetFN<override>()<computes>:string = FN

prop_num<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:num = num{}
    GetType<override>()<computes>:prop_type = prop_type.Num
    GetFN<override>()<computes>:string = FN

prop_str<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:string = ""
    GetType<override>()<computes>:prop_type = prop_type.Str
    GetFN<override>()<computes>:string = FN

prop_bool<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:logic = false
    GetType<override>()<computes>:prop_type = prop_type.Bool
    GetFN<override>()<computes>:string = FN

prop_vec2<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:vector2 = vector2{}
    GetType<override>()<computes>:prop_type = prop_type.Vec2
    GetFN<override>()<computes>:string = FN

prop_vec3<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    @editable Default<public>:vector3 = vector3{}
    GetType<override>()<computes>:prop_type = prop_type.Vec3
    GetFN<override>()<computes>:string = FN

prop_agent<public> := class<concrete>(prop):
    @editable ID<public>:string = ""
    @editable Focus<public>:half_path = half_path{}
    @editable FN<public>:string = ""
    @editable Tweak<public>:half_path = half_path{}
    Default<public>:?agent = false
    GetType<override>()<computes>:prop_type = prop_type.Agent
    GetFN<override>()<computes>:string = FN

prop_type<public> := enum:
    Integer
    Num
    Str
    Bool
    Float
    Agent
    Vec2
    Vec3
    Unknown

prop<public> := interface:
    GetType<public>()<computes>:prop_type
    GetFN<public>()<computes>:string

ToString<public>(Type:prop_type):string = case(Type):
    prop_type.Integer => "Int"
    prop_type.Num => "Num"
    prop_type.Str => "Str"
    prop_type.Bool => "Bool"
    prop_type.Float => "Float"
    prop_type.Agent => "Agent"
    prop_type.Vec2 => "Vec2"
    prop_type.Vec3 => "Vec3"
    prop_type.Unknown => "Unknown"
