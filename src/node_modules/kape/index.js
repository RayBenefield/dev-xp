import callsite from 'callsite';
import serialize from 'pretty-format';
import transmute from 'transmutation';

export const run = (suite, subject, examples) => {
    const tests = [];
    const it = (test, setup) => {
        let inputs = [];
        const given = args => {
            inputs = [...inputs, ...args];
        };
        setup(given);
        inputs.forEach((input, index) =>
            tests.push({
                test,
                index,
                input,
            }),
        );
    };
    examples(it);
    return transmute({ suite }).extend(
        'results',
        Promise.all(
            tests.map(
                transmute()
                    .extend('result', ({ input }) =>
                        Promise.resolve(subject(...input)),
                    )
                    .extend('snapshot', ({ result }) => serialize(result)),
            ),
        ),
    );
};

export default (...args) => {
    run(...args)
        .extend('testFile', callsite()[1].getFileName())
        .log('Tests from: ', 'testFile')
        .log('results')
        .extend('fileContents', ({ results }) =>
            results.reduce(
                (all, { test, index, snapshot }) => `
${all}
exports[\`${test} ${index}\`] = \`
${snapshot}
\`;
`,
                '',
            ),
        )
        .then(({ fileContents }) => console.log(fileContents));
};
