import { input } from 'runic'
import * as _ from '@dev-xp/utils'
import symbol from '@sigils/symbols'
import { capitalCase } from 'change-case'
import createRune from '@sigils/create-rune'

const makeRune = (params, name) =>
    createRune({
        name: capitalCase(name),
        symbol: symbol.function,
        fn: _[name],
        params,
    })

const runes = {
    add: [input.number('Operand A'), input.number('Operand B')],
    always: [input.any('constant')],
    dec: [input.number('Number')],
    divide: [input.number('Dividend'), input.number('Divisor')],
    inc: [input.number('Number')],
    mathMod: [input.number('Dividend'), input.number('Divisor')],
    modulo: [input.number('Dividend'), input.number('Divisor')],
    multiply: [input.number('Operand A'), input.number('Operand B')],
    negate: [input.number('Number')],
    subtract: [input.number('Operand A'), input.number('Operand B')],
    applyTo: [input.any('Value'), input.function('Thrush')],
}

export default _.mapObjIndexed(makeRune, runes)
