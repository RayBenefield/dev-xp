import { isObject, isArray, mapKeys, mapValues, camelCase } from 'lodash'

const camelCaseKeys = obj => {
    if (isArray(obj)) return obj.map(camelCaseKeys)

    if (isObject(obj)) {
        const newObj = mapValues(obj, camelCaseKeys)
        return mapKeys(newObj, (_, key) => camelCase(key))
    }

    return obj
}

export const results = method => (...args) => {
    const result = method(...args)
    return result.then ? result.then(camelCaseKeys) : camelCaseKeys(result)
}

export const methods = list => object =>
    mapValues(
        object,
        (method, key) => (list.indexOf(key) >= 0 ? results(method) : method)
    )

camelCaseKeys.results = results
camelCaseKeys.methods = methods

export default camelCaseKeys
