
using { /Fortnite.com/UI }
using { /UnrealEngine.com/Temporary/UI }

using { Goo }
using { Vertex }

gooey_button<public> := class(gooey):
    DefaultText<public>:string = ""
    TextGoo<public>:string_goo = string_goo{}
    EnabledGoo<public>:bool_goo = bool_goo. Latest := true
    VisibleGoo<public>:bool_goo = bool_goo. Latest := true
    Button<public>:text_button_base = button_regular{}
    Action<public>:type{_():void} = NOOP

    Initialize<override>():widget=
        Button.OnClick().Subscribe(OnPressed)
        spawn. KeepUpdated()
        Button

    KeepUpdated()<suspends>:void=
        MessageVM := message_goo. VM := Map(TextGoo, Str2Msg)
        Default := if (TextGoo.Latest <> ""). TextGoo.Latest else. DefaultText
        Button.SetText(Str2Msg(Default))
        Button.SetEnabled(EnabledGoo.Latest)
        Button.SetVisibility(if (VisibleGoo.Latest?). widget_visibility.Visible else. widget_visibility.Collapsed)
        loop:
            if (1 = 0). break
            race:
                block:
                    Msg := MessageVM.UpdatedEvent().Await()
                    Button.SetText(Msg)
                block:
                    Enabled := EnabledGoo.UpdatedEvent().Await()
                    Button.SetEnabled(Enabled)
                block:
                    Visible := VisibleGoo.UpdatedEvent().Await()
                    Button.SetVisibility(if (Visible?). widget_visibility.Visible else. widget_visibility.Collapsed)

    OnPressed(Msg:widget_message):void = Action()
