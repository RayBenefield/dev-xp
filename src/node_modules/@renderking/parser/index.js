import P from 'parsimmon';

const ltag = P.string('<');
const rtag = P.string('>');
const close = P.string('/');

const identifier = P.regexp(/[a-z_][a-z0-9_]*/i);

export default unparsed => {
    if (!unparsed) return [];

    const king = P.createLanguage({
        empty: () => P.seqObj(ltag, ['tag', identifier], close, rtag),
        not: () => P.regexp(/[^<]+/),
        text: r => P.alt(ltag, r.not),
        tag: r => P.alt(r.empty),
        tagNode: r => r.tag.map(result => ({ type: 'tag', ...result })),
        textNode: r => r.text.map(text => ({ type: 'text', text })),
        value: r => P.alt(r.tagNode, r.textNode).many(),
    });

    return king.value.tryParse(unparsed);
};
