import P from 'parsimmon';

export const king = P.createLanguage({
    ltag: () => P.string('<'),
    rtag: () => P.string('>'),
    close: () => P.string('/'),
    not: () => P.regexp(/[^<]+/),
    identifier: () => P.regexp(/[a-z_][a-z0-9_]*/i),
    empty: r => P.seqObj(r.ltag, ['tag', r.identifier], r.close, r.rtag),
    text: r => P.alt(r.ltag, r.not),
    tag: r => P.alt(r.empty),
    tagNode: r => r.tag.map(result => ({ type: 'tag', ...result })),
    textNode: r => r.text.map(text => ({ type: 'text', text })),
    value: r => P.alt(r.tagNode, r.textNode).many(),
});

export default unparsed => (!unparsed ? [] : king.value.tryParse(unparsed));
