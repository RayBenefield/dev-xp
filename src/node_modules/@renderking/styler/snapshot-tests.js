import describe from 'kape';
import styler from '@renderking/styler';

const tagNode = t => ({ type: 'tag', tag: t });
const textNode = t => ({ type: 'text', text: t });
const tag = t => ({ node: tagNode(t) });
const text = t => ({ node: textNode(t) });
const prevNext = (a, b) => ({ previous: a, node: b });

describe('RenderKing Styler with No Style', styler(), snapshot =>
    snapshot([], [{}], [tag()], [tag('nostyle')], [text()], [text('nostyle')]),
);

describe(
    'RenderKing Styler with value style',
    styler({ bar: { value: '────' } }),
    snapshot => snapshot([tag()], [tag('nostyle')], [tag('bar')]),
);

describe(
    'RK Styler with display none',
    styler({ bar: { value: '────', display: 'none' } }),
    snapshot => snapshot([tag()], [tag('nostyle')], [tag('bar')]),
);

describe(
    'RK Styler with font style',
    styler({ bar: { value: '────', font: 'blue.bold.bgRed' } }),
    snapshot =>
        snapshot(
            [tag()],
            [tag('nostyle')],
            process.env.CI ? false : [tag('bar')],
        ),
);

describe(
    'RK Styler with display block',
    styler({ bar: { value: '────', display: 'block' } }),
    snapshot =>
        snapshot(
            [tag()],
            [tag('nostyle')],
            [tag('bar')],
            [prevNext({ value: 'before\n' }, tagNode('bar'))],
        ),
);
