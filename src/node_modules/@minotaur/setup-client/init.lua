local ABGS = require(script:GetCustomProperty("API"))
local poiApi = require(script:GetCustomProperty("APIPointOfInterest"))
local weaponWaypoint = script:GetCustomProperty("PointOfInterest"):WaitForObject()
local minotaurName = script:GetCustomProperty("minotaur_name"):WaitForObject()

local minotaur

Game.playerJoinedEvent:Connect(function(player)
    if Game.GetLocalPlayer() == player then
        print('letting server know we are ready')
        Events.BroadcastToServer('ready')
    end
end)

Events.Connect('maze-data', function(seed, mazeSize, tileSize, template)
    print('server sent maze data...')
    Events.Broadcast('generate-maze', {
        seed = seed,
        mazeSize = mazeSize,
        tileSize = tileSize,
        template = template,
    })
end)

local weaponWaypointHandle
Events.Connect('PointOfInterestAdded', function(handle, poi)
    if poi.name == weaponWaypoint:GetCustomProperty("Name") then
        weaponWaypointHandle = handle
    end
end)

Events.Connect('minotaur-phase', function(player)
    poiApi.RemovePointOfInterest(weaponWaypointHandle)
    minotaur = player

    minotaurName.text = minotaur.name .. ' is the Minotaur'
    for _, attachment in ipairs(minotaur:GetAttachedObjects()) do
        print(attachment.name)
        if (attachment.name == 'Helper_Nameplate') then
            print('hide nameplate')
            print(attachment.visibility)
            attachment.visibility = Visibility.FORCE_OFF
            print(attachment.visibility)
        end
    end
end)

Events.Connect('GameStateChanged', function(oldState, newState, hasDuration, endTime)
    if (minotaur ~= nil) then
        for _, attachment in ipairs(minotaur:GetAttachedObjects()) do
            if (attachment.name == 'Helper_Nameplate') then
                attachment.visibility = Visibility.FORCE_ON
            end
        end
        minotaurName.text = ''
        minotaur = nil
    end
end)

Events.Connect('sword-spawned', function(weaponRef)
    local weapon = weaponRef:WaitForObject()
    poiApi.AddPointOfInterestObject(weapon, weaponWaypoint:GetCustomProperty("Name"))
end)
