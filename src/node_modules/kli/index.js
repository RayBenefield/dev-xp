import every from 'lodash.every'
import createDecider from '@kli-tool/decider'
import createExecutor from '@kli-tool/executor'

const configureKli = ({
    defaultStyle = {},
    defaultRenderer = console.log, // eslint-disable-line no-console
} = {}) => ({
    default: proposedDefault,
    config = {},
    commands: rawCommands = [],
    cleanse = {},
} = {}) => {
    if (!Array.isArray(rawCommands))
        throw new Error('Commands must be an array')
    if (rawCommands.length <= 0) throw new Error('No commands defined')
    if (!every(rawCommands, command => 'name' in command))
        throw new Error('Not every command has a name')

    rawCommands.forEach(c => {
        if (typeof c.run !== 'function')
            throw new Error('All commands must have a run method')
    })

    const decider = createDecider({ commands: rawCommands, proposedDefault })
    const execute = createExecutor({
        config,
        defaultStyle,
        defaultRenderer,
        decider,
        cleanse,
    })

    return { execute }
}

export const configure = configureKli
export const kli = configureKli()

export default configureKli()
