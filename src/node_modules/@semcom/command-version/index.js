import { isolate } from 'transmutation';

import setupGit from '@kikd/ci-setup-git';
import deployGit from '@kikd/ci-deploy-git';
import getChanges from '@semcom/command-changes';
import getDependencies from '@kikd/command-deps';
import updatePackages from '@kikd/update-packages';
import template from '@semcom/template-update-packages';
import recommendVersions from '@semcom/recommend-version';
import getPublishablePackages from '@kikd/command-publish';

const { CI } = process.env;

export default function version(...args) {
    return getPublishablePackages(...args)
        .extend(getChanges(...args).then(isolate(['changes', 'latest'])))
        .extend(
            'dependencies',
            getDependencies(...args).then(isolate('dependencies')),
        )
        .extend('updates', recommendVersions);
}

export const command = {
    name: 'version',
    aliases: ['update'],
    run: version,
    template,
    effect: (...args) => {
        if (!CI)
            throw new Error(
                'Committing new versions should only happen in CI.',
            );

        return setupGit()
            .then(() => updatePackages(...args))
            .then(() => deployGit());
    },
};
