import { resolve } from 'path'

import { copy } from '@dev-xp/fs'
import config from '@kikd-core/config'
import manifest from '@kikd-core/manifest'
import resolveName from '@dev-xp/resolve-name'

const type = 'core-game'

export const corespecJson = (root, srcDir, files) =>
    files.includes('corespec.json')
        ? // eslint-disable-next-line global-require, import/no-dynamic-require
          require(resolve(root, srcDir, 'corespec.json'))
        : false

export const filter = ({ root = '.', srcDir = '.', files = [] }) => {
    const manifestData = corespecJson(root, srcDir, files)
    return manifestData
}

export default {
    type,
    manifest,
    config,
    filter,
    build: () => {},
    postBuild: ({ config: { dependencies, root, destDir } }) =>
        Promise.all(
            dependencies.map(pkg =>
                copy(
                    resolve(root, 'dist', pkg, `${resolveName(pkg)}.lua`),
                    resolve(destDir, `${resolveName(pkg)}.lua`)
                )
            )
        ),
}
