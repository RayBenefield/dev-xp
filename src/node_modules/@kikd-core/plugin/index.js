import { resolve } from 'path'

import { copy } from '@dev-xp/fs'
import config from '@kikd-core/config'
import winRoot from '@dev-xp/win-root'
import manifest from '@kikd-core/manifest'

const type = 'core-game'

export const corespecJson = (root, srcDir, files) =>
    files.includes('corespec.json')
        ? // eslint-disable-next-line global-require, import/no-dynamic-require
        require(resolve(root, srcDir, 'corespec.json'))
        : false

export const filter = ({ root = '.', srcDir = '.', files = [] }) => {
    const manifestData = corespecJson(root, srcDir, files)
    return !!manifestData
}

export default {
    type,
    manifest,
    config,
    filter,
    build: () => {},
    postBuild: ({ config: { root, externals } }) =>
        Promise.all(
            externals.map(({ src, dest, file }) =>
                copy(resolve(root, src), resolve(winRoot('Ray'), dest, file))
            )
        ),
}
