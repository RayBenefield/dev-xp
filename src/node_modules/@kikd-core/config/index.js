import map from 'lodash.map'
import partition from 'lodash.partition'
import resolveName from '@dev-xp/resolve-name'
import findPackages from '@kikd/find-packages'
import getStructures from '@kikd/package-structure'

const type = 'core-game'

const docs = 'Dropbox/My PC (Ray-PC)/Documents'
const coreDir = 'My Games/CORE/Saved/Maps'
const scriptsDir = 'Data/Scripts'

export default async ({
    manifest: { name: folder, dependencies },
    structure: { name, root, srcDir },
}) => {
    const destDir = `${docs}/${coreDir}/${folder}/${scriptsDir}`

    const isNamespace = dep => dep.startsWith('@') && dep.indexOf('/') < 0
    const [include, exact] = partition(dependencies, isNamespace)
    const namespaced = await findPackages({ root, include })

    const deps = [...exact, ...namespaced]
    const depStructures = getStructures({ root, packageNames: deps })
    const depPosts = map(depStructures, post => ({ type: 'lua-rock', post }))

    const externals = map(depStructures, ({ name: ex, destDir: exDest }) => ({
        src: `${exDest}/init.lua`,
        file: `${resolveName(ex)}.lua`,
        dest: destDir,
    }))
    const post = { root, name, srcDir, destDir, externals }

    return [...depPosts, { type, post }]
}
