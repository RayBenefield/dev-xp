
using. /UnrealEngine.com/Temporary/SpatialMath

using. Vertex

Str2Msg<localizes><public>(Str:string):message := "{Str}"

(Array:[]string).Join<public>(Joiner:string)<computes>:string = Join(Array, Joiner)

ConcatenateMessages<localizes><public>(Message1:message, Message2:message):message=
    "{Message1}{Message2}"

operator'+'<public>(Lhs:message, Rhs:message):message=
    ConcatenateMessages(Lhs, Rhs)

NL<localizes><public>():message := "\n"

# ToString<public>(Strs:[]string):string= Strs.DebugString("ARRAY")
(Vec3s:[string]vector3).Vec3MapToStringMap<public>()<transacts>:[string]string= CreateMap of for(K->V:Vec3s). (K, "{V}")
(Strs:[]string).ToString<public>()<transacts>:string= Strs.DebugString("ARRAY")
(Strs:[]string).DebugString<public>(Label:string)<transacts>:string=
    StrMap := CreateMap of for (Index->Str:Strs). ("{Index}", Str)
    StrMap.DebugStringMap(Label)
(Strs:[string]string).DebugStringMap<public>(Label:string)<transacts>:string=
    if (Strs.Length <= 0). return "[EMPTY {Label}]"
    var Full:string = Tab("[{Label}]")
    for (K->Str:Strs). set Full += WithIndent("[{K}] {Str}")
    Full + EndTab()

pairs<public> := enum{ Square, Curly, Parens, Angle }
Encloser<public><constructor>(Pair:pairs)<transacts> := encompasser. Pair := Pair
Encompass<public>(Before:string, Item:string, After:string)<computes>:string = "{Before}{Item}{After}"
encompasser<public> := class():
    Pair<public>:pairs
    FN<public>(Item:string)<computes>:string = case(Pair):
        pairs.Square => Encompass("[", Item, "]")
        pairs.Curly => Encompass("\{", Item, "\}")
        pairs.Parens => Encompass("(", Item, ")")
        pairs.Angle => Encompass("<", Item, ">")

Prefixer<public><constructor>(Before:string)<transacts> := joiner. Before := Before
Suffixer<public><constructor>(After:string)<transacts> := joiner. After := After
Surrounder<public><constructor>(Surrounding:string) := joiner{ Before := Surrounding, After := Surrounding }
joiner<public> := class():
    Before<public>:string = ""
    After<public>:string = ""
    FN<public>(Item:string)<computes>:string = Encompass(Before, Item, After)
