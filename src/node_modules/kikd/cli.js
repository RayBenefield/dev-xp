/* eslint-disable max-lines */
import 'loud-rejection/register';
// eslint-disable-next-line no-unused-vars
import { configure, jsonRender } from 'kli';

import { command as deps } from '@kikd/command-deps';
import { command as list } from '@kikd/command-list';
import { command as build } from '@kikd/command-build';
import { command as check } from '@kikd/command-check';
import { command as changes } from '@kikd/command-changes';
import { command as publish } from '@kikd/command-publish';
import { command as prerelease } from '@kikd/command-prerelease';

import style from '@kikd/cli-style';
import updatePackagesTemplate from '@kikd/template-update-packages';

import version from '@kikd/command-version';

import updatePackages from '@kikd/update-packages';
import setupGit from '@kikd/ci-setup-git';
import deployGit from '@kikd/ci-deploy-git';

const { CI } = process.env;
const kli = configure({ defaultStyle: CI ? {} : style });

const cli = kli({
    commands: [
        build,
        changes,
        check,
        deps,
        list,
        prerelease,
        publish,
        {
            name: 'version',
            aliases: ['update'],
            template: updatePackagesTemplate,
            run: version,
            effect: (...args) => {
                if (!CI)
                    throw new Error(
                        'Committing new versions should only happen in CI.',
                    );

                return setupGit()
                    .then(() => updatePackages(...args))
                    .then(() => deployGit());
            },
        },
    ],
});

cli.execute(process.argv.slice(2));
