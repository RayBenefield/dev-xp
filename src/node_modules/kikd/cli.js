/* eslint-disable max-lines */
import '@dev-xp/config'
import { configure } from 'kli'
import 'loud-rejection/register'
import style from '@kikd/cli-style'
import luaRock from '@kikd-lua/plugin'
import vueSite from '@kikd-vue/plugin'
import vueComponent from '@kikd-vue/component-plugin'
import coreGame from '@kikd-core/plugin'
import entyrePackage from '@entyre/kikd-plugin'
import npmCli from '@kikd/plugin-build-npm-cli'
import { NOOP, NOOBJ, NOSTR } from '@dev-xp/noop'
import { command as deps } from '@kikd/command-deps'
import { command as init } from '@kikd/command-init'
import { command as list } from '@kikd/command-list'
import { command as create } from '@kikd/command-new'
import { command as build } from '@kikd/command-build'
import { command as check } from '@kikd/command-check'
import npmPackage from '@kikd/plugin-build-npm-package'
import { command as publish } from '@kikd/command-publish'
import { command as changes } from '@semcom/command-changes'
import { command as version } from '@semcom/command-version'
import { command as prerelease } from '@semcom/command-prerelease'

const { CI } = process.env
const kli = configure({ style: CI ? {} : style })

const cli = kli({
    config: {
        name: 'kikd',
        plugins: [
            npmPackage,
            npmCli,
            vueSite,
            vueComponent,
            entyrePackage,
            luaRock,
            coreGame,
        ],
        plugs: {
            filter: NOOP,
            manifest: NOOP,
            details: NOOBJ,
            build: NOOP,
            postBuild: NOOP,
            config: NOOP,
            preCreate: NOOBJ,
            create: NOOP,
            createTemplate: NOSTR,
        },
    },
    default: 'initialize',
    commands: [
        build(),
        changes(),
        check(),
        create(),
        deps(),
        init(),
        list(),
        prerelease(),
        publish(),
        version(),
    ],
})

cli.execute(process.argv.slice(2))
