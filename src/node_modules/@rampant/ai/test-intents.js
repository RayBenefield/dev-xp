import { green, grey } from 'chalk'

const success = msg => `    ${green('âœ”')} ${grey(msg)}`

export const intents = [
    {
        name: 'logTest',
        sources: [{}],
        defaults: { message: success('Log effects work') },
        effects: [{ log: '{params.message}' }],
    },
    {
        name: 'vote',
        sources: [{}],
        defaults: {
            doc: 'votes',
            data: { dusty: 1 },
            message: success('Database effects work'),
        },
        effects: [
            { db: { doc: '{params.doc}', data: '{params.data}' } },
            { log: '{params.message}' },
        ],
    },
    {
        name: 'voteResults',
        sources: [{ db: 'votes' }],
        defaults: {
            doc: 'vote-results',
            data: { dusty: 1 },
            message: success('Database sources work'),
        },
        effects: [
            { db: { doc: '{params.doc}', data: '{params.data}' } },
            { log: '{params.message}' },
        ],
    },
    {
        name: 'staticPipeline',
        sources: [{}],
        pipeline: [
            {
                type: 'static',
                key: 'message',
                value: success('Static pipes work'),
            },
        ],
        effects: [{ log: '{message}' }],
    },
    {
        name: 'basicTemplateTest',
        sources: [{}],
        defaults: {
            greeting: 'Hello',
            subject: 'World',
        },
        pipeline: [
            {
                type: 'static',
                key: 'message',
                value: success(
                    'Basic templating works ({{$.params.greeting}} {{$.params.subject}}!)'
                ),
            },
        ],
        effects: [{ log: '{message}' }],
    },
    {
        name: 'advancedTemplateTest',
        sources: [{}],
        defaults: {
            votes: {
                raymond: 'dusty',
                jessica: 'retail',
                stephanie: 'dusty',
            },
        },
        pipeline: [
            {
                type: 'static',
                key: 'results',
                value: `{% const tally = votes =>
                    JSON.stringify(
                        Object.entries(votes).reduce(
                            (all, [, vote]) => ({
                                ...all,
                                [vote]: vote in all ? all[vote] + 1 : 1,
                            }),
                            {}
                        )
                    );
                %}{{ tally($.params.votes) }}`,
            },
            {
                type: 'static',
                key: 'message',
                value: success('Advanced templating works ({{$.results}})'),
            },
        ],
        effects: [{ log: '{message}' }],
    },
    {
        name: 'parseIntTest',
        sources: [{}],
        defaults: {
            first: 2,
            second: 3,
        },
        pipeline: [
            {
                type: 'static',
                key: 'total',
                parse: 'number',
                value: `{{ $.params.first + $.params.second }}`,
            },
            {
                type: 'static',
                key: 'message',
                value: success(
                    'Parsing as an integer works ({{ $.total }} is of type {{ typeof $.total }})'
                ),
            },
        ],
        effects: [{ log: '{message}' }],
    },
    {
        name: 'parseObjectTest',
        sources: [{}],
        defaults: {
            stringified: '{"dusty":2,"retail":1}',
        },
        pipeline: [
            {
                type: 'static',
                key: 'object',
                parse: 'object',
                value: `{{ $.params.stringified }}`,
            },
            {
                type: 'static',
                key: 'message',
                value: success(
                    'Parsing as an object works ({{ $.params.stringified }} is of type {{ typeof $.object }})'
                ),
            },
        ],
        effects: [{ log: '{message}' }],
    },
]

export const cleanupDocs = ['votes', 'vote-results']
