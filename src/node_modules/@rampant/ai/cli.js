import find from 'lodash.find'
import { config } from 'dotenv'
import createDb from '@rampant/db'
import sort from '@rampant/topological-sort'
import mixerPlugin from '@rampant-mixer/plugin'
import createIntentEngine from '@rampant/engine'
import { mergeMap, map } from 'rxjs/operators'
import serialPromise from '@rampant/serial-promise'

config()

const { MIXER_CLIENT_ID } = process.env

export const db = createDb('rampant-ai')
export const mixer = mixerPlugin({ clientId: MIXER_CLIENT_ID, db })
export const intentEngine = createIntentEngine({
    db,
    plugins: {
        mixer,
    },
})

db
    .get('projects/testing')
    .then(({ sources }) => {
        const dependencyList = sources.reduce(
            (list, { name, dependencies = [] }) => ({
                ...list,
                [name]: dependencies,
            }),
            {}
        )
        return sort(dependencyList)
            .map(sourceName => find(sources, { name: sourceName }))
            .map(source => () => intentEngine.addSource(source))
    })
    .then(sources => serialPromise(sources))
    .then(() =>
        db
            // TODO: Replace `testing` with Project ID
            .onCollectionChange('projects/testing/intents')
            .pipe(
                map(change => ({
                    id: change.doc.id,
                    type: change.type,
                    new: change.doc.data(),
                })),
                mergeMap(({ id, type, new: newValue }) => {
                    if (type === 'added')
                        return intentEngine.addIntent(id, newValue)
                    if (type === 'removed')
                        return Promise.resolve(intentEngine.removeIntent(id))

                    return Promise.resolve
                }, 1)
            )
            .subscribe()
    )
