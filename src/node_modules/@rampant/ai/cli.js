import { of, from, merge } from 'rxjs'
import { tap, mergeMap } from 'rxjs/operators'

from([
    {
        name: 'test',
        sources: [{}],
        effects: [{ log: 'works' }, { log: 'other stuff' }],
    },
    {
        name: 'secondTest',
        sources: [{}],
        effects: [{ log: 'from second' }],
    },
])
    .pipe(
        mergeMap(intent => {
            const sources = intent.sources.map(() => {
                const payload = { intent: intent.name }
                return of({
                    ...payload,
                    context: { source: { type: 'blank' } },
                })
            })
            const effects = intent.effects.map(effect => {
                if (effect.log) return tap(console.log(effect.log))
                return tap()
            })
            return merge(...sources).pipe(...effects)
        })
    )
    .subscribe(console.log)
