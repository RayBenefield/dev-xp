import { stringify } from 'javascript-stringify'
import winston from 'winston'

const {
    createLogger: createWinstonLogger,
    transports,
    format,
    addColors,
} = winston
const { combine, timestamp, colorize, printf } = format

const cliFormat = printf(
    ({ level, message, plugin, intent, timestamp: msgTimestamp }) =>
        `${msgTimestamp} ${level}${plugin ? ` [${plugin}]` : ''}${
            intent ? ` [${intent}]` : ''
        }: ${message}`
)

const rampant = {
    levels: {
        error: 0,
        warn: 1,
        platform: 2,
        plugin: 3,
        intent: 4,
        extend: 5,
        detail: 6,
        debug: 7,
    },
    colors: {
        error: 'red',
        warn: 'yellow',
        platform: 'green',
        plugin: 'cyan',
        intent: 'green',
        extend: 'cyan',
        detail: 'blue',
        debug: 'magenta',
    },
}

addColors(rampant.colors)

export const prettify = obj => `\n${stringify(obj, null, '    ')}`

export const createStub = () =>
    createWinstonLogger({
        levels: rampant.levels,
        transports: [new transports.Console({ silent: true })],
    })

export const createLogger = ({ level }) => {
    const config = logLevel => ({
        levels: rampant.levels,
        format: combine(timestamp(), colorize(), cliFormat),
        transports: [new transports.Console({ level: logLevel })],
    })

    const logger = createWinstonLogger(config(level))
    logger.changeLevel = ({ level: logLevel }) =>
        logger.configure(config(logLevel))

    return logger
}

export default createLogger
