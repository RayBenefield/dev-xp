import fs from 'fs'
import readline from 'readline'

import argv from 'argv'
import { fromEvent } from 'rxjs'
import sanitize from '@rampant-wit/sanitize'
import { map, take, takeUntil } from 'rxjs/operators'

argv.version('v0.0.0')
argv.info('Migrate a file of logged guesses to the database.')

argv.option([
    {
        name: 'path',
        short: 'p',
        type: 'path',
        description: 'What file should be used to fill the database',
        example: '--path=/path/to/file',
    },
])

const { options: { path } } = argv.run()

const rl = readline.createInterface({
    input: fs.createReadStream(path),
})

// eslint-disable-next-line no-new-func
const looseJsonParse = obj => Function(`"use strict";return (${obj})`)()

fromEvent(rl, 'line')
    .pipe(
        takeUntil(fromEvent(rl, 'close')),
        map(line => looseJsonParse(line)),
        map(({ message, value, confidence }) => ({
            key: sanitize(message),
            contents: {
                intent: value === 'Unknown' ? [] : [{ value, confidence }],
            },
        })),
        take(5)
    )
    .subscribe(console.log)
