import { merge } from 'rxjs'
import { map, catchError } from 'rxjs/operators'
import createPipeline from '@rampant/pipeline-creator'
import createEffects from '@rampant/effect-creator'

import reportBroken from './report'

export default ({ db, mixerChat }) => ({ sourcePool, intent }) => {
    const sources = intent.sources.map(
        ({ type = 'blank', name = 'empty' }) => sourcePool[type][name]
    )
    const pipeline = intent.pipeline
        ? intent.pipeline.map(createPipeline())
        : []
    const effects = intent.effects.map(createEffects({ db, mixerChat }))

    return merge(...sources).pipe(
        map(({ source, params = {} }) => ({
            intent: intent.name,
            context: {
                source,
                params: {
                    ...intent.defaults,
                    ...params,
                },
            },
        })),
        ...pipeline,
        ...effects,
        catchError(reportBroken(intent))
    )
}
