import { merge } from 'rxjs'
import { map, catchError } from 'rxjs/operators'
import createPipeline from '@rampant/pipeline-creator'
import createEffects from '@rampant/effect-creator'

import reportBroken from './report'

export default ({ db, mixerChat }) => ({ sourcePool: pool, intent }) => {
    const { defaults = {}, sources = [], pipeline = [], effects = [] } = intent

    const fromPool = ({ type = 'blank', name = 'empty' }) => pool[type][name]
    const intentSources = sources.map(fromPool)
    const extenders = pipeline.map(createPipeline())
    const sideEffects = effects.map(createEffects({ db, mixerChat }))

    return merge(...intentSources).pipe(
        map(({ source, params = {} }) => ({
            intent: intent.name,
            context: {
                source,
                params: {
                    ...defaults,
                    ...params,
                },
            },
        })),
        ...extenders,
        ...sideEffects,
        catchError(reportBroken(intent))
    )
}
