/* eslint-disable no-console */
import fs from 'fs';
import execa from 'execa';
import { resolve } from 'path';
import registryUrl from 'registry-url';
import localOrHomeNpmrc from 'local-or-home-npmrc';

const registry = registryUrl();

const setAuthToken = root =>
    new Promise((res, rej) => {
        process.chdir(root);
        const npmrcFile = localOrHomeNpmrc();
        if (!fs.existsSync(npmrcFile))
            rej('For some reason no npmrc file exists.');

        const test = registry.replace('https', '').replace('http', '');
        // eslint-disable-next-line prefer-template, no-template-curly-in-string
        const token = test + '${NPM_TOKEN}';
        // eslint-disable-next-line prefer-template
        const contents = fs.readFileSync(npmrcFile, 'utf-8').trim() + '\n';

        if (contents.indexOf(token) !== -1) {
            console.log('Just checked... .npmrc already has the token.');
            return res();
        }

        if (contents.indexOf(test) !== -1) {
            console.error('The .npmrc already has a token for this registry.');
            console.error(test);
            return rej(`Auth token for registry exists ${test}`);
        }

        return res(
            fs.writeFileSync(npmrcFile, `${contents}${token}\n`, 'utf-8'),
        );
    });

export default ({ root, publishable }) =>
    setAuthToken(root).then(() =>
        Promise.all(
            publishable.map(({ name }) => {
                process.chdir(resolve(root, 'dist', name));
                console.log(`Publishing [${name}]...`);
                return execa('npm', ['publish', '--registry', registry])
                    .then(result => console.log(result.stdout))
                    .catch(console.log);
            }),
        ),
    );
