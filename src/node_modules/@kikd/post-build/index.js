import cpx from 'cpx';
import pick from 'lodash.pick';
import { resolve } from 'path';
import jsonFile from 'jsonfile';
import promisify from 'es6-promisify';

const copy = promisify(cpx.copy);
const writeJson = promisify(jsonFile.writeFile);
const requiredProps = [
    'description',
    'homepage',
    'author',
    'repository',
    'bugs',
    'license',
    'dependencies',
];

export default ({ root, baseConfig, config }) => () =>
    Promise.all([
        copy(resolve(root, 'LICENSE'), resolve(root, config.destDir), {
            dereference: true,
        }),
        copy(
            resolve(root, config.srcDir, 'readme.md'),
            resolve(root, config.destDir),
            {
                dereference: true,
            },
        ),
        writeJson(
            resolve(root, config.destDir, 'package.json'),
            {
                name: config.name,
                ...config.packageConfig,
                ...pick(baseConfig, requiredProps),
            },
            { spaces: 4 },
        ),
    ]);
