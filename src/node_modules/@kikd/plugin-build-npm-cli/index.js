import { resolve } from 'path'

import exec from 'rollup-plugin-executable'
import build from '@kikd/build-rollup'
import postBuild from '@kikd/post-build'
import rollup, { commonPlugins } from '@kikd/rollup-utils'

const banner = '#!/usr/bin/env node'
const type = 'npm-cli-tool'
const plugins = [...commonPlugins, exec()]
const rollupConfig = { type, plugins, banner, format: 'cjs' }
export const packageJson = (srcDir, files) =>
    files.includes('package.json')
        ? // eslint-disable-next-line global-require, import/no-dynamic-require
          require(resolve(srcDir, 'package.json'))
        : false

export default {
    type,
    filter: ({ srcDir = '.', files = [] }) => {
        const manifest = packageJson(srcDir, files)
        return manifest
            ? manifest.bin && manifest.bin.constructor === Object
            : false
    },
    config: snowball =>
        Object.values(snowball.manifest.bin).map(file =>
            rollup({ ...rollupConfig, ...snowball, file })
        ),
    build,
    postBuild,
}
