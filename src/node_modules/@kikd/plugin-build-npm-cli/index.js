import { resolve } from 'path'

import fix from '@kikd/fix-node'
import build from '@kikd/build-rollup'
import check from '@kikd/check-package'
import postBuild from '@kikd/post-build'
import exec from 'rollup-plugin-executable-output'
import getJsDetails from '@kikd/package-details-js'
import rollup, { commonPlugins } from '@kikd/rollup-utils'
import create, { preCreate } from '@kikd/create-cli'

const banner = '#!/usr/bin/env node'
const type = 'npm-cli-tool'
const plugins = [...commonPlugins, exec()]
const rollupConfig = { type, plugins, banner, format: 'cjs' }
export const packageJson = (root, srcDir, files) =>
    files.includes('package.json')
        ? // eslint-disable-next-line global-require, import/no-dynamic-require
        require(resolve(root, srcDir, 'package.json'))
        : false

export default {
    type,
    filter: ({ root = '.', srcDir = '.', files = [] }) => {
        const manifest = packageJson(root, srcDir, files)
        return manifest
            ? manifest.bin && manifest.bin.constructor === Object
            : false
    },
    manifest: getJsDetails,
    config: snowball =>
        Object.values(snowball.manifest.bin).map(file =>
            rollup({ ...rollupConfig, ...snowball, file })
        ),
    build,
    postBuild,
    check,
    fix,
    preCreate,
    create,
    createTemplate: ({ cliPath, executableName, script }) => `
        <attr><key>CLI Path:</key><value>${cliPath}</value></attr>
        <attr><key>Executable Name:</key><value>${executableName}</value></attr>
        <attr><key>Run Script:</key><value>${script}</value></attr>
    `,
}
