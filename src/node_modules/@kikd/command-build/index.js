import { isolate } from 'transmutation'
import template from '@kikd/template-building'
import getPackages from '@kikd/command-list'
import npmCli from '@kikd/plugin-build-npm-cli'
import entyrePackage from '@entyre/kikd-plugin'
import buildPackages from '@kikd/build-packages'
import getDependencies from '@kikd/command-deps'
import vueSite from '@kikd/plugin-build-vue-site'
import npmPackage from '@kikd/plugin-build-npm-package'
import buildRollupConfigs from '@kikd/build-rollup-configs'

const defaultPlugins = [npmPackage, npmCli, vueSite, entyrePackage].reduce(
    (all, plugin) => ({ ...all, [plugin.type]: plugin }),
    {}
)

export default function build(config) {
    const {
        allPackages = false,
        changedAndPublishable = false,
        needsPublishing = false,
        plugins = defaultPlugins,
    } = config

    return getPackages({
        ...config,
        ...(!allPackages && !changedAndPublishable && !needsPublishing
            ? { onlyPublishable: true }
            : {}),
    })
        .extend(
            'dependencies',
            getDependencies(config).then(isolate('dependencies'))
        )
        .extend('configs', buildRollupConfigs(plugins))
}

export const command = () => ({
    name: 'build',
    run: build,
    template,
    effect: buildPackages(defaultPlugins),
    args: {
        _: 'packageNames',
        all: 'allPackages',
        changed: 'changedAndPublishable',
        publishing: 'needsPublishing',
    },
})
