import has from 'lodash.has'
import every from 'lodash.every'
import partial from 'lodash.partial'
import collapse from '@kikd/collapse'
import checkPackage from '@kikd/check-package'

const requiredProps = [
    'description',
    'homepage',
    'author',
    'repository',
    'bugs',
    'license',
    'dependencies',
]
const isIn = obj => partial(has, obj)

export default ({
    rootStructure: { files = [] } = {},
    rootManifest = {},
    packageNames = [],
    structures = {},
    manifests = {},
} = {}) =>
    Promise.all(
        packageNames.map(name =>
            checkPackage({
                structure: structures[name],
                manifest: manifests[name],
            }).then(checks => ({ [name]: checks }))
        )
    )
        .then(checks => checks.reduce(collapse, {}))
        .then(packageChecks => ({
            root: {
                'has root license': files.includes('LICENSE'),
                'has required props': every(requiredProps, isIn(rootManifest)),
            },
            packages: packageChecks,
        }))
