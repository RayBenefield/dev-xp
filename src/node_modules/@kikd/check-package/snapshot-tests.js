import { resolve } from 'path'

import describe from 'kape'
import checkPackage from '@kikd/check-package'

describe('Check Package', checkPackage, snapshot => {
    process.chdir(resolve(__dirname, 'fixtures'))
    const pkg = name => ({
        name,
        structure: { srcDir: name },
        // eslint-disable-next-line global-require, import/no-dynamic-require
        manifest: require(resolve(__dirname, `fixtures/${name}/package.json`)),
    })

    snapshot(
        [],
        [{ name: 'empty-dir', structure: { srcDir: 'empty-dir' } }],
        [pkg('module-empty-package-json')],
        [pkg('no-main')],
        [pkg('main-app-js')],
        [pkg('main-app-js-readme')],
        [pkg('main-app-js-readme-version')],
        [pkg('main-index-js-readme')],
        [pkg('main-index-js-readme-version')],
        [pkg('bin-cli-js')],
        [pkg('bin-cli-js-readme')],
        [pkg('bin-cli-js-readme-version')],
        [pkg('main-app-js-bin-cli-js')],
        [pkg('main-app-js-bin-cli-js-readme')],
        [pkg('main-app-js-bin-cli-js-readme-version')],
        [pkg('main-app-js-wrong-bin-readme')],
        [pkg('wrong-main-bin-cli-js-readme')],
        [pkg('multiple-bins-readme')],
        [pkg('multiple-bins-wrong-main-readme')],
        [pkg('multiple-bins-one-wrong-readme')],
        [pkg('multiple-bins-readme-version')]
    )
})
