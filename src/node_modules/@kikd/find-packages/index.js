import fs from 'fs';
import unglob from 'glob';
import { resolve } from 'path';
import promisify from 'es6-promisify';

const glob = promisify(unglob);
const lstat = promisify(fs.lstat);

export default ({ root = '.' } = {}) => new Promise(async (res, rej) => {
    try {
        const packagesDir = resolve(root, 'src/node_modules');
        const stats = await lstat(packagesDir);

        if (!stats.isDirectory) return rej('NO');
        const packageJsons = await glob(resolve(packagesDir, '**/package.json'));
        const packages = packageJsons
            // eslint-disable-next-line global-require, import/no-dynamic-require
            .map(json => require(json))
            .filter(config => config.name);

        return res(packages);
    } catch (error) {
        return rej('NO');
    }
});
