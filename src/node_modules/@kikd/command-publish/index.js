import deployNpm from '@kikd/ci-deploy-npm';
import getPublishing from '@kikd/publishing';
import checkedPackages from '@kikd/command-check';
import destinationDetails from '@kikd/destination-details';
import template from '@kikd/template-publishable-packages';

export default function publish(...args) {
    return checkedPackages(...args)
        .extend('publishable', ({ packages, checks }) =>
            packages.filter(pkg => checks.packages[pkg.name].publishable),
        )
        .extend('destination', destinationDetails)
        .extend('publishing', getPublishing);
}

export const command = {
    name: 'publish',
    aliases: ['deploy'],
    run: publish,
    template,
    effect: (...args) => {
        const { NPM_TOKEN, GH_USER, GH_EMAIL, GH_REPO, GH_TOKEN } = process.env;

        if (!NPM_TOKEN)
            throw new Error('The NPM_TOKEN env variable must be set!');

        if (!GH_USER) throw new Error('The GH_USER env variable must be set!');
        if (!GH_EMAIL)
            throw new Error('The GH_EMAIL env variable must be set!');
        if (!GH_REPO) throw new Error('The GH_REPO env variable must be set!');
        if (!GH_TOKEN)
            throw new Error('The GH_TOKEN env variable must be set!');

        return deployNpm(...args);
    },
};
