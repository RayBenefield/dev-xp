import transmute from 'transmutation'
import collapse from '@kikd/collapse'
import getContents from '@kikd/prompt-editor'

const solvable = ['has readme file', 'has a version number']
const fixers = {
    'has readme file': name =>
        getContents({
            message: `Write your readme.md for ${name}`,
            contents: `# ${name}`,
        }),
    'has a version number': () => Promise.resolve({ version: '0.0.0' }),
}

export default transmute()
    .extend('fixable', ({ name, checks }) =>
        Object.entries(checks.packages[name])
            .filter(([check]) => solvable.includes(check))
            .filter(([, passing]) => !passing)
            .map(([fixable]) => fixable)
    )
    .extend('fixes', ({ name, fixable }) =>
        Promise.all(
            fixable.map(fix =>
                fixers[fix](name).then(result => ({ [fix]: result }))
            )
        ).then(results => results.reduce(collapse, {}))
    )
