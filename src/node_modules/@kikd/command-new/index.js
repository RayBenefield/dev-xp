import { join } from 'path'

import log from '@dev-xp/log'
import transmute from 'transmutation'
import findRepoRoot from '@dev-xp/root'
import template from '@kikd/template-new'
import { NOOP, NOFN, NOOBJ, NOSTR } from '@dev-xp/noop'
import requestPackageType from '@kikd/request-package-type'
import requestPackageName from '@kikd/request-package-name'

export default function collectInfo(config = {}) {
    const { plug = NOFN } = config
    return transmute({})
        .extend('root', findRepoRoot)
        .extend('rootManifestPath', ({ root }) => join(root, 'package.json'))
        .extend('type', requestPackageType(config))
        .extend('name', requestPackageName(config))
        .extend('packagePath', ({ root, name }) =>
            join(root, 'src/node_modules', name)
        )
        .extend('createFiles', plug('preCreate'))
        .extend('createTemplate', plug('createTemplate'))
}

export const command = () => ({
    name: 'new',
    run: collectInfo,
    template,
    autoCommit: true,
    plugs: { preCreate: NOOBJ, create: NOOP, createTemplate: NOSTR },
    args: { _: 'packageName' },
    effect: ({ plug = NOFN } = {}) => plug('create'),
})
