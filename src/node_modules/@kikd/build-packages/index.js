import rimraf from 'rimraf';
import { resolve } from 'path';
import { rollup } from 'rollup';
import promisify from 'es6-promisify';
import postBuild from '@kikd/post-build';

const removeDir = promisify(rimraf);
const paths = (obj, props = [], root) =>
    props.reduce(
        (finalPaths, prop) => ({
            ...finalPaths,
            [prop]: resolve(root, obj[prop]),
        }),
        {},
    );

export default ({ root, baseConfig, configs = [] } = {}) =>
    removeDir(resolve(root, 'dist')).then(() =>
        Promise.all(
            configs.map(config =>
                rollup({ ...config.in, ...paths(config.in, ['input'], root) })
                    .then(bundle =>
                        Promise.all(
                            config.out.map(output =>
                                bundle.write({
                                    ...output,
                                    ...paths(output, ['file'], root),
                                    exports:
                                        bundle.exports.length > 1 // eslint-disable-line no-nested-ternary
                                            ? 'named'
                                            : bundle.exports.length === 0 // eslint-disable-line no-nested-ternary
                                              ? 'none'
                                              : bundle.exports[0] === 'default'
                                                ? 'default'
                                                : 'named',
                                }),
                            ),
                        ),
                    )
                    .then(postBuild({ root, baseConfig, config: config.post })),
            ),
        ),
    );
