import { join } from 'path'

import dedent from 'dedent'
import { prompt } from 'inquirer'
import { write, mkdir } from '@dev-xp/fs'
import { edit, writeSync as writeJson } from '@dev-xp/json'

export const preCreate = ({ packagePath, name }) =>
    prompt([
        {
            type: 'input',
            name: 'executableName',
            message: 'What should the executable name be?',
            default: name,
        },
        {
            type: 'editor',
            name: 'executableContents',
            message: 'What should the initial contents be for the executable?',
            default: dedent(`
                import log from '@dev-xp/log'

                log('${name}')
            `),
        },
    ]).then(({ executableName, executableContents }) => ({
        cliPath: join(packagePath, 'cli.js'),
        manifestPath: join(packagePath, 'package.json'),
        manifestContents: { bin: { [executableName]: 'cli.js' } },
        executableName,
        executableContents,
        scriptPath: `scripts.${executableName}`,
        script: `cd src/node_modules && babel-node ${name}/cli.js`,
    }))

export default ({
    rootManifestPath,
    packagePath,
    createFiles: {
        cliPath,
        manifestPath,
        manifestContents,
        executableContents,
        scriptPath,
        script,
    } = {},
} = {}) => {
    mkdir(packagePath)
    writeJson(manifestPath, manifestContents)
    write(cliPath, executableContents)
    edit(rootManifestPath, scriptPath, script)
}
