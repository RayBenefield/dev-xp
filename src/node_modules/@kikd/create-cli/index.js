/* eslint-disable no-console */
import { join } from 'path'
import { writeFileSync as writeFile } from 'fs'

import mkdir from '@dev-xp/mkdir'
import { prompt } from 'inquirer'
import { writeSync as write } from '@dev-xp/json'

export const preCreate = ({ packagePath, name }) =>
    prompt([
        {
            type: 'input',
            name: 'executableName',
            message: 'What should the executable name be?',
            default: name,
        },
        {
            type: 'input',
            name: 'executableContents',
            message: 'What should the initial contents be for the executable?',
            default: "console.log('Hello World')",
        },
    ]).then(({ executableName, executableContents }) => ({
        cliPath: join(packagePath, 'cli.js'),
        manifestPath: join(packagePath, 'package.json'),
        manifestContents: { bin: { [executableName]: 'cli.js' } },
        executableContents,
    }))

export default ({
    packagePath,
    extra: { cliPath, manifestPath, manifestContents, executableContents } = {},
} = {}) => {
    mkdir(packagePath)
    write(manifestPath, manifestContents)
    writeFile(cliPath, executableContents)
}
