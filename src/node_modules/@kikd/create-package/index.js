import { join } from 'path'

import dedent from 'dedent'
import { prompt } from 'inquirer'
import { camelCase } from 'lodash'
import { write, mkdir } from '@dev-xp/fs'
import resolveName from '@dev-xp/resolve-name'

export const preCreate = ({ name, packagePath }) =>
    prompt([
        {
            type: 'editor',
            name: 'indexContents',
            message: 'What should the initial contents be for the index be?',
            default: dedent`
                import log from '@dev-xp/log'

                export default () => log('${name}')
            `,
        },
        {
            type: 'confirm',
            name: 'makeTest',
            message: 'Would you like a `kape` snapshot test made?',
            default: true,
        },
    ]).then(({ indexContents, makeTest = true }) => ({
        indexPath: join(packagePath, 'index.js'),
        indexContents,
        ...(makeTest && {
            testPath: join(packagePath, 'snapshot-tests.js'),
            testContents: dedent`
                import describe from 'kape'
                import ${camelCase(resolveName(name))} from '${name}'

                describe('${name}', ${camelCase(
                resolveName(name)
            )}, snapshot => {
                    snapshot([[]])
                })
            `,
        }),
    }))

export const createTemplate = ({ indexPath }) => `
    <attr><key>Index Path:</key><value>${indexPath}</value></attr>
`

export default ({
    packagePath,
    extra: { indexPath, indexContents, testPath, testContents } = {},
} = {}) => {
    mkdir(packagePath)
    write(indexPath, indexContents)
    if (testPath) write(testPath, testContents)
}
