import pick from 'lodash.pick'
import omit from 'lodash.omit'
import { firestore } from 'firebase-admin'

const tokens = {
    twitch: ['access_token', 'refresh_token'],
    twitter: ['access_token_key', 'access_token_secret'],
}

const createExpires = credentials => {
    if (credentials['expires'])
        return firestore.Timestamp.fromDate(credentials['expires'])
    if (credentials['expires_in']) {
        const expires = new Date()
        expires.setSeconds(expires.getSeconds() + credentials['expires_in'])
        return firestore.Timestamp.fromDate(expires)
    }
    return null
}

export default ({ db, crypto: { encrypt, decrypt } }) => ({
    updateUser: ({ userId, data }) => db.update(`users/${userId}`, data),
    saveToken: ({ credentials, userId, platform }) => {
        db.upsert(`users/${userId}/auth/${platform}`, {
            ...omit(credentials, ['expires', ...tokens[platform]]),
            tokens: encrypt(pick(credentials, tokens[platform])),
            expires: createExpires(credentials),
        })
    },
    getToken: ({ userId, platform }) =>
        db.get(`users/${userId}/auth/${platform}`).then(creds => ({
            ...decrypt(creds.tokens),
            expires: creds.expires ? creds.expires.toDate() : null,
            ...omit(creds, ['expires', 'tokens']),
        })),
})
