import { join } from 'path'

import pkgDir from 'pkg-dir'
import defaults from 'lodash.defaults'
import { prettify } from '@dexterity/logger'
import { writeSync as write } from '@dev-xp/json'
import { cosmiconfigSync, defaultLoaders } from 'cosmiconfig'

export default ({ logger }) => {
    const root = pkgDir.sync()
    const explorer = cosmiconfigSync('dex', {
        searchPlaces: ['.dexrc'],
        loaders: { noExt: defaultLoaders['.json'] },
    })
    let config = explorer.search()

    return {
        path: () => config.filepath,
        get: () => {
            const configDefaults = { session: 0, subprojects: [] }
            if (!config) {
                logger.warn('No Dex config file found')
                return configDefaults
            }

            logger.info('Config file loaded')
            logger.debug(prettify(config))
            return defaults(config.config, configDefaults)
        },
        write: ({ last: session }) => {
            const path = config ? config.filepath : join(root, '.dexrc')
            const newConfig = config
                ? defaults({ session }, config.config)
                : { session }
            write(path, newConfig)

            config = explorer.load(path)
        },
    }
}
