import { resolve } from 'path'

import { rmdir, copy } from '@dev-xp/fs'
import config from '@kikd-uefn/config'
import manifest from '@kikd-uefn/manifest'
import create, { preCreate, createTemplate } from '@kikd-uefn/create'

const type = 'uefn-game'

export const uefnspecJson = (root, srcDir, files) =>
    files.includes('uefnspec.json')
        ? // eslint-disable-next-line global-require, import/no-dynamic-require
        require(resolve(root, srcDir, 'uefnspec.json'))
        : false

export const filter = ({ root = '.', srcDir = '.', files = [] }) => {
    const manifestData = uefnspecJson(root, srcDir, files)
    return !!manifestData
}

export default {
    type,
    manifest,
    config,
    filter,
    build: () => {},
    postBuild: ({ config: { root, externals } }) =>
        Promise.all(
            externals.map(({ src, dest }) => {
                rmdir(resolve('/mnt/d/', dest))
                return copy(resolve(root, src), resolve('/mnt/d/', dest))
            })
        ),
    preCreate,
    create,
    createTemplate,
}
