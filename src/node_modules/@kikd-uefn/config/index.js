import map from 'lodash.map'
import partition from 'lodash.partition'
import findPackages from '@kikd/find-packages'
import getStructures from '@kikd/package-structure'
import { pascalCase } from 'change-case'

const type = 'uefn-game'

const uefnDir = 'UEFN'
const contentDir = proj => `${proj}/Plugins/${proj}/Content`

export default async ({
    manifest: { name: folder, dependencies },
    structure: { name, root, srcDir },
}) => {
    const destDir = `${uefnDir}/${contentDir(folder)}`

    const isNamespace = dep => dep.startsWith('@') && dep.indexOf('/') < 0
    const [include, exact] = partition(dependencies, isNamespace)
    const namespaced =
        include.length > 0 ? await findPackages({ root, include }) : []

    const deps = [...exact, ...namespaced]
    const depStructures = getStructures({ root, packageNames: deps })
    const depPosts = map(depStructures, post => ({ type: 'verse', post }))

    const externals = map(depStructures, ({ name: ex, destDir: exDest }) => ({
        src: exDest,
        dest: `${destDir}/${pascalCase(ex)}`,
    }))
    const post = { root, name, srcDir, destDir, externals }

    return [...depPosts, { type, post }]
}
