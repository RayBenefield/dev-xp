import { join } from 'path'

import { capitalCase } from 'change-case'
import { mkdir } from '@dev-xp/fs'
import { edit, writeSync as writeJson } from '@dev-xp/json'

export const preCreate = ({ root, packagePath, name }) => ({
    scopedPath: join(root, `src/node_modules/@${name}/core`),
    manifestPath: join(packagePath, 'uefnspec.json'),
    manifestContents: {
        name: capitalCase(name).replace(' ', '_'),
        dependencies: [
            `@${name}`,
            'tableau',
            '@tableau',
            'anima',
            'goo',
            'gooey',
            'numb',
            'vertex',
        ],
    },
    devScript: `yarn kd build ${name} --commit`,
    devScriptPath: `scripts.dev:${name}`,
    watchScript: `nodemon --config ./dx/nodemon.json --watch ./src/node_modules/ --exec yarn dev:${name}`,
    watchScriptPath: `scripts.watch:${name}`,
})

export const createTemplate = ({
    createFiles: {
        scopedPath,
        manifestPath,
        manifestContents: { name = '[NO FOLDER]' },
    },
}) => `
    <attr><key>UEFN Project Folder:</key><value>${name}</value></attr>
    <attr><key>UEFN Spec Path:</key><value>${manifestPath}</value></attr>
    <attr><key>Scoped Path:</key><value>${scopedPath}</value></attr>
`

export default ({
    rootManifestPath,
    packagePath,
    createFiles: {
        scopedPath,
        manifestPath,
        manifestContents,
        devScript,
        devScriptPath,
        watchScript,
        watchScriptPath,
    } = {},
} = {}) => {
    mkdir(packagePath)
    mkdir(scopedPath)
    writeJson(manifestPath, manifestContents)
    edit(rootManifestPath, devScriptPath, devScript)
    edit(rootManifestPath, watchScriptPath, watchScript)
}
