import { resolve, extname } from 'path'

import { read } from '@dev-xp/fs'
import frontMatter from 'front-matter'
import build from '@kikd/build-rollup'
import entyre from '@entyre/rollup-plugin'
import rollup, { commonPlugins } from '@kikd/rollup-utils'
import check from '@entyre/check-package'

const type = 'entyre-package'
const rollupConfig = { type, outFile: 'index.js', format: 'cjs' }

export default {
    type,
    filter: ({ srcDir = '.', files = [] }) => {
        if (files.includes('package.json')) {
            // eslint-disable-next-line global-require, import/no-dynamic-require
            const manifest = require(resolve(srcDir, 'package.json'))
            return manifest.main && extname(manifest.main) === '.md'
        }
        return files.includes('index.md')
    },
    manifest: ({ root, structure: { srcDir } }) =>
        read(resolve(root, srcDir, 'index.md'), 'utf-8')
            .then(frontMatter)
            .then(({ attributes }) => attributes),
    config: snowball => [
        rollup({
            ...rollupConfig,
            file: snowball.manifest.main || 'index.md',
            plugins: [
                entyre({
                    readmePath: resolve(
                        snowball.structure.destDir,
                        'readme.md'
                    ),
                    packageJsonPath: resolve(
                        snowball.structure.destDir,
                        'package.json'
                    ),
                }),
                ...commonPlugins,
            ],
        }),
    ],
    build,
    postBuild: () => {},
    check,
}
