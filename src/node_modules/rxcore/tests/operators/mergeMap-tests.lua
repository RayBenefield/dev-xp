local expect, printed = require'rx-test'()
local rx, _ = require'rx'()

describe('MergeMap Operator', function()
    describe('mergeMap()', function()

        it('is included in rx object', function()
            assert.no.is_nil(_.mergeMap)
        end)

        it('handles single value', function()
            local test_ = rx.of('hello').pipe(_.mergeMap())
            --
            expect(test_).to.produce('hello')
        end)

--         it('maps with nothing is bypassed', function()
--             local test_ = of('world')

--             test_.pipe(
--                 mergeMap()
--             ).subscribe(function(val)
--                 assert.are.equal('world', val)
--             end)
--         end)

    end)
end)



--         it('handles single value', function()
--             local test_ = of('world')

--             test_.pipe(
--                 mergeMap(function(val)
--                     return of(val)
--                 end)
--             ).subscribe(function(val)
--                 assert.are.equal('world', val)
--             end)
--         end)

--         it('handles multiple values', function()
--             local test_ = from({'world', 'folks', 'people'})
--             local check = assertAll({'world', 'world', 'folks', 'folks', 'people', 'people'})

--             test_.pipe(
--                 mergeMap(function(val)
--                     return from({val, val})
--                 end)
--             ).subscribe(check)
--         end)
--     end)
-- end)
