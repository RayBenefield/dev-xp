local expect, printed = require'rx-test'()
local rx, _ = require'rx'()

describe('Buffer Operator', function()
    describe('buffer()', function()

        it('is included in rx object', function()
            assert.no.is_nil(_.buffer)
        end)

    end)
end)

--         it('is included in rx object', function()
--             assert.no.is_nil(rx.operators.buffer)
--         end)

--         it('handles multiple values', function()
--             local test_ = from({'world', 'folks', 'people'})
--             local check = assertAll({'world', 'folks', 'people'})

--             test_.pipe(
--                 buffer(3)
--             ).subscribe(function(val)
--                 for key, val in pairs(val) do
--                     check(val)
--                 end
--             end)
--         end)

--         it('flushes the buffer on completion regardless of size', function()
--             local test_ = from({'world', 'folks'})
--             local check = assertAll({'world', 'folks'})
--             local seen = 0

--             test_.pipe(
--                 buffer(3)
--             ).subscribe(
--                 function(val)
--                     for key, val in pairs(val) do
--                         check(val)
--                         seen = seen + 1
--                     end
--                 end,
--                 nil,
--                 function()
--                     assert.are.equal(2, seen)
--                 end
--             )
--         end)
--     end)
-- end)
