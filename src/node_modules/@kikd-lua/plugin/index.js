import { resolve } from 'path'

import { bundle } from 'luabundle'
import { lstat, mkdir, write } from '@dev-xp/fs'

const type = 'lua-rock'

export default {
    type,
    details: () => ({ main: 'init.lua' }),
    manifest: ({ name }) => ({ name }),
    config: ({ structure }) => ({
        type,
        post: {
            ...structure,
        },
    }),
    filter: ({ files = [] }) => files.includes('init.lua'),
    build: async ({
        config: {
            post: { root, srcDir, destDir },
        },
    }) => {
        const moduleRoot = resolve(root, srcDir, 'init.lua')
        const nameBased = resolve(root, 'src/node_modules/?.lua')
        const initBased = resolve(root, 'src/node_modules/?/init.lua')
        const source = bundle(moduleRoot, { paths: [nameBased, initBased] })
        const dir = resolve(root, destDir)

        try {
            await lstat(dir)
        } catch (e) {
            mkdir(dir)
        }

        return write(resolve(dir, 'init.lua'), source)
    },
    postBuild: () => {},
}
