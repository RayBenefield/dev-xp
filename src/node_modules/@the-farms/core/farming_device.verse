
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Tableau
using. TableauDevice
using. TableauResource

farming_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Farmer"

    @editable Action:input_trigger_device = input_trigger_device{}
    @editable WaterIcon:creative_prop = creative_prop{}
    @editable PlantIcon:creative_prop = creative_prop{}
    @editable HarvestIcon:creative_prop = creative_prop{}

    GetResources<override>():[]resource= array:
        resource:
            ID := ResourceID
            Props := map:
                "Plant" => prop_str. Default := "Tomato"
                "Plot Type" => prop_str. Default := "Plot"
                "Plot ID" => prop_str{ Focus := Path("Plot Type"), FN := "Append", Tweak := Path("Cursor", "Location ID") }
                # "Can Plant" => prop_bool{ Focus := ResPath(Path("Plot ID")) }
                "Can Plant" => prop_bool{ Focus := Path(Path("Plot ID"), "Can Plant") }
                # "Can Water" => prop_bool{ Focus := ResPath(Path("Plot ID")) }
                "Can Water" => prop_bool{ Focus := Path(Path("Plot ID"), "Can Water") }
                # "Can Harvest" => prop_bool{ Focus := ResPath(Path("Plot ID")) }
                "Can Harvest" => prop_bool{ Focus := Path(Path("Plot ID"), "Can Harvest") }
                # "Exists" => prop_bool{ Focus := ResPath(Path("Plot ID")) }
                "Exists" => prop_bool{ Focus := Path(Path("Plot ID"), "Exists") }
            Abilities := map:
                "Action" => array:
                    Execute("Try Water")
                    Execute("Try Plant")
                    Execute("Try Harvest")
                    IsFalse("Exists")
                    Execute("Create Plot")
                "Try Water" => array:
                    IsTrue("Exists")
                    IsTrue("Can Water")
                    Execute(Path("Plot ID"), "Water")
                "Try Plant" => array:
                    IsTrue("Exists")
                    IsTrue("Can Plant")
                    Execute(Path("Plot ID"), "Plant")
                "Try Harvest" => array:
                    IsTrue("Exists")
                    IsTrue("Can Harvest")
                    Execute(Path("Plot ID"), "Harvest")
                "Create Plot" => array:
                    # TODO - Add If Not Exists check before creating
                    Create("Plot ID").As("Plot Type")
                    Set(Path("Plot ID"), "Location").To(Path("Cursor", "Location"))

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(GameState:game_state, TypeID:string, SubTypeID:string)<suspends>:[]side_effect=
        WaterIcon.Hide()
        HarvestIcon.Hide()
        PlantIcon.Hide()

        if (Ability := GameState.Resources[ResourceID].Abilities["Action"]):
            Action.ReleasedEvent.Subscribe(Ability.ActionFor(SubTypeID).ExecuteAgentFloat)

        array:
            toggle_prop{ Focus := Path("Can Plant"), Prop := option. PlantIcon }
            toggle_prop{ Focus := Path("Can Water"), Prop := option. WaterIcon }
            toggle_prop{ Focus := Path("Can Harvest"), Prop := option. HarvestIcon }
            # Debug(Path("Can Plant"), "{ResourceID} Can Plant")
            # Debug(Path("Can Water"), "{ResourceID} Can Water")
            # Debug(Path("Can Harvest"), "{ResourceID} Can Harvest")
            # Debug(Path("Plot ID"), "{ResourceID} Plot ID")
