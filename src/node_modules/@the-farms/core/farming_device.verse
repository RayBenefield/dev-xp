
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

using. Tableau

farming_device<public> := class(tableau_device):
    @editable ResourceID<override>:string = "Farmer"

    @editable WaterIcon:?creative_prop = false
    @editable PlantIcon:?creative_prop = false
    @editable HarvestIcon:?creative_prop = false

    GetResources<override>():[]resource= array:
        resource:
            ID := ResourceID
            Props := map:
                "Plot Label" => Str of "Plot"
                "Plant" => Str of Path("Plant Selector", "Selection")
                "Plot ID" => Str of (Path("Plot Label"), "Append", Path("Grid", "Location ID"))
                "Can Plant" => Bool of Path(Path("Plot ID"), "Can Plant")
                "Can Water" => Bool of Path(Path("Plot ID"), "Can Water")
                "Can Harvest" => Bool of Path(Path("Plot ID"), "Can Harvest")
                "Exists" => Bool of Path(Path("Plot ID"), "Exists")
                "North Label" => Str of "North"
                "East Label" => Str of "East"
                "South Label" => Str of "South"
                "West Label" => Str of "West"
                "Current Camera" => Str of Path("Camera Selector", "Selection")
                "Is North" => Bool of (Path("Current Camera"), "String Equals", Path("North Label"))
                "Is East" => Bool of (Path("Current Camera"), "String Equals", Path("East Label"))
                "Is South" => Bool of (Path("Current Camera"), "String Equals", Path("South Label"))
                "Is West" => Bool of (Path("Current Camera"), "String Equals", Path("West Label"))
            Actions := map:
                "Prim Action" => Action of array:
                    IsFalse("Exists").Else(Path("Plot ID"), "Action")
                    Create("Plot ID").As("Plot Label")
                "Alt Action" => Action of ("Plant Selector", "Next")
                "Move Right" => Action of (Path("Current Camera"), "Move Right")
                "Move Left" => Action of (Path("Current Camera"), "Move Left")
                "Move Up" => Action of (Path("Current Camera"), "Move Up")
                "Move Down" => Action of (Path("Current Camera"), "Move Down")
                "Next Action" => Action of ("Camera Selector", "Next")
                "Prev Action" => Action of ("Camera Selector", "Previous")

    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect= array:
        PushBool("Can Plant", Toggle(PlantIcon).FN)
        PushBool("Can Water", Toggle(WaterIcon).FN)
        PushBool("Can Harvest", Toggle(HarvestIcon).FN)
        # Debug("Can Plant", "{ResourceID} Can Plant")
        # Debug("Can Water", "{ResourceID} Can Water")
        # Debug("Can Harvest", "{ResourceID} Can Harvest")
        # Debug("Plot ID", "{ResourceID} Plot ID")
