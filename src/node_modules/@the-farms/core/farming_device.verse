
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Tableau

farming_device<public> := class(creative_device, config_device, side_effect_device):
    @editable ResourceID:string = "Farmer"

    @editable PrimaryAction:input_trigger_device = input_trigger_device{}
    @editable WaterIcon:?creative_prop = false
    @editable PlantIcon:?creative_prop = false
    @editable HarvestIcon:?creative_prop = false

    GetResources<override>():[]resource= array:
        resource:
            ID := ResourceID
            Props := map:
                "Plant" => prop_str. Default := "Corn"
                "Plot Label" => prop_str. Default := "Plot"
                "Plot ID" => prop_str{ Focus := Path("Plot Label"), FN := "Append", Tweak := Path("Cursor", "Location ID") }
                "Can Plant" => Bool of Path(Path("Plot ID"), "Can Plant")
                "Can Water" => Bool of Path(Path("Plot ID"), "Can Water")
                "Can Harvest" => Bool of Path(Path("Plot ID"), "Can Harvest")
                "Exists" => Bool of Path(Path("Plot ID"), "Exists")
            Abilities := map:
                "Prim Action" => Action of array:
                    IsFalse("Exists").Else("Plant Action")
                    Create("Plot ID").As("Plot Label")
                "Plant Action" => Action of array:
                    Execute(Path("Plot ID"), "Water")
                    Execute(Path("Plot ID"), "Plant")
                    Execute(Path("Plot ID"), "Harvest")

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= false
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        State.AttachAction("Prim Action", PrimaryAction.ReleasedEvent)

        array:
            PushBool("Can Plant", Toggle(PlantIcon).FN)
            PushBool("Can Water", Toggle(WaterIcon).FN)
            PushBool("Can Harvest", Toggle(HarvestIcon).FN)
            # Debug("Can Plant", "{ResourceID} Can Plant")
            # Debug("Can Water", "{ResourceID} Can Water")
            # Debug("Can Harvest", "{ResourceID} Can Harvest")
            # Debug("Plot ID", "{ResourceID} Plot ID")
