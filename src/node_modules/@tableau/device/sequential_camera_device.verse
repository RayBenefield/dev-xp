
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }

using { Tableau }

add_camera_fn := class():
    Agent:agent
    Camera:gameplay_camera_device
    FN<public>():void= Camera.AddTo(Agent)

prop_to_camera := class<concrete>():
    @editable ResourceID<public>:string = ""
    @editable PropertyID<public>:string = ""
    @editable Camera<public>:gameplay_camera_fixed_angle_device = gameplay_camera_fixed_angle_device{}

sequential_camera_device<public> := class(creative_device, tableau_device):
    @editable FirstCamera:gameplay_camera_fixed_angle_device = gameplay_camera_fixed_angle_device{}
    @editable PropsToCamera:[]prop_to_camera = array{}

    Init<override>(GameState:game_state)<suspends>:void=
        Watcher := player_watcher{ GameState := GameState, OnPossessed := HandleCameras }
        spawn. Watcher.Start()

    HandleCameras(GameState:game_state, PlayerID:string, Agent:agent)<suspends>:void=
        FirstCamera.AddTo(Agent)

        for (P:PropsToCamera):
            AddCam := add_camera_fn{ Agent := Agent, Camera := P.Camera }
            GameState.WhenTrue(P.ResourceID, P.PropertyID, PlayerID, AddCam.FN)
