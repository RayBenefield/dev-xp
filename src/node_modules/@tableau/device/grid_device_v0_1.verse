
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

grid_device_v0_1<public> := class(tableau_device):
    DeviceType<override>:string = "GRID"

    @editable X<public>:int_plug = int_plug{}
    @editable Y<public>:int_plug = int_plug{}
    @editable MinX<public>:?int_plug = false
    @editable MaxX<public>:?int_plug = false
    @editable MinY<public>:?int_plug = false
    @editable MaxY<public>:?int_plug = false

    GetResources<override>():[]resource= array. resource:
        Props := map:
            "X" => Integer of X
            "X Neg" => Integer of (Path("X"), "Negate")
            "Y" => Integer of Y
            "Y Neg" => Integer of (Path("Y"), "Negate")
            "Min X" => (Integer of MinX?) or (Integer of 0)
            "Max X" => (Integer of MaxX?) or (Integer of 0)
            "Min Y" => (Integer of MinY?) or (Integer of 0)
            "Max Y" => (Integer of MaxY?) or (Integer of 0)
            "Has Min X" => PlugCheck of MinX
            "Has Max X" => PlugCheck of MaxX
            "Has Min Y" => PlugCheck of MinY
            "Has Max Y" => PlugCheck of MaxY
            "At Min X" => Bool of (Path("X"), "Int <=", Path("Min X"))
            "At Max X" => Bool of (Path("X"), "Int >=", Path("Max X"))
            "At Min Y" => Bool of (Path("Y"), "Int <=", Path("Min Y"))
            "At Max Y" => Bool of (Path("Y"), "Int >=", Path("Max Y"))
            "Block Min X" => Bool of (Path("Has Min X"), "AND", Path("At Min X"))
            "Block Max X" => Bool of (Path("Has Max X"), "AND", Path("At Max X"))
            "Block Min Y" => Bool of (Path("Has Min Y"), "AND", Path("At Min Y"))
            "Block Max Y" => Bool of (Path("Has Max Y"), "AND", Path("At Max Y"))
            "+X" => Integer of (Path("X"), "+", ONE())
            "-X" => Integer of (Path("X"), "-", ONE())
            "+Y" => Integer of (Path("Y"), "+", ONE())
            "-Y" => Integer of (Path("Y"), "-", ONE())
            "Row Offset" => Integer of (Path("Y"), "-", ONE())
            "Row Start" => Integer of (Path("Row Offset"), "*", Path("Max X"))
            "Selection Number" => Integer of (Path("Row Start"), "+", Path("X"))
            "Partial ID" => Str of (Path("X"), "Append", COMMA())
            "Location ID" => Str of (Path("Partial ID"), "Append", Path("Y"))
        Actions := map:
            "Decrease X" => Action of array:
                IsFalse("Block Min X")
                Set("X").To("-X")
            "Increase X" => Action of array:
                IsFalse("Block Max X")
                Set("X").To("+X")
            "Increase Y" => Action of array:
                IsFalse("Block Max Y")
                Set("Y").To("+Y")
            "Decrease Y" => Action of array:
                IsFalse("Block Min Y")
                Set("Y").To("-Y")
