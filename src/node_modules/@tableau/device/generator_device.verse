
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

using. Vertex

watched_property := class<concrete>():
    @editable PropertyID:string = "Property"
    @editable PropertyType:prop_type = prop_type.UnknownType
    @editable PropertySource:prop_path = prop_path{}

generator_device<public> := class(tableau_device):
    @editable ResourceID<override>:string = "Generator"
    @editable ResourceToGenerate:string = "Type"
    @editable IDSource:prop_path = prop_path{}
    @editable OnCreateActions:[]prop_path = array{}
    @editable WatchedProperties:[]watched_property = array{}
    @editable GenerateOnIdChange:logic = false

    GetResources<override>():[]resource= array. resource:
        ID := ResourceID
        Actions := map{ "Create {ResourceToGenerate}" => Action() }

    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        Hydrator := hydrator{ GenerateOnIdChange := GenerateOnIdChange, Resource := hydrated_resource. Type := ResourceToGenerate }
        BaseSideEffects := array:
            Generate(Hydrator.GenerateResourceEvent)
            Push("Create {ResourceToGenerate}", Hydrator.GenerateResource)
            PushStr(IDSource, Hydrator.SyncID().SetFN)
        AttachedActions := for(Create:OnCreateActions). Attach(Create, Hydrator.GenerateResourceEvent)
        Watched := for(Property:WatchedProperties, ID := Property.PropertyID, Source := Property.PropertySource). case(Property.PropertyType):
            prop_type.IntegerType => PushInt(Source, Hydrator.SyncInt(ID).SetFN)
            prop_type.StrType => PushStr(Source, Hydrator.SyncString(ID).SetFN)
            prop_type.Vec3Type => PushVec3(Source, Hydrator.SyncVec3(ID).SetFN)
            _ => Debug(Source)

        # TODO: Changing the order of these is a problem for some reason
        CombineAllArrays(AttachedActions, BaseSideEffects, Watched)
