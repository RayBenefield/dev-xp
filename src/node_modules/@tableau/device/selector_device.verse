
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Gooey

CreateSelectorResource<public><constructor>(ResourceID:string, Items:[]string) := resource:
    ID := ResourceID
    Props := map:
        "All Types" => Strs of Items
        "Selection" => Str of (Path("All Types"), "Get", Path("Next Index"))
        "Next Index" => Integer of 1
        "New Index" => Integer of (Path("Next Index"), "+", ONE())
        "Previous Index" => Integer of (Path("Next Index"), "-", ONE())
        "Type Count" => Integer of (Path("All Types"), "Length")
        "Is Last Type" => Bool of (Path("Next Index"), "Int >=", Path("Type Count"))
        "Is First Type" => Bool of (Path("Next Index"), "Int <=", ONE())
    Actions := map:
        "Next" => Action of array:
            IsTrue("Is Last Type").Else("Go to Next")
            Set("Next Index").To(ONE())
        "Go to Next" => Action of array:
            Set("Next Index").To("New Index")
        "Previous" => Action of array:
            IsTrue("Is First Type").Else("Go to Previous")
            Set("Next Index").To("Type Count")
        "Go to Previous" => Action of array:
            Set("Next Index").To("Previous Index")


selector_device<public> := class(creative_device, config_device):
    @editable ResourceID<public>:string = "Block Selector"
    @editable BlockTypes<public>:[]string = array{}

    GetResources<override>():[]resource= array. CreateSelectorResource(ResourceID, BlockTypes)