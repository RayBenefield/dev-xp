
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Gooey

CreateSelectorResource<public><constructor>(ResourceID:string, Items:[]string) := resource:
    ID := ResourceID
    Props := map:
        "All Types" => prop_strs. Default := Items
        "Selection" => prop_str{ Focus := Path("All Types"), FN := "Get", Tweak := Path("Next Index") }
        "Next Index" => prop_int. Default := 1
        "New Index" => prop_int{ Focus := Path("Next Index"), FN := "+", Tweak := ONE() }
        "Previous Index" => prop_int{ Focus := Path("Next Index"), FN := "-", Tweak := ONE() }
        "Type Count" => prop_int{ Focus := Path("All Types"), FN := "Length" }
        "Is Last Type" => prop_bool{ Focus := Path("Next Index"), FN := "Int >=", Tweak := Path("Type Count") }
        "Is First Type" => prop_bool{ Focus := Path("Next Index"), FN := "Int <=", Tweak := ONE() }
    Abilities := map:
        "Next" => Action of array:
            IsTrue("Is Last Type").Else("Go to Next")
            Set("Next Index").To(ONE())
        "Go to Next" => Action of array:
            Set("Next Index").To("New Index")
        "Previous" => Action of array:
            IsTrue("Is First Type").Else("Go to Previous")
            Set("Next Index").To("Type Count")
        "Go to Previous" => Action of array:
            Set("Next Index").To("Previous Index")


selector_device<public> := class(creative_device, config_device):
    @editable ResourceID<public>:string = "Block Selector"
    @editable BlockTypes<public>:[]string = array{}

    GetResources<override>():[]resource= array. CreateSelectorResource(ResourceID, BlockTypes)