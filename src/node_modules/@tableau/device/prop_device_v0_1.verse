
using. /Verse.org/Assets
using. /Fortnite.com/Devices
using. /Verse.org/Simulation

using. Anima
using. Vertex

time_property_v0_1<public> := class<concrete>():
    @editable Source<public>:prop_path = prop_path{}
    @editable Time<public>:float = 0.0

movement_settings_v0_1 := class<concrete>():
    @editable XYZ:?time_property_v0_1 = false
    @editable X:?time_property_v0_1 = false
    @editable Y:?time_property_v0_1 = false
    @editable Z:?time_property_v0_1 = false

rotation_settings_v0_1 := class<concrete>():
    @editable YPR:?time_property_v0_1 = false
    @editable Yaw:?time_property_v0_1 = false
    @editable Pitch:?time_property_v0_1 = false
    @editable Roll:?time_property_v0_1 = false

animation_settings_v0_1 := class<concrete>():
    @editable TriggerAnimation:?prop_path = false
    @editable ToggleAnimation:?prop_path = false
    @editable AnimationVariable:?prop_path = false

prop_device_v0_1<public> := class(tableau_device):
    @editable Prop:?creative_prop = false
    @editable Asset:?creative_prop_asset = false

    @editable MaterialID:?prop_path = false
    @editable ToggleProp:?prop_path = false

    @editable MovementSettings:movement_settings_v0_1 = movement_settings_v0_1{}
    @editable RotationSettings:rotation_settings_v0_1 = rotation_settings_v0_1{}
    @editable AnimationSettings:animation_settings_v0_1 = animation_settings_v0_1{}

    MaterialMap<public>:[string]material = map{}
    OneShotAnimation<public>:?type{_():[]frame} = false
    PingPongAnimation<public>:?type{_():[]frame} = false
    AnimationUpdater<public>:?type{_(:float):[]frame} = false

    GetResources<override>():[]resource= array:
        resource:
            ID := ResourceID
            Props := map:
                "Location" => Vec3 of Prop?.GetTransform().Translation or GetTransform().Translation

    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        P := if (Prop?). Prop else. Spawn(Asset)

        if (SetupAnim := OneShotAnimation?). SetupOneShot(P, SetupAnim())
        if (SetupAnim := PingPongAnimation?). SetupPingPong(P, SetupAnim())

        FilterOptions of array:
            option. PushStr(MaterialID?, SetMaterial(P, MaterialMap).FN)
            option. PushBool(ToggleProp?, Toggle(P).FN)
            option. PushVec3(MovementSettings.XYZ?.Source, Move(P, MovementSettings.XYZ?.Time).FN)
            option. PushFloat(MovementSettings.X?.Source, MoveX(P, MovementSettings.X?.Time).FN)
            option. PushFloat(MovementSettings.Y?.Source, MoveY(P, MovementSettings.Y?.Time).FN)
            option. PushFloat(MovementSettings.Z?.Source, MoveZ(P, MovementSettings.Z?.Time).FN)
            option. PushVec3(RotationSettings.YPR?.Source, Rotate(P, RotationSettings.YPR?.Time).FN)
            option. PushFloat(RotationSettings.Yaw?.Source, RotateYaw(P, RotationSettings.Yaw?.Time).FN)
            option. PushFloat(RotationSettings.Pitch?.Source, RotatePitch(P, RotationSettings.Pitch?.Time).FN)
            option. PushFloat(RotationSettings.Roll?.Source, RotateRoll(P, RotationSettings.Roll?.Time).FN)
            option. Push(AnimationSettings.TriggerAnimation?, PlayAnim(P).FN)
            option. PushBool(AnimationSettings.ToggleAnimation?, ToggleAnim(P).FN)
            option. PushFloat(AnimationSettings.AnimationVariable?, Wait(0.0).FN, UpdateAnimWithFloat(P, AnimationUpdater?).FN)
