
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

using. Vertex

int_operation := enum{ Add, Subtract, Multiply, Divide, Modulus, Negate }
ToString(Value:int_operation):string= case(Value):
    int_operation.Add => "+"
    int_operation.Subtract => "-"
    int_operation.Multiply => "*"
    int_operation.Divide => "Quotient"
    int_operation.Modulus => "Mod"
    int_operation.Negate => "Negate"

math_property := class<concrete>():
    @editable Name:string = "Property"
    @editable Settings:operation_settings = operation_settings{}
operation_settings := class<concrete>():
    @editable Left:int = 1
    @editable LeftSource:?prop_path = false
    @editable Operation:int_operation = int_operation.Add
    @editable Right:int = 1
    @editable RightSource:?prop_path = false

math_device_v0_1<public> := class(tableau_device):
    @editable ResourceID<override>:string = "Math"
    @editable Properties:[]math_property = array{}

    GetResources<override>():[]resource= array. resource:
        ID := ResourceID
        Props := CombineAll of array:
            CreateMap of for(P:Properties, S := P.Settings). ("{P.Name} Left", (Integer of S.LeftSource?) or (Integer of S.Left))
            CreateMap of for(P:Properties, S := P.Settings). ("{P.Name} Right", (Integer of S.RightSource?) or (Integer of S.Right))
            CreateMap of for(P:Properties, S := P.Settings). (P.Name, Integer of (Path("{P.Name} Left"), "{S.Operation}", Path("{P.Name} Right")))
