
using. /Verse.org/Simulation
using. /Fortnite.com/Devices

timer_controller_v0_1 := class():
    Timer:timer_device
    var IsActive:logic = false

    Active<public>(Value:logic):void=
        set IsActive = Value
        if(Value?). Timer.Start() else. Timer.Complete()
    SetTime<public>(Value:float):void=
        Timer.SetMaxDuration(Value)
        if(IsActive?):
            Timer.Reset()
            Timer.Start()

timer_device_v0_1<public> := class(tableau_device):
    DeviceType<override>:string = "TIMER"

    @editable Timer:timer_device = timer_device{}
    @editable Active:bool_plug = bool_plug{}
    @editable Duration:float_plug = float_plug. Default := 3.0
    @editable OnComplete:prop_path = prop_path{}

    GetResources<override>():[]resource= array. resource:
        Props := map:
            "Duration" => Float of Duration
            "Active" => Bool of Active
        Actions := map:
            "On Complete" => Action of OnComplete

    GetSideEffects<override>():[]side_effect=
        Controller := timer_controller_v0_1. Timer := Timer
        array:
            PushBool("Active", Controller.Active)
            PushFloat("Duration", Controller.SetTime)
            Attach("On Complete", Timer.SuccessEvent)
