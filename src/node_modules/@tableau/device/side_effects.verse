
using. /Verse.org/Assets
using. /Fortnite.com/Devices
using. /Verse.org/Simulation/Tags
using. /Fortnite.com/Devices/CreativeAnimation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Tableau

side_effect_device_tag := class(tag){}
side_effect_device<public> := interface:
    GetResourceID<public>()<computes>:?string
    GetPerType<public>()<computes>:?string
    GetSideEffects<public>(GameState:game_state, ResourceID:string)<suspends>:[]side_effect

LoadSideEffectDevices<public>():[]side_effect_device=
    TaggedDevices := GetCreativeObjectsWithTag(side_effect_device_tag{})
    for(Index -> Tagged : TaggedDevices, Device := side_effect_device[Tagged]). Device

side_effect<public> := interface(). GetFocus<public>():half_path
tap_side_effect<public> := interface(side_effect). FN<public>()<suspends>:void
bool_side_effect<public> := interface(side_effect). FN<public>(Value:logic)<suspends>:void
int_side_effect<public> := interface(side_effect). FN<public>(Value:int)<suspends>:void
vec3_side_effect<public> := interface(side_effect). FN<public>(Value:vector3)<suspends>:void

toggle_prop<public> := class(bool_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false

    FN<override>(Value:logic)<suspends>:void= if (P := Prop?):
        if (Value?). P.Show() else. P.Hide()

toggle_material<public> := class(bool_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false
    True<public>:material
    False<public>:material

    FN<override>(Value:logic)<suspends>:void= if (P := Prop?):
        if (Value?). P.SetMaterial(True) else. P.SetMaterial(False)

toggle_animation<public> := class(bool_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false
    True<public>:[]keyframe_delta
    False<public>:[]keyframe_delta
    Mode<public>:animation_mode = animation_mode.OneShot

    FN<override>(Value:logic)<suspends>:void= if (P := Prop?, A := P.GetAnimationController[]):
        if (Value?). A.SetAnimation(True, ?Mode := Mode) else. A.SetAnimation(False, ?Mode := Mode)

set_mesh<public> := class(int_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false
    Meshes<public>:[]mesh = array{}

    FN<override>(Value:int)<suspends>:void= if (P := Prop?):
        if (Mesh := Meshes[Value]). P.SetMesh(Mesh)

play_animation<public> := class(tap_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false

    FN<override>()<suspends>:void= if (P := Prop?, A := P.GetAnimationController[]):
        A.Play()

move_to<public> := class(vec3_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Prop<public>:?creative_prop = false
    Time<public>:float = 0.0

    FN<override>(Value:vector3)<suspends>:void= if (P := Prop?):
        P.MoveTo(Value, IdentityRotation(), Time)
