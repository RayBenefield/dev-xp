
using. /Fortnite.com/Devices
using. /Verse.org/Simulation

using. Vertex

basic_property<public> := class<concrete>():
    @editable ID<public>:string = "Property ID"

time_property<public> := class<concrete>():
    @editable ID<public>:string = "Property ID"
    @editable Time<public>:float = 0.0

movement_settings<public> := class<concrete>():
    @editable XYZ<public>:?time_property = false
    @editable X<public>:?time_property = false
    @editable Y<public>:?time_property = false
    @editable Z<public>:?time_property = false

rotation_settings<public> := class<concrete>():
    @editable YPR<public>:?time_property = false
    @editable Yaw<public>:?time_property = false
    @editable Pitch<public>:?time_property = false
    @editable Roll<public>:?time_property = false

prop_device<public> := class(tableau_device):
    @editable Prop:?creative_prop = false
    @editable Asset:?creative_prop_asset = false

    @editable ToggleProp:?basic_property = false

    @editable MovementSettings:movement_settings = movement_settings{}
    @editable RotationSettings:rotation_settings = rotation_settings{}

    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        P := if (Prop?). Prop else. Spawn(Asset)
        FilterOptions of array:
            option. PushBool(ToggleProp?.ID, Toggle(P).FN)
            option. PushVec3(MovementSettings.XYZ?.ID, Move(P, MovementSettings.XYZ?.Time).FN)
            option. PushFloat(MovementSettings.X?.ID, MoveX(P, MovementSettings.X?.Time).FN)
            option. PushFloat(MovementSettings.Y?.ID, MoveY(P, MovementSettings.Y?.Time).FN)
            option. PushFloat(MovementSettings.Z?.ID, MoveZ(P, MovementSettings.Z?.Time).FN)
            option. PushVec3(RotationSettings.YPR?.ID, Rotate(P, RotationSettings.YPR?.Time).FN)
            option. PushFloat(RotationSettings.Yaw?.ID, RotateYaw(P, RotationSettings.Yaw?.Time).FN)
            option. PushFloat(RotationSettings.Pitch?.ID, RotatePitch(P, RotationSettings.Pitch?.Time).FN)
            option. PushFloat(RotationSettings.Roll?.ID, RotateRoll(P, RotationSettings.Roll?.Time).FN)
