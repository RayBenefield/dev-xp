
using. /Verse.org/Simulation

using. Vertex

contextual_property_v0_1<public> := class<concrete>():
    @editable Name:string = "Property Name"
    @editable Rename:?string = false
    @editable Type:prop_type = prop_type.StrType

context_device_v0_1<public> := class(tableau_device):
    DeviceType<override>:string = "CONTEXT"

    @editable Context<public>:str_plug = str_plug{}
    @editable Actions<public>:[]string = array{}
    @editable Properties<public>:[]contextual_property_v0_1 = array{}

    GetResources<override>():[]resource= array. resource:
        Props := CombineAll of array:
            map{ "Context" => Str of Context }
            CreateMap of for(Prop:Properties). case(Prop.Type):
                prop_type.BoolType => (Prop.Rename? or Prop.Name, Bool of Path(Path("Context"), Prop.Name))
                prop_type.IntegerType => (Prop.Rename? or Prop.Name, Integer of Path(Path("Context"), Prop.Name))
                prop_type.FloatType => (Prop.Rename? or Prop.Name, Float of Path(Path("Context"), Prop.Name))
                prop_type.NumType => (Prop.Rename? or Prop.Name, Num of Path(Path("Context"), Prop.Name))
                prop_type.StrType => (Prop.Rename? or Prop.Name, Str of Path(Path("Context"), Prop.Name))
                prop_type.StrsType => (Prop.Rename? or Prop.Name, Strs of Path(Path("Context"), Prop.Name))
                prop_type.AgentType => (Prop.Rename? or Prop.Name, UEAgent of Path(Path("Context"), Prop.Name))
                prop_type.Vec2Type => (Prop.Rename? or Prop.Name, Vec2 of Path(Path("Context"), Prop.Name))
                prop_type.Vec3Type => (Prop.Rename? or Prop.Name, Vec3 of Path(Path("Context"), Prop.Name))
                _ => (Prop.Rename? or Prop.Name, Str of Path(Path("Context"), Prop.Name))
        Actions := CreateMap of for(AID:Actions). (AID, Action of (Path("Context"), AID))
