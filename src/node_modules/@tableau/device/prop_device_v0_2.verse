
using. /Verse.org/Assets
using. /Verse.org/Simulation
using. /Fortnite.com/Devices
using. /UnrealEngine.com/Temporary/SpatialMath

using. TableauAssets
using. Anima
using. Vertex

movement_settings_v0_2 := class<concrete>():
    @editable XYZ:?vec3_plug = false
    @editable X:?float_plug = false
    @editable Y:?float_plug = false
    @editable Z:?float_plug = false

rotation_settings_v0_2 := class<concrete>():
    @editable YPR:?vec3_plug = false
    @editable Yaw:?float_plug = false
    @editable Pitch:?float_plug = false
    @editable Roll:?float_plug = false

scale_settings_v0_2 := class<concrete>():
    @editable XYZ:?vec3_plug = false
    @editable X:?float_plug = false
    @editable Y:?float_plug = false
    @editable Z:?float_plug = false

ToMeshMapTuple(Entry:mesh_map_entry_v0_2)<transacts>:tuple(string, mesh)= (Entry.Name, Entry.Mesh)
mesh_map_entry_v0_2 := class<concrete>():
    @editable Name:string = ""
    @editable Mesh:mesh = EmptyProp.SM_Empty

prop_device_v0_2<public> := class(tableau_device):
    DeviceType<override>:string = "PROP"

    @editable Prop:?creative_prop = false
    @editable Asset:?creative_prop_asset = false

    MeshMap<public>:[string]mesh = map{}
    @editable NamedMeshes:[]mesh_map_entry_v0_2 = array{}
    @editable MeshID:?str_plug = false
    @editable Visible:?bool_plug = false

    @editable Time:float_plug = float_plug{}
    @editable MovementSettings:movement_settings_v0_2 = movement_settings_v0_2{}
    @editable RotationSettings:rotation_settings_v0_2 = rotation_settings_v0_2{}
    @editable ScaleSettings:scale_settings_v0_2 = scale_settings_v0_2{}

    GetResources<override>():[]resource= array. resource:
        Props := map:
            "Location" => Vec3 of Prop?.GetTransform().Translation or GetTransform().Translation
            "Mesh" => (Str of MeshID?) or (Str of "")
            "Visible" => (Bool of Visible?) or (Bool of true)
            "Time" => Float of Time
            "Target Location" => (Vec3 of MovementSettings.XYZ?) or (Vec3 of V3())
            "Target X" => (Float of MovementSettings.X?) or (Float of 0.0)
            "Target Y" => (Float of MovementSettings.Y?) or (Float of 0.0)
            "Target Z" => (Float of MovementSettings.Z?) or (Float of 0.0)
            "Target Rotation" => (Vec3 of RotationSettings.YPR?) or (Vec3 of V3())
            "Target Yaw" => (Float of RotationSettings.Yaw?) or (Float of 0.0)
            "Target Pitch" => (Float of RotationSettings.Pitch?) or (Float of 0.0)
            "Target Roll" => (Float of RotationSettings.Roll?) or (Float of 0.0)
            "Target Scale" => (Vec3 of ScaleSettings.XYZ?) or (Vec3 of V3One())
            "Target Scale X" => (Float of ScaleSettings.X?) or (Float of 0.0)
            "Target Scale Y" => (Float of ScaleSettings.Y?) or (Float of 0.0)
            "Target Scale Z" => (Float of ScaleSettings.Z?) or (Float of 0.0)

    GetSideEffects<override>()<suspends>:[]side_effect=
        P := if (Prop?). Prop else. Spawn(Asset)
        TransformController:= transform_controller_v0_1. Prop := P

        FullMeshMap := CombineAll of array:
            CreateMap of NamedMeshes.Map(ToMeshMapTuple)
            MeshMap

        FilterOptions of array:
            option. MeshID? and PushStr("Mesh", SetMesh(P, FullMeshMap).FN)
            option. Visible? and PushBool("Visible", Toggle(P).FN)
            option. StartWith(TransformController.Init)
            option. PushFloat("Time", TransformController.SetTime)
            option. MovementSettings.XYZ? and PushVec3("Target Location", TransformController.SetLocation)
            option. MovementSettings.X? and PushFloat("Target X", TransformController.SetX)
            option. MovementSettings.Y? and PushFloat("Target Y", TransformController.SetY)
            option. MovementSettings.Z? and PushFloat("Target Z", TransformController.SetZ)
            option. RotationSettings.YPR? and PushVec3("Target Rotation", TransformController.SetRotation)
            option. RotationSettings.Yaw? and PushFloat("Target Yaw", TransformController.SetYaw)
            option. RotationSettings.Pitch? and PushFloat("Target Pitch", TransformController.SetPitch)
            option. RotationSettings.Roll? and PushFloat("Target Roll", TransformController.SetRoll)
            option. ScaleSettings.XYZ? and PushVec3("Target Scale", TransformController.SetScale)
            option. ScaleSettings.X? and PushFloat("Target Scale X", TransformController.SetScaleX)
            option. ScaleSettings.Y? and PushFloat("Target Scale Y", TransformController.SetScaleY)
            option. ScaleSettings.Z? and PushFloat("Target Scale Z", TransformController.SetScaleZ)

