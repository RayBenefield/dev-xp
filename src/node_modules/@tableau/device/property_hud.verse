
using. /Fortnite.com/UI
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /Verse.org/Colors/NamedColors
using. /UnrealEngine.com/Temporary/UI
using. /UnrealEngine.com/Temporary/SpatialMath

using. Goo
using. Numb
using. Gooey
using. Tableau
using. Vertex

set_text<public> := class(str_side_effect):
    Focus<public>:half_path
    GetFocus<override>():half_path= Focus

    Widget<public>:?widget = false

    FN<override>(Value:string)<suspends>:void= if (W := text_base[Widget?]):
        W.SetText(Str2Msg(Value))

property_hud<public> := class(creative_device, side_effect_device):
    @editable ResourceID:string = ""
    @editable PropertyID:string = ""
    @editable Label:string = ""
    @editable HUDSettings:canvas_settings = canvas_settings{}
    CombineString(ID:string, Value:string):string := "{ID}: {Value}"

    GetResourceID<override>()<computes>:?string= option. ResourceID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(GameState:game_state, TypeID:string, PlayerID:string)<suspends>:[]side_effect=
        TextBlock := text_block:
            DefaultTextColor := White
            DefaultShadowOffset := option. vector2{X:=2.5,Y:=2.5}
            DefaultShadowColor := Black
            DefaultShadowOpacity := 1.0

        Widget := GameState.AddUI(TextBlock, PlayerID, HUDSettings)

        array:
            set_text{ Focus := Path(PropertyID), Widget := Widget }
            debug_num{ Focus := Path(PropertyID), Label := Label }
