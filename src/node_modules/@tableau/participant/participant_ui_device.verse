
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /UnrealEngine.com/Temporary/Diagnostics }
using { /Verse.org/Simulation/Tags }

using { Tableau }
using { TableauAgent }
using { TableauGenerator }

participant_ui_tag := class(tag){}
participant_ui_device<public> := class(creative_device, updatable):

    # Entity State Management
    var CurrentAgent:?agent = false
    var GeneratorRepository:?generator_repository = false
    var AgentRepository:?agent_repository = false
    var CurrentState:?int = false

    # Device Properties
    @editable HUD:hud_message_device = hud_message_device{}

    # Messages
    NotAParticipant<localizes><private>():message := "Not a Participant"
    Participant<localizes><private>(ID:int, GeneratorCount:int):message := "Participant ID: {ID}\nGenerators: {GeneratorCount}"

    Subscriptions<override>()<transacts>:[]event_subscription = array:
        event_subscription:
            Entity := entity_participant{}
    ClearState<override>():void= set CurrentState = false
    Update<override>()<suspends>:void=
        # No Animation Update
        if:
            Agent := CurrentAgent?
            ID := AgentRepository?.GetParticipant[Agent]?
            GenRepo := GeneratorRepository?
        then:
            Generators := GenRepo.GetOwnedGenerators(ID)
            HUD.SetText(Participant(ID, Generators.Length))
            set CurrentState = option. ID
        else:
            HUD.SetText(NotAParticipant())
            set CurrentState = false

    Initialize<public>(
        GeneratorRepo:generator_repository,
        AgentRepo:agent_repository
    )<suspends>:void=
        set CurrentAgent = option. GetPlayspace().GetPlayers()[0]

        set GeneratorRepository = option. GeneratorRepo
        set AgentRepository = option. AgentRepo
        spawn. FreshUpdate()

LoadParticipantUIDevices<public>():[]participant_ui_device=
    TaggedDevices := GetCreativeObjectsWithTag(participant_ui_tag{})
    for(Index -> Tagged : TaggedDevices, Device := participant_ui_device[Tagged]). Device
