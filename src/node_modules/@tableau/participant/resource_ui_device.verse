
using { /Fortnite.com/UI }
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /Verse.org/Simulation/Tags }
using { /Verse.org/Colors/NamedColors }
using { /UnrealEngine.com/Temporary/UI }
using { /UnrealEngine.com/Temporary/SpatialMath }

using { Tableau }
using { TableauAgent }
using { TableauResource }

resource_ui_tag := class(tag){}
resource_ui_device<public> := class(creative_device, updatable):

    # Entity State Management
    @editable ResourceID:int = 0
    var CurrentAgent:?agent = false
    var AgentRepository:?agent_repository = false
    var ResourceRepository:?resource_repository = false
    var ParticipantRepository:?participant_repository = false
    var ResourceText:?text_block = false

    # Messages
    Resources<localizes><private>(Resource:string, Count:string):message := "{Resource}: {Count}"

    Subscriptions<override>()<transacts>:[]event_subscription = array:
        event_subscription:
            Entity := entity_participant{}
    ClearState<override>():void= {}
    Update<override>()<suspends>:void=
        # No Animation Update
        if:
            Agent := CurrentAgent?
            Resource := ResourceRepository?.GetByID[ResourceID]
            TextBlock := ResourceText?
        then:
            Amount := if:
                ParticipantID := AgentRepository?.GetParticipant[Agent]?
                Participant := ParticipantRepository?.GetByID[ParticipantID]
                Current := Participant.Resources[ResourceID]
            then:
                Current
            else:
                num{}

            TextBlock.SetText(Resources(Resource.Name, "{Amount}"))

    Initialize<public>(
        AgentRepo:agent_repository,
        ResourceRepo:resource_repository,
        ParticipantRepo:participant_repository
    )<suspends>:void=
        set CurrentAgent = option. GetPlayspace().GetPlayers()[0]

        if (PlayerUI := GetPlayerUI[player[CurrentAgent?]]):
            Results := MakeCanvas()
            Canvas := Results(0)
            set ResourceText = option. Results(1)
            PlayerUI.AddWidget(Canvas)

        set AgentRepository = option. AgentRepo
        set ResourceRepository = option. ResourceRepo
        set ParticipantRepository = option. ParticipantRepo
        spawn. FreshUpdate()

    MakeCanvas():tuple(canvas, text_block)=
        ResourceTextBlock := text_block:
            DefaultText := Resources("<None>", "0")
            DefaultTextColor := White
            DefaultShadowOffset := option. vector2{X:=2.5,Y:=2.5}
            DefaultShadowColor := Black
        ResourceTextBlock.SetShadowOpacity(1.0)

        MyCanvas := canvas:
            Slots := array:
                canvas_slot:
                    Anchors := anchors{Minimum:=vector2{X:=0.024479,Y:=0.731481},Maximum:=vector2{X:=0.024479,Y:=0.731481}}
                    Offsets := margin{}
                    Alignment := vector2{X:=0.0,Y:=1.0}
                    SizeToContent := true
                    Widget := stack_box:
                        Orientation := orientation.Vertical
                        Slots := array:
                            stack_box_slot:
                                HorizontalAlignment := horizontal_alignment.Left
                                VerticalAlignment := vertical_alignment.Fill
                                Widget := overlay:
                                    Slots := array:
                                        overlay_slot:
                                            Widget := stack_box:
                                                Orientation := orientation.Horizontal
                                                Slots := array:
                                                    stack_box_slot:
                                                        Widget := ResourceTextBlock
                                                        Padding := margin{Left:=20.0}
                                                        HorizontalAlignment := horizontal_alignment.Fill
                                                        VerticalAlignment := vertical_alignment.Center
                                            Padding := margin{Left:=30.0,Right:=30.0}
                                            HorizontalAlignment := horizontal_alignment.Center
                                            VerticalAlignment := vertical_alignment.Center

        (MyCanvas, ResourceTextBlock)

LoadResourceUIDevices<public>():[]resource_ui_device=
    TaggedDevices := GetCreativeObjectsWithTag(resource_ui_tag{})
    for(Index -> Tagged : TaggedDevices, Device := resource_ui_device[Tagged]). Device

