
using { /Fortnite.com/UI }
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /Verse.org/Simulation/Tags }
using { /Verse.org/Colors/NamedColors }
using { /UnrealEngine.com/Temporary/UI }
using { /UnrealEngine.com/Temporary/SpatialMath }

using { Tableau }
using { TableauAgent }
using { TableauResource }

resource_ui_tag := class(tag){}
resource_ui_device<public> := class(creative_device, updatable):

    # Entity State Management
    @editable ResourceID:int = 0
    @editable MinimumAnchor:vector2 = vector2{X:=0.025,Y:=0.75}
    @editable MaximumAnchor:vector2 = vector2{X:=0.025,Y:=0.75}
    var CurrentAgent:?agent = false
    var AgentRepository:?agent_repository = false
    var ResourceRepository:?resource_repository = false
    var ParticipantRepository:?participant_repository = false
    VM:resource_vm = resource_vm{}

    # Messages
    Resources<localizes><private>(Resource:string, Count:string):message := "{Resource}: {Count}"

    Subscriptions<override>()<transacts>:[]event_subscription = array:
        event_subscription:
            Entity := entity_participant{}
    ClearState<override>():void= {}
    Update<override>()<suspends>:void=
        if:
            Agent := CurrentAgent?
            Resource := ResourceRepository?.GetByID[ResourceID]
        then:
            Amount := if:
                ParticipantID := AgentRepository?.GetParticipant[Agent]?
                Participant := ParticipantRepository?.GetByID[ParticipantID]
            then:
                Participant.GetResource(ResourceID)
            else:
                num{}

            VM.ResourceText.Set(Resources(Resource.Name, "{Amount}"))

    Initialize<public>(
        AgentRepo:agent_repository,
        ResourceRepo:resource_repository,
        ParticipantRepo:participant_repository
    )<suspends>:void=
        set CurrentAgent = option. GetPlayspace().GetPlayers()[0]

        ResourceUI:resource_ui = resource_ui:
            VM := VM
            MinimumAnchor := MinimumAnchor
            MaximumAnchor:= MaximumAnchor
        if (Player := player[CurrentAgent?]). ResourceUI.AddForPlayer(Player)

        set AgentRepository = option. AgentRepo
        set ResourceRepository = option. ResourceRepo
        set ParticipantRepository = option. ParticipantRepo
        spawn. FreshUpdate()

LoadResourceUIDevices<public>():[]resource_ui_device=
    TaggedDevices := GetCreativeObjectsWithTag(resource_ui_tag{})
    for(Index -> Tagged : TaggedDevices, Device := resource_ui_device[Tagged]). Device

