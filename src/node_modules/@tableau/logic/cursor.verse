
using. /Verse.org/Simulation
using. /Fortnite.com/Devices
using. /UnrealEngine.com/Temporary/SpatialMath

using. Tableau
using. TableauEffect
using. TableauResource

coords<public> := enum{ X, Y, XNeg, YNeg, Neither }
GetAxis(C:coords):string = case(C):
    coords.X => "X"
    coords.XNeg => "X Neg"
    coords.Y => "Y"
    coords.YNeg => "Y Neg"
    coords.Neither => "ZERO"

cursor_settings<public> := class<concrete>():
    @editable ID<public>:string = "Cursor"
    @editable Prop<public>:?creative_prop = false
    @editable GridSize<public>:float = 128.0
    @editable X<public>:int = 0
    @editable Y<public>:int = 0
    @editable MinX<public>:?int = false
    @editable MaxX<public>:?int = false
    @editable MinY<public>:?int = false
    @editable MaxY<public>:?int = false
    @editable XAxis<public>:coords = coords.X
    @editable YAxis<public>:coords = coords.Y
    @editable ZAxis<public>:coords = coords.Neither

CreateCursorResource<public><constructor>(C:cursor_settings) := resource:
    ID := C.ID
    Props := map:
        "ONE" => prop_float. Default := 1.0
        "-ONE" => prop_float. Default := -1.0
        "ZERO" => prop_float. Default := 0.0
        "COMMA" => prop_str. Default := ","
        "X" => prop_int. Default := C.X
        "X Neg" => prop_int{ Focus := Path("X"), FN := "Negate" }
        "Y" => prop_int. Default := C.Y
        "Y Neg" => prop_int{ Focus := Path("Y"), FN := "Negate" }
        "Min X" => prop_int. Default := C.MinX? or 0
        "Max X" => prop_int. Default := C.MaxX? or 0
        "Min Y" => prop_int. Default := C.MinY? or 0
        "Max Y" => prop_int. Default := C.MaxY? or 0
        "Has Min X" => prop_bool. Default := if(C.MinX?). true else. false
        "Has Max X" => prop_bool. Default := if(C.MaxX?). true else. false
        "Has Min Y" => prop_bool. Default := if(C.MinY?). true else. false
        "Has Max Y" => prop_bool. Default := if(C.MaxY?). true else. false
        "At Min X" => prop_bool{ Focus := Path("X"), FN := "Int <=", Tweak := Path("Min X") }
        "At Max X" => prop_bool{ Focus := Path("X"), FN := "Int >=", Tweak := Path("Max X") }
        "At Min Y" => prop_bool{ Focus := Path("Y"), FN := "Int <=", Tweak := Path("Min Y") }
        "At Max Y" => prop_bool{ Focus := Path("Y"), FN := "Int >=", Tweak := Path("Max Y") }
        "Block Min X" => prop_bool{ Focus := Path("Has Min X"), FN := "AND", Tweak := Path("At Min X") }
        "Block Max X" => prop_bool{ Focus := Path("Has Max X"), FN := "AND", Tweak := Path("At Max X") }
        "Block Min Y" => prop_bool{ Focus := Path("Has Min Y"), FN := "AND", Tweak := Path("At Min Y") }
        "Block Max Y" => prop_bool{ Focus := Path("Has Max Y"), FN := "AND", Tweak := Path("At Max Y") }
        "+X" => prop_int{ Focus := Path("X"), FN := "+", Tweak := Path("ONE")}
        "-X" => prop_int{ Focus := Path("X"), FN := "+", Tweak := Path("-ONE")}
        "+Y" => prop_int{ Focus := Path("Y"), FN := "+", Tweak := Path("ONE") }
        "-Y" => prop_int{ Focus := Path("Y"), FN := "+", Tweak := Path("-ONE") }
        "Row Offset" => prop_int{ Focus := Path("Y"), FN := "+", Tweak := Path("-ONE") }
        "Row Start" => prop_int{ Focus := Path("Row Offset"), FN := "*", Tweak := Path("Max X") }
        "Selection Number" => prop_int{ Focus := Path("Row Start"), FN := "+", Tweak := Path("X") }
        "Grid Size" => prop_float. Default := C.GridSize
        "X Coord" => prop_float{ Focus := Path(GetAxis(C.XAxis)), FN := "*", Tweak := Path("Grid Size") }
        "Y Coord" => prop_float{ Focus := Path(GetAxis(C.YAxis)), FN := "*", Tweak := Path("Grid Size") }
        "Z Coord" => prop_float{ Focus := Path(GetAxis(C.ZAxis)), FN := "*", Tweak := Path("Grid Size") }
        "XY Location" => prop_vec2{ Focus := Path("X Coord"), FN := "Append", Tweak := Path("Y Coord") }
        "Without Offset" => prop_vec3{ Focus := Path("XY Location"), FN := "Append", Tweak := Path("Z Coord") }
        "Offset" => prop_vec3. Default := if (P := C.Prop?). P.GetTransform().Translation else. vector3{}
        "Location" => prop_vec3{ Focus := Path("Without Offset"), FN := "+", Tweak := Path("Offset") }
        "Partial ID" => prop_str{ Focus := Path("X"), FN := "Append", Tweak := Path("COMMA") }
        "Location ID" => prop_str{ Focus := Path("Partial ID"), FN := "Append", Tweak := Path("Y") }
    Abilities := map:
        "Decrease X" => ability. Effects := array:
            IsFalse("Block Min X")
            Set("X").To("-X")
        "Increase X" => ability. Effects := array:
            IsFalse("Block Max X")
            Set("X").To("+X")
        "Increase Y" => ability. Effects := array:
            IsFalse("Block Max Y")
            Set("Y").To("+Y")
        "Decrease Y" => ability. Effects := array:
            IsFalse("Block Min Y")
            Set("Y").To("-Y")
