
using. /Fortnite.com/Devices
using. /Verse.org/Simulation

using. Numb

demo_config<public> := class(tableau_device):
    GetResources<override>():[]resource= array:
        resource:
            ID := "Wood"
            Props := map:
                "Count" => Num of 0.0
        resource:
            ID := "Golden Tree"
            Actions := map:
                "Harvest" => Action of array:
                    effect{ FN := "Increase", Focus := Path("Wood", "Count"), Tweak := ONE() }
        resource:
            ID := "Basic Tree"
            Props := map:
                "Max" => Float of 15.0
                "Respawn" => Float of 3.0
                "Count" => Num of 15.0
                "Harvest Rate" => Num of 5.0
                "Bonus" => Num of 1.0
                "Cost" => Num of 500.0
                "Has Wood" => Bool of (Path("Count"), ">=", ONE())
                "Can Afford" => Bool of (Path("Gold", "Count"), ">=", Path("Cost"))
                "With Bonus" => Num of (Path("Harvest Rate"), "Multiply", Path("Bonus"))
            Actions := map:
                "Harvest" => Action of array:
                    effect{ FN := "Is True", Focus := Path("Has Wood") }
                    effect{ FN := "Decrease", Focus := Path("Count"), Tweak := Path("Harvest Rate") }
                    effect{ FN := "Increase", Focus := Path("Wood", "Count"), Tweak := Path("With Bonus") }
                    effect{ FN := "Is False", Focus := Path("Has Wood") }
                    effect{ FN := "Execute Action", Focus := Path("Respawn") }
                "Respawn" => Action of array:
                    effect{ FN := "Delay", Tweak := Path("Respawn") }
                    effect{ FN := "Increase", Focus := Path("Count"), Tweak := Path("Max") }
                "Upgrade" => Action of array:
                    effect{ FN := "Is True", Focus := Path("Can Afford") }
                    effect{ FN := "Decrease", Focus := Path("Gold", "Count"), Tweak := Path("Cost") }
                    effect{ FN := "Increase", Focus := Path("Bonus"), Tweak := ONE() }
