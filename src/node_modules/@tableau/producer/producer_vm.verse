using { Tableau }

producer_vm<public> := class():
    ID<public>:string
    BuyEffector<public>:oldeffector
    Name<public>:gooey_message = gooey_message{}
    var Participants<public>:[string]producer_participant_vm = map{}

    Init<public>(Producer:producer)<suspends>:void=
        spawn. Name.Init(Str2Msg("Buy x1 {Producer.Name}"))

    # TODO: Convert to `gooey_num` when we can map to `num->string` with Gooey
    AddParticipant<public>(ParticipantID:string, Producer:producer)<suspends>:producer_participant_vm =
        VM := producer_participant_vm:
            ID := ParticipantID
            ProducerID := Producer.ID
            BuyEffector := BuyEffector

        spawn. VM.Init(Producer)
        if:
            set Participants[ParticipantID] = VM
        return VM

producer_participant_vm<public> := class():
    ID<public>:string
    ProducerID<public>:string
    BuyEffector<public>:oldeffector
    Cost<public>:gooey_message = gooey_message{}
    Count<public>:gooey_message = gooey_message{}

    Init<public>(Producer:producer)<suspends>:void=
        Amount := Producer.GetCost[ID].Amount or num{}
        spawn. Cost.Init(Str2Msg("Cost: {Amount}"))
        spawn. Count.Init(Str2Msg("Count: {Producer.GetCount(ID)}"))

    Buy<public>():void =
        Command := command:
            Subject := ProducerID
            Target := ID

        spawn. BuyEffector.Play(Command, load{})
