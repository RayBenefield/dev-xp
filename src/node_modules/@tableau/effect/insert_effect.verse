
Insert<public><constructor>(Focus:string)<transacts> := effect. Insert<constructor>(Path(Focus))
Insert<public><constructor>(ResID:string, PropID:string)<transacts> := effect. Insert<constructor>(Path(ResID, PropID))
Insert<public><constructor>(ResID:half_path, PropID:string)<transacts> := effect. Insert<constructor>(Path(ResID, PropID))
Insert<public><constructor>(ResID:string, PropID:half_path)<transacts> := effect. Insert<constructor>(Path(ResID, PropID))
Insert<public><constructor>(ResID:half_path, PropID:half_path)<transacts> := effect. Insert<constructor>(Path(ResID, PropID))
Insert<public><constructor>(Focus:half_path)<transacts> := effect{ FN := "Insert", Focus := Focus }
insert_effect<public> := class():
    Focus<public>:half_path
    Tweak<public>:half_path
    State<public>:scoped_state
    Affect<public>()<suspends>:?string=
        Prop := State.ToStrs(Tweak)
        Items := Prop.Get()
        ItemToInsert := State.ToStr(Focus).Get()
        NewItems := Items + array. ItemToInsert
        Prop.Set(NewItems)
        return false
