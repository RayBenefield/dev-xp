
using. Numb

Increase<public><constructor>(Focus:string) := effect. Increase<constructor>(Path(Focus))
Increase<public><constructor>(ResID:string, PropID:string) := effect. Increase<constructor>(Path(ResID, PropID))
Increase<public><constructor>(ResID:half_path, PropID:string) := effect. Increase<constructor>(Path(ResID, PropID))
Increase<public><constructor>(ResID:string, PropID:half_path) := effect. Increase<constructor>(Path(ResID, PropID))
Increase<public><constructor>(ResID:half_path, PropID:half_path) := effect. Increase<constructor>(Path(ResID, PropID))
Increase<public><constructor>(Focus:half_path) := effect{ FN := "Increase", Focus := Focus }
increase_effect<public> := class():
    Focus<public>:half_path
    Tweak<public>:half_path
    State<public>:scoped_state
    Affect<public>()<suspends>:?string=
        Prop := State.ToNum(Focus)
        StartingValue := Prop.Get()
        ModifierValue := State.ToNum(Tweak).Get()
        Prop.Set(StartingValue + ModifierValue)
        return false
