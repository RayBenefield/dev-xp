
using. Goo

Execute<public><constructor>(Focus:string)<transacts> := effect. Execute<constructor>(Path(Focus))
Execute<public><constructor>(ResID:string, PropID:string)<transacts> := effect. Execute<constructor>(Path(ResID, PropID))
Execute<public><constructor>(ResID:half_path, PropID:string)<transacts> := effect. Execute<constructor>(Path(ResID, PropID))
Execute<public><constructor>(ResID:string, PropID:half_path)<transacts> := effect. Execute<constructor>(Path(ResID, PropID))
Execute<public><constructor>(ResID:half_path, PropID:half_path)<transacts> := effect. Execute<constructor>(Path(ResID, PropID))
Execute<public><constructor>(Focus:half_path)<transacts> := effect{ FN := "Execute Action", Focus := Focus, Tweak := TWEAK().ToPath() }

ExecuteEffect<public>(Focus:half_path, Tweak:half_path, State:scoped_state)<suspends>:?string=
    State.ExecuteAction(Focus, Tweak)
    return false
