
IsFalse<public><constructor>(Focus:string)<transacts> := effect. IsFalse<constructor>(Path(Focus))
IsFalse<public><constructor>(ResID:string, PropID:string)<transacts> := effect. IsFalse<constructor>(Path(ResID, PropID))
IsFalse<public><constructor>(ResID:half_path, PropID:string)<transacts> := effect. IsFalse<constructor>(Path(ResID, PropID))
IsFalse<public><constructor>(ResID:string, PropID:half_path)<transacts> := effect. IsFalse<constructor>(Path(ResID, PropID))
IsFalse<public><constructor>(ResID:half_path, PropID:half_path)<transacts> := effect. IsFalse<constructor>(Path(ResID, PropID))
IsFalse<public><constructor>(Focus:half_path)<transacts> := effect{ FN := "Is False", Focus := Focus }
is_false_effect<public> := class():
    Focus<public>:half_path
    Tweak<public>:half_path
    State<public>:scoped_state
    Affect<public>()<suspends>:?string=
        Value := State.ToBool(Focus).Get()
        if (not Value?). return false

        State.ExecuteAction(Tweak)
        return option. "{Focus.GetKey()} is not False"
