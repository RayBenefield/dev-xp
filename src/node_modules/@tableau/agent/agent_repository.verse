using { /Verse.org/Simulation }

# TODO: Address things Knight Breaker noticed:
#  * shouldn't ClearAgent also clear the the agent to participent map?
#  * GetAgent and GetParticipent are both decides even though they cannot fail, the failure is expressed through the optional type in this case
# TODO: Use `Initial` public, but don't expose actual `ParticipantToAgent` to force getter usage
agent_repository<public> := class<concrete>():
    var AgentToParticipant:[agent]?int = map{}
    var ParticipantToAgent<public>:[int]?agent = map{}

    UpdateAgent<public>(Agent:agent, ParticipantID:int):void=
        if (set AgentToParticipant[Agent] = option. ParticipantID) {}
        if (set ParticipantToAgent[ParticipantID] = option. Agent) {}

    ClearAgent<public>(ParticipantID:int):void=
        if (set ParticipantToAgent[ParticipantID] = false) {}

    # This is not a decides for compatibility with FN device conventions of `?agent`
    GetAgent<public>(ID:int)<transacts>:?agent=
        if(Agent := ParticipantToAgent[ID]?). option. Agent else. false

    GetParticipant<public>(Agent:agent)<decides><transacts>:?int=
        if(ParticipantID := AgentToParticipant[Agent]?). option. ParticipantID else. false
