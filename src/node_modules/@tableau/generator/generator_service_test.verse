
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }

using { Tableau }
using { TableauTesting }
using { TableauGenerator }
using { TableauParticipant }

generator_service_test := class(creative_device, test_suite):
    GetName<override>():string = "Generator Service"
    GetTests<override>():[]test_case = array:
        test_case:
            Name := "Should be able to buy an owned generator"
            Test := SimpleBuy
        test_case:
            Name := "Should not be able to buy an unowned generator"
            Test := UnownedPurchase
        test_case:
            Name := "Should not be able to buy a generator owned by someone else"
            Test := DifferentOwnerPurchase

    SimpleBuy():?failure =
        # Arrange
        Generator := generator{ ID := 13, OwnerID := 26 }
        Repo := generator_repository. Initial := array. Generator
        Service := generator_service{ Repo := Repo, EffectProvider := effect_provider{} }
        Ev1 := Ev_GenPurchased(entity_generator{}, 13)
        Ev2 := Ev_GenPurchased(entity_participant{}, 26)

        # Act
        Events := Service.Buy(13, 26)

        # Assert
        if(Events.Length <> 2). return fail("Not the right number of Domain Events")
        if(not Events.Includes[Ev1]). return fail("No generator purchased event for generator")
        if(not Events.Includes[Ev2]). return fail("No generator purchased event for participant")

        # Pass
        return false

    UnownedPurchase():?failure =
        # Arrange
        Generator := generator{ ID := 13 }
        Repo := generator_repository. Initial := array. Generator
        Service := generator_service{ Repo := Repo, EffectProvider := effect_provider{} }

        # Act
        Events := Service.Buy(13, 26)

        # Assert
        if(Events.Length <> 0). return fail("Not the right number of Domain Events")

        # Pass
        return false

    DifferentOwnerPurchase():?failure =
        # Arrange
        Generator := generator{ ID := 13, OwnerID := 26 }
        Repo := generator_repository. Initial := array. Generator
        Service := generator_service{ Repo := Repo, EffectProvider := effect_provider{} }

        # Act
        Events := Service.Buy(13, 39)

        # Assert
        if(Events.Length <> 0). return fail("Not the right number of Domain Events")

        # Pass
        return false
