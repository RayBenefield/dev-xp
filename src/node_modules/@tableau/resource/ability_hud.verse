
using { /Fortnite.com/UI }
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }

using { Tableau }

ability_hud<public> := class(creative_device, tableau_device):
    @editable ResourceID:string = ""
    @editable AbilityID:string = ""
    @editable EnabledPropertyID:string = ""
    @editable Label:string = ""
    @editable HUDSettings:canvas_settings = canvas_settings{}

    Init<override>(GameState:game_state)<suspends>:void=
        GameState.AddHUD("Ability HUD", SetupHUD, HUDSettings, ?Clickable := true)

    SetupHUD(GameState:game_state, ParticipantID:string):game_hud=
        if (GameState.Resources[ResourceID].Abilities[AbilityID]):
            LabelVM := gooey_string{}
            spawn. LabelVM.Init(Label)
            EnabledVM := if (VM := GameState.Resources[ResourceID].CompProps.Bools[EnabledPropertyID]):
                VM.ValueFor(ParticipantID)
            else:
                VM := gooey_bool{}
                spawn. VM.Init(true)
                VM
            responsive_button:
                GooeyText := LabelVM
                GooeyEnabled := EnabledVM
                Action := GameState.GetAbility(ResourceID, AbilityID, ParticipantID)
                Button := button_regular{}
        else:
            responsive_text_block:
                GooeyText := gooey_string{}
                TextBlock := WhiteText()
