
using. /Verse.org/Simulation
using. /UnrealEngine.com/Temporary/Diagnostics
using. /UnrealEngine.com/Temporary/SpatialMath

using. Goo
using. Numb
using. Tableau
using. TableauEffect
using. Vertex

resource_vm<public> := class():
    Resource<public>:resource
    GetPropType<public>(PropID:string)<transacts>:prop_type= Resource.GetPropType(PropID)

ability<public> := class():
    Effects<public>:[]effect = array{}

    ActionFor<public>(State:scoped_state):event_goo=
        ActionGoo := EventGoo()
        var Stream:event_goo = ActionGoo
        for(Effect:Effects):
            case(Effect.FN):
                "Set" =>
                    Effector := set_effect{ Focus := Effect.Focus, Tweak := Effect.Tweak, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Execute Ability" =>
                    Effector := execute_effect{ Focus := Effect.Focus, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Is True" =>
                    Effector := is_true_effect{ Focus := Effect.Focus, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Is False" =>
                    Effector := is_false_effect{ Focus := Effect.Focus, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Create Resource" =>
                    Effector := create_effect{ Focus := Effect.Focus, Tweak := Effect.Tweak, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Delay" =>
                    Effector := delay_effect{ Focus := Effect.Focus, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Increase" =>
                    Effector := increase_effect{ Focus := Effect.Focus, Tweak := Effect.Tweak, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Decrease" =>
                    Effector := decrease_effect{ Focus := Effect.Focus, Tweak := Effect.Tweak, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                "Log" =>
                    Effector := log_effect{ Focus := Effect.Focus, State := State }
                    set Stream = EventGoo(Affect(Stream, Effector.Affect))
                _ => Print("{Effect.FN} is unsupported")
        ActionGoo
