
using. Numb
using. Tableau

Set<public><constructor>(Focus:string) := effect. Set<constructor>(Path(Focus))
Set<public><constructor>(ResID:string, PropID:string) := effect. Set<constructor>(Path(ResID, PropID))
Set<public><constructor>(ResID:half_path, PropID:string) := effect. Set<constructor>(Path(ResID, PropID))
Set<public><constructor>(ResID:string, PropID:half_path) := effect. Set<constructor>(Path(ResID, PropID))
Set<public><constructor>(ResID:half_path, PropID:half_path) := effect. Set<constructor>(Path(ResID, PropID))
Set<public><constructor>(Focus:half_path) := effect{ FN := "Set", Focus := Focus }

set_effector<public> := class(effector):
    GameState<public>:game_state

    Play<override>(Source:string, Activator:string, Focus:prop_path, Tweak:prop_path)<suspends>:?[]command=
        PropType := GameState.ResourceRepository.GetPropTypes[Tweak.ResourceID][Tweak.PropertyID] or prop_type.Unknown
        ActualPay := case(PropType):
            prop_type.Num =>
                Value := GameState.GetNumProp(Tweak, Activator).Get()
                load{ Num := Value }
            prop_type.Str =>
                Value := GameState.GetStrProp(Tweak, Activator).Get()
                load{ Str := Value }
            prop_type.Bool =>
                Value := GameState.GetBoolProp(Tweak, Activator).Get()
                load{ Bool := Value }
            prop_type.Integer =>
                Value := GameState.GetIntProp(Tweak, Activator).Get()
                load{ Integer := Value }
            _ => load{}

        option. array. command:
            Subject := Focus.ResourceID
            Target := Activator
            Property := Focus.PropertyID
            Pay := ActualPay
