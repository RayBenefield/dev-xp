
using. /Verse.org/Simulation

using. Tableau

DelayBy<public><constructor>(Focus:string) := effect. DelayBy<constructor>(Path(Focus))
DelayBy<public><constructor>(ResID:string, PropID:string) := effect. DelayBy<constructor>(Path(ResID, PropID))
DelayBy<public><constructor>(ResID:half_path, PropID:string) := effect. DelayBy<constructor>(Path(ResID, PropID))
DelayBy<public><constructor>(ResID:string, PropID:half_path) := effect. DelayBy<constructor>(Path(ResID, PropID))
DelayBy<public><constructor>(ResID:half_path, PropID:half_path) := effect. DelayBy<constructor>(Path(ResID, PropID))
DelayBy<public><constructor>(Focus:half_path) := effect{ FN := "Delay", Focus := Focus }

delay_effector<public> := class(effector):
    GameState<public>:game_state

    Play<override>(Source:string, Activator:string, Focus:prop_path, Tweak:prop_path)<suspends>:?[]command=
        PlayerID := Activator
        Delay := GameState.GetFloatProp(Focus, PlayerID).Get()
        Sleep(Delay)

        return option. array{}
