import createCommandStream from '@rampant-giveaway/commands'
import { filter, share } from 'rxjs/operators'

const cache = {}

export default ({ chat, streamer }) => {
    const command$ = createCommandStream(chat)

    const intent$ = intent => {
        if (intent in cache) return cache[intent]
        const stream = command$.pipe(
            filter(({ command }) => command === intent),
            share()
        )
        cache[intent] = stream
        return stream
    }

    return {
        whisper: ({ userName, message }) => chat.whisper(userName, message),
        message: chat.message,
        whisperStreamer: msg => chat.whisper(streamer, msg),
        command$: (intent, { streamer: streamerFilter = false, user } = {}) => {
            const filters = []

            if (user)
                filters.push(
                    filter(
                        ({ userName }) =>
                            userName.toLowerCase() === user.toLowerCase()
                    )
                )

            if (streamerFilter)
                filters.push(
                    filter(
                        ({ userName }) =>
                            userName.toLowerCase() === streamer.toLowerCase()
                    )
                )

            return intent$(intent).pipe(...filters)
        },
    }
}
