import { map, mergeMap } from 'rxjs/operators'

export default ({ moderator, prefix, giveawayRepo }) => {
    const startOrUpdate = ({ giveaway, slots }) => data =>
        !data
            ? giveaway.startGiveaway(slots)
            : giveaway.updateCurrentGiveaway(data.slots + slots)

    const startGiveaway = ({ giveaway, slots }) =>
        giveaway
            .getGiveaway()
            .then(startOrUpdate({ giveaway, slots }))
            .then(() => giveaway.updateCurrentGiveaway())

    return moderator.command$('give', { streamer: true }).pipe(
        moderator.currentGiveaway(),
        moderator.gate(
            ([, { giveaway }]) => !giveaway,
            ([, { giveaway }]) =>
                `You are already running a [${giveaway}] giveaway.`
        ),
        moderator.gate(
            ([{ args }]) => args.length > 0,
            `You've given no arguments for a giveaway.`
        ),
        map(([{ args }]) => {
            const [giveaway = null, entryPool = prefix] = args
            return { giveaway, entryPool, slots: 1 }
        }),
        map(({ giveaway, entryPool, slots }) => ({
            giveaway: giveawayRepo.with({ giveaway, entryPool }),
            slots,
        })),
        mergeMap(startGiveaway)
    )
}
