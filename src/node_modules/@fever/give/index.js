import repoCreator from '@fever/giveaway-repo'
import createCommandStream from '@rampant-giveaway/commands'
import { tap, map, mergeMap, filter, withLatestFrom } from 'rxjs/operators'

export default ({ moderator, db, prefix, logger: baseLogger }) => {
    const logger = baseLogger.child({ plugin: '@fever/give' })
    const command$ = createCommandStream(moderator)
    const currentGiveaway$ = db.onDocumentChange('giveaways/current')
    const createRepo = repoCreator({ db, logger })

    command$
        .pipe(
            filter(({ command }) => command === 'give'),
            filter(
                ({ user_name }) => user_name.toLowerCase() === 'raybenefield'
            ),
            withLatestFrom(currentGiveaway$),
            tap(
                ([, { giveaway }]) =>
                    giveaway &&
                    moderator.whisper(
                        'raybenefield',
                        `You are already running a [${giveaway}] giveaway.`
                    )
            ),
            filter(([, { giveaway }]) => !giveaway),
            tap(
                ([{ args }]) =>
                    args.length === 0 &&
                    moderator.whisper(
                        'raybenefield',
                        `You've given no arguments for a giveaway.`
                    )
            ),
            filter(([{ args }]) => args.length > 0),
            map(([{ args }]) => {
                let giveaway = null
                let entryPool = prefix
                const slots = 1

                if (args.length === 1) {
                    giveaway = args[0]
                }
                if (args.length === 2) {
                    giveaway = args[0]
                    entryPool = args[1]
                }
                return { giveaway, entryPool, slots }
            }),
            map(({ giveaway, entryPool, slots }) => ({
                repo: createRepo({ giveaway, entryPool }),
                slots,
            })),
            mergeMap(({ repo, slots }) =>
                repo
                    .getGiveaway()
                    .then(
                        data =>
                            !data
                                ? repo.startGiveaway(slots)
                                : repo.updateGiveaway(data.slots + slots)
                    )
                    .then(() => repo.updateCurrentGiveaway())
            )
        )
        .subscribe()
}
