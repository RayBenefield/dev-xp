import { filter } from 'rxjs/operators'

export default ({ streamer }) => (stream$, options) => {
    const filters = []
    const { user, streamer: streamerFilter } = options

    if (user !== undefined)
        filters.push(
            ({ userName }) =>
                user
                    ? userName.toLowerCase() === user.toLowerCase()
                    : userName.toLowerCase() !== user.toLowerCase()
        )

    if (streamerFilter !== undefined)
        filters.push(
            ({ userName }) =>
                streamer
                    ? userName.toLowerCase() === streamer.toLowerCase()
                    : userName.toLowerCase() !== streamer.toLowerCase()
        )

    return stream$.pipe(
        filter(msg =>
            filters.reduce((result, next) => next(msg) || result, false)
        )
    )
}
