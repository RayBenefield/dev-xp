import repoCreator from '@fever/giveaway-repo'
import { tap, map, filter, withLatestFrom } from 'rxjs/operators'

export default ({ moderator, db, logger: baseLogger }) => {
    const logger = baseLogger.child({ plugin: '@fever/enter' })
    const currentGiveaway$ = db.onDocumentChange('giveaways/current')
    const createRepo = repoCreator({ db, logger })

    const checkAlreadyIn = ([{ userId, userName }, { entrants = [] }]) =>
        entrants.includes(userId) &&
        moderator.whisper(userName, 'You are already in the giveaway.')

    const filterAlreadyIn = ([{ userId }, { entrants = [] }]) =>
        !entrants.includes(userId)

    const gate = (gateFilter, message) => stream$ =>
        stream$.pipe(
            tap(args => {
                const [{ userName }] = args

                if (!gateFilter(args)) moderator.whisper({ userName, message })
            }),
            filter(gateFilter)
        )

    moderator
        .command$('enter')
        .pipe(
            withLatestFrom(currentGiveaway$),
            gate(
                ([, { giveaway }]) => giveaway,
                'There is currently no giveaway happening.'
            ),
            tap(checkAlreadyIn),
            filter(filterAlreadyIn),
            map(([msg, current]) => ({ repo: createRepo(current), msg })),
            tap(({ repo, msg: { userId } }) => repo.addEntrant(userId)),
            tap(({ msg: { userName } }) =>
                logger.extend(`${userName} entered the giveaway.`)
            ),
            map(({ msg: { userName } }) => ({
                userName,
                message: 'You have been entered into the giveaway.',
            }))
        )
        .subscribe(moderator.whisper)
}
