import { firestore } from 'firebase-admin'
import { filter, map, withLatestFrom } from 'rxjs/operators'
import createCommandStream from '@rampant-giveaway/commands'

const { FieldValue } = firestore

export default ({ moderator, db, logger: baseLogger }) => {
    const logger = baseLogger.child({ plugin: '@fever/enter' })
    const command$ = createCommandStream(moderator)
    const currentGiveaway$ = db.onDocumentChange('giveaways/current')

    command$
        .pipe(
            filter(({ command }) => command === 'enter'),
            map(({ user_id: userId, user_name: userName }) => ({
                userId,
                userName,
            })),
            withLatestFrom(currentGiveaway$),
            filter(([, { giveaway }]) => giveaway)
        )
        .subscribe(([{ userId, userName }, { entrants = [] }]) => {
            if (entrants.includes(userId)) {
                moderator.whisper(userName, 'You are already in the giveaway.')
                return
            }

            logger.extend(`${userName} entered the giveaway.`)
            moderator.whisper(
                userName,
                'You have been entered into the giveaway.'
            )
            db.update('giveaways/current', {
                entrants: FieldValue.arrayUnion(userId),
            })
        })
}
