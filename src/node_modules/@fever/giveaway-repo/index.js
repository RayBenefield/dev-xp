import { firestore } from 'firebase-admin'

const { FieldValue } = firestore

export default ({ db, logger: baseLogger }) => {
    const logger = baseLogger.child({ plugin: 'giveaways' })
    const current = 'giveaways/current'

    return ({ giveaway, entryPool }) => {
        const key = `giveaways/${entryPool}/giveaways/${giveaway}`
        const pool = `pools/${entryPool}/entries`

        return {
            getGiveaway: () => db.get(key),
            startGiveaway: slots =>
                db
                    .set(key, { winners: 0, slots })
                    .then(() =>
                        logger.extend(
                            `Starting a giveaway with ${entryPool}-entries for ${giveaway} giveaway with ${slots} winner${
                                slots > 1 ? 's' : ''
                            }`
                        )
                    ),
            increaseGiveaway: slots => db.update(key, { slots }),
            updateCurrentGiveaway: () =>
                db.set(current, { entryPool, giveaway }),
            addEntrant: userId =>
                db.update(current, { entrants: FieldValue.arrayUnion(userId) }),
            clearCurrentGiveaway: () =>
                db.set(current, { entryPool: null, giveaway: null }),
            stashGiveawayEntries: entrants =>
                db.push(`${key}/entrants`, entrants),
            addWinnersToGiveaway: winners =>
                Promise.all([
                    db.update(key, {
                        winners: FieldValue.increment(winners.length),
                    }),
                    Promise.all(
                        winners.map(winner =>
                            db.set(`${key}/winners/${winner.id}`, winner)
                        )
                    ),
                ]),
            getEntrantEntries: entrants =>
                db.getAll(entrants.map(id => `${pool}/${id}`)),
            getGiveawayWinners: () => db.get(`${key}/winners`),
        }
    }
}
