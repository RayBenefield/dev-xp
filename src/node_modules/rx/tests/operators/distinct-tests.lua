local expect, printed = require'rx-test'()
local rx, _ = require'rx'()

describe('Distinct Operator', function()
    describe('distinct()', function()

        it('is included in rx object', function()
            assert.no.is_nil(_.distinct)
        end)

        it('does nothing on one value', function()
            local test_ = rx.of('hello').pipe(_.distinct())
            --
            expect(test_).to.produce('hello')
        end)

        it('does nothing on two different values', function()
            local test_ = rx.of('hello', 'world').pipe(_.distinct())
            --
            expect(test_).to.produce('hello', 'world')
        end)

        it('does not output the same value twice', function()
            local test_ = rx.of('hello', 'hello').pipe(_.distinct())
            --
            expect(test_).to.produce('hello')
        end)

        it('supports a key function', function()
            local test_ = rx.of({x=1}, {x=1}, {x=1})
                .pipe({
                    _.distinct(function(tbl) return tbl.x end),
                })
            --
            expect(test_).to.produce({x=1})
        end)

    end)
end)
