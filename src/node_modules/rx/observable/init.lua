local _ = require('ludash')
local observer = require('rx.observer')

local create

create = function(thisSubscribe, parentSource)
    local observable
    local operator

    local subscribe = function(observerOrNext, err, complete)
        local destination

        if (_.isObserver(observerOrNext)) then
            destination = observerOrNext
        elseif (type(observerOrNext) == 'table') then
            destination = observer(observerOrNext[1], observerOrNext[2], observerOrNext[3])
        else
            destination = observer(observerOrNext, err, complete)
        end

        if (_.isFunction(thisSubscribe)) then
            destination.add(thisSubscribe(destination, parentSource))
        end

        return destination
    end

    local pipe = function(...)
        local args = {...}
        args = type(args[1]) == 'table' and args[1] or args
        local operators = _.onlyFunctions(args)
        local operatorCount = #operators

        if (operatorCount <= 0) then
            return observable
        end

        if (operatorCount == 1) then
            return operators[1](observable)
        end

        return _.reduce(operators, function(source, operator)
            return operator(source)
        end, observable)
    end

    local lift = function(operator)
        return create(operator, observable)
    end

    observable = { subscribe = subscribe, lift = lift, pipe = pipe }

    return observable
end

return create
