import fs from 'fs';
import slugify from 'slugify';
import unmkdirp from 'mkdirp';
import sortBy from 'lodash.sortby';
import transmute from 'transmutation';
import promisify from 'es6-promisify';
import { resolve, dirname } from 'path';
import snapshotsToUpdate from '@kape/snapshots-to-update';

const mkdirp = promisify(unmkdirp);
const writeFile = promisify(fs.writeFile);

// eslint-disable-next-line prefer-template
const printBacktickString = str => '`' + str.replace(/`|\\|\${/g, '\\$&') + '`';

const generateFileContents = ({ results }) =>
    sortBy(results, 'test', 'id').reduce(
        (all, { id, test, snapshot }) => `${all}

exports[${printBacktickString(`${test} ${id}`)}] = ${printBacktickString(`
${snapshot}
`)};`,
        '// Kape Snapshot v1',
    );

const ensureSnapshotsDirectoryExists = ({ snapshotDir }) => mkdirp(snapshotDir);

const saveSnapshotFile = ({ suiteSnapshotFile, fileContents }) =>
    writeFile(suiteSnapshotFile, fileContents);

export default ({ suite, file, testedResults }) => {
    const snapshotDir = resolve(dirname(file), '__snapshots__');
    const suiteSnapshotFile = resolve(
        snapshotDir,
        `${slugify(suite, { lower: true })}.js.snap`,
    );

    return transmute({
        suiteSnapshotFile,
        testedResults,
        snapshotDir,
    })
        .extend('results', snapshotsToUpdate)
        .extend('fileContents', generateFileContents)
        .do(ensureSnapshotsDirectoryExists)
        .then(saveSnapshotFile);
};
