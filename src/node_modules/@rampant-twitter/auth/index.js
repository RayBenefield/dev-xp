import { OAuth } from 'oauth'
import { encrypt } from '@dev-xp/crypto'

const authUrl = 'https://api.twitter.com/oauth/authorize'
const request = 'https://twitter.com/oauth/request_token'
const access = 'https://twitter.com/oauth/access_token'
const proto = 'HMAC-SHA1'

export default ({ key, secret, callback }) => {
    const client = new OAuth(request, access, key, secret, '1.0A', null, proto)

    return {
        getAuthUrl: async state =>
            new Promise((res, rej) => {
                client.getOAuthRequestToken(
                    { oauth_callback: `${callback}?state=${encrypt(state)}` },
                    (error, requestToken) =>
                        error
                            ? rej(
                                  new Error('Error getting OAuth request token')
                              )
                            : res(`${authUrl}?oauth_token=${requestToken}`)
                )
            }),
        getAccessToken: async ({ requestToken, verifier } = {}) =>
            new Promise((res, rej) => {
                client.getOAuthAccessToken(
                    requestToken,
                    null,
                    verifier,
                    // eslint-disable-next-line max-params
                    (error, accessToken, accessSecret, user) =>
                        error
                            ? rej(new Error('Error getting OAuth access token'))
                            : res({ accessToken, accessSecret, user })
                )
            }),
    }
}
