import Twitter from 'twitter'
import get from '@rampant/get'
import { tap } from 'rxjs/operators'

export default ({ consumerKey, consumerSecret, db }) => {
    const cache = {}

    const twitterCreator = userId => {
        if (userId in cache) return Promise.resolve(cache[userId])

        return db.get(`users/${userId}/auth/twitter`).then(creds => {
            const client = new Twitter({
                consumer_key: consumerKey,
                consumer_secret: consumerSecret,
                access_token_key: creds['access-token'],
                access_token_secret: creds['access-secret'],
            })

            cache[userId] = client
            return client
        })
    }

    return {
        effects: {
            retweet: ({ userId, tweetId }) =>
                tap(payload => {
                    const actualUserId = get({ $: payload }, userId)
                    const actualTweetId = get({ $: payload }, tweetId)

                    twitterCreator(actualUserId).then(client => {
                        client.post(
                            `statuses/retweet/${actualTweetId}`,
                            error => {
                                if (error)
                                    throw new Error('Not able to retweet.')
                            }
                        )
                    })
                }),
        },
    }
}
