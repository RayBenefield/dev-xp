
using. /Verse.org/Assets
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /UnrealEngine.com/Assets
using. /Fortnite.com/Devices/CreativeAnimation
using. /UnrealEngine.com/Temporary/SpatialMath
using. /Fortnite.com/Devices/CreativeAnimation/InterpolationTypes

using. Tableau

spawn_animation_device<public> := class(creative_device, tableau_device):
    @editable ResourceID:string = ""
    @editable SpawnPropertyID:string = ""
    @editable Prop:creative_prop = creative_prop{}

    Init<override>(GameState:game_state)<suspends>:void=
        StartKeyFrame:keyframe_delta = keyframe_delta:
            DeltaLocation := vector3 { X:=1.0, Y:=1.0, Z:=-100.0 }
            DeltaRotation := MakeRotationFromYawPitchRollDegrees(180.0, 0.0, 0.0)
            DeltaScale := vector3 { X:=0.1, Y:=0.1, Z:=0.1 }
            Time := 0.0
        MovementKeyFrame:keyframe_delta = keyframe_delta:
            DeltaLocation := vector3 { X:=1.0, Y:=1.0, Z:=100.0 }
            DeltaRotation := MakeRotationFromYawPitchRollDegrees(-180.0, 0.0, 0.0)
            DeltaScale := vector3 { X:=10.0, Y:=10.0, Z:=10.0 }
            Time := 0.5
            Interpolation := EaseOut
        SquishDown:keyframe_delta = keyframe_delta:
            DeltaLocation := vector3 { X:=1.0, Y:=1.0, Z:=1.0 }
            DeltaRotation := IdentityRotation()
            DeltaScale := vector3 { X:=0.66, Y:=0.66, Z:=0.66 }
            Time := 0.1
            Interpolation := EaseIn
        SquishBack:keyframe_delta = keyframe_delta:
            DeltaLocation := vector3 { X:=1.0, Y:=1.0, Z:=1.0 }
            DeltaRotation := IdentityRotation()
            DeltaScale := vector3 { X:=1.5, Y:=1.5, Z:=1.5 }
            Time := 0.1
            Interpolation := EaseOut

        if (Anim:= Prop.GetAnimationController[]):
            KeyFrames:[]keyframe_delta = array { StartKeyFrame, MovementKeyFrame, SquishDown, SquishBack }
            Anim.SetAnimation(KeyFrames, ?Mode:=animation_mode.OneShot)

        Watcher := player_watcher{ GameState := GameState, OnPossessed := HandleProp }
        spawn. Watcher.Start()

    HandleProp(GameState:game_state, PlayerID:string, Agent:agent)<suspends>:void=
        GameState.AfterTrue(ResourceID, SpawnPropertyID, PlayerID)
        if (Anim := Prop.GetAnimationController[]). Anim.Play()
