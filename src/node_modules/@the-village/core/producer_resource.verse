
using. /Verse.org/Simulation

using. Numb
using. Tableau
using. TableauResource

producer_settings<public> := class<concrete>():
    @editable ID:string = ""
    @editable Tier:int = 0
    @editable CostResource:string = ""
    @editable ProduceResource:string = ""
    @editable BaseCost:float = 3.738
    @editable CostGrowth:float = 1.07
    @editable ProductionRate:float = 0.6
    @editable Production:float = 1.67
    @editable HireCost:num = num. Value := 1000.0

CreateProducerResource<public><constructor>(P:producer_settings) := resource:
    ID := P.ID
    Type := "Producer"
    Props := map:
        "Name" => prop_str. Default := P.ID
        "Cost Growth" => prop_float. Default := P.CostGrowth
        "Base Cost" => prop_float. Default := P.BaseCost
        "Production Rate" => prop_float. Default := P.ProductionRate
        "Hire Cost" => prop_num. Default := P.HireCost
        "Tier" => prop_float. Default := P.Tier * 1.0
        "Working" => prop_bool. Default := false
        "ZERO" => prop_float. Default := 0.0
        "ONE" => prop_float. Default := 1.0
        "TRUE" => prop_bool. Default := true
        "FALSE" => prop_bool. Default := false
        "Count" => prop_num{}
        "Workers" => prop_num{}
        "Produced Count" => prop_num{}
        "Start Produced Count" => prop_num{}
        "Production" => prop_float. Default := P.Production
        "Exists" => prop_bool{ Focus := Path("Can Afford"), FN := "OR", Tweak := Path("Has Some") }
        "Production Amount" => prop_num{ Focus := Path("Count"), FN := "Multiply", Tweak := Path("Production") }
        "Cost Rate" => prop_num{ Focus := Path("Cost Growth"), FN := "Power", Tweak := Path("Count") }
        "Cost" => prop_num{ Focus := Path("Cost Rate"), FN := "Multiply", Tweak := Path("Base Cost") }
        "Can Afford" => prop_bool{ Focus := Path(P.CostResource, "Count"), FN := ">=", Tweak := Path("Cost") }
        "Can Hire" => prop_bool{ Focus := Path(P.CostResource, "Count"), FN := ">=", Tweak := Path("Hire Cost") }
        "Has One" => prop_bool{ Focus := Path("Count"), FN := "=", Tweak := Path("ONE") }
        "Has Some" => prop_bool{ Focus := Path("Count"), FN := ">=", Tweak := Path("ONE") }
        "Has Workers" => prop_bool{ Focus := Path("Workers"), FN := ">=", Tweak := Path("ONE") }
        "No Workers" => prop_bool{ Focus := Path("Workers"), FN := "=", Tweak := Path("ZERO") }
        "Hireable" => prop_bool{ Focus := Path("No Workers"), FN := "AND", Tweak := Path("Can Hire") }
        "Can Work" => prop_bool{ Focus := Path("Has Some"), FN := "AND", Tweak := Path("No Workers") }
        "Not Working" => prop_bool{ Focus := Path("Working"), FN := "NOT" }
    Abilities := map:
        "Buy" => array:
            IsTrue("Can Afford")
            Decrease(P.CostResource, "Count").By("Cost")
            Increase("Count").By("ONE")
            IsTrue("Has One")
            IsTrue("Has Workers")
            Execute("Produce")
        "Produce" => array:
            IsTrue("Has Some")
            IsFalse("Working")
            Set("Working").To("TRUE")
            Increase("Start Produced Count").By("ONE")
            DelayBy("Production Rate")
            Increase(P.ProduceResource, "Count").By("Production Amount")
            Increase("Produced Count").By("ONE")
            Set("Working").To("FALSE")
            IsTrue("Has Workers")
            Execute("Produce")
        "Hire" => array:
            IsFalse("Has Workers")
            IsTrue("Can Hire")
            Decrease(P.CostResource, "Count").By("Hire Cost")
            Increase("Workers").By("ONE")
            IsTrue("Has Some")
            Execute("Produce")
