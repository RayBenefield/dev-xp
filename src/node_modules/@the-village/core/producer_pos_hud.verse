
using { /Fortnite.com/UI }
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /UnrealEngine.com/Temporary/UI }

using { Tableau }

producer_pos_hud_device<public> := class(creative_device, tableau_device):
    @editable ResourceID:string = ""
    @editable HUDSettings:canvas_settings = canvas_settings{}

    CostMsg(Cost:string):string:= "Cost: {Cost}"
    CountMsg(Count:string):string := "Count: {Count}"
    ProdMsg(Amount:string):string := "Profit: {Amount}"

    Init<override>(GameState:game_state)<suspends>:void=
        GameState.AddHUD("Producer POS HUD", SetupHUD, HUDSettings, ?Clickable := true)

    SetupHUD(GameState:game_state, ParticipantID:string):widget=
        Count := gooey_string. VM := Map(GameState.GetStrProp(ResourceID, "Count", ParticipantID), CountMsg)
        Cost := gooey_string. VM := Map(GameState.GetStrProp(ResourceID, "Cost", ParticipantID), CostMsg)
        Prod := gooey_string. VM := Map(GameState.GetStrProp(ResourceID, "Production Amount", ParticipantID), ProdMsg)
        Buttons := array:
            responsive_button:
                DefaultText := "Work"
                Button := button_loud{}
                GooeyVisibility := GameState.GetBoolProp(ResourceID, "Can Work", ParticipantID)
                GooeyEnabled := GameState.GetBoolProp(ResourceID, "Not Working", ParticipantID)
                Action := GameState.GetAbility(ResourceID, "Produce", ParticipantID)
            responsive_button:
                DefaultText := "Buy"
                GooeyEnabled := GameState.GetBoolProp(ResourceID, "Can Afford", ParticipantID)
                Action := GameState.GetAbility(ResourceID, "Buy", ParticipantID)
            responsive_button:
                DefaultText := "Hire"
                Button := button_loud{}
                GooeyVisibility := GameState.GetBoolProp(ResourceID, "Hireable", ParticipantID)
                Action := GameState.GetAbility(ResourceID, "Hire", ParticipantID)
        OrderedButtons := if (HUDSettings.Offsets.HorizontalPadding >= 0.0). Buttons else. Buttons.Reverse()

        Widgets := array:
            responsive_stack_box:
                Widgets := for(Button:OrderedButtons). Button.Initialize()
                Orientation := orientation.Horizontal
                Padding := if (HUDSettings.Offsets.HorizontalPadding >= 0.0):
                    margin{ Left := 0.0, Top := 0.0, Right := 8.0, Bottom := 8.0 }
                else. margin{ Left := 8.0, Top := 0.0, Right := 0.0, Bottom := 8.0 }
            responsive_text_block. GooeyText := GameState.GetStrProp(ResourceID, "Name", ParticipantID)
            responsive_text_block. GooeyText := Cost
            responsive_text_block. GooeyText := Count
            responsive_text_block. GooeyText := Prod

        stack_box:
            Orientation := orientation.Vertical
            Slots := for(Widget:Widgets):
                stack_box_slot:
                    Widget := Widget.Initialize()
                    HorizontalAlignment := if (HUDSettings.Offsets.HorizontalPadding >= 0.0):
                        horizontal_alignment.Left
                    else. horizontal_alignment.Right
