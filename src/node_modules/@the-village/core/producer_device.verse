
using. /Verse.org/Assets
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /Fortnite.com/Devices/CreativeAnimation
using. /UnrealEngine.com/Temporary/SpatialMath
using. /Fortnite.com/Devices/CreativeAnimation/InterpolationTypes

using. Anima
using. Tableau
using. Vertex

BarAnim(Duration:float):[]frame = array:
    Frame(ScaleXBy(-1.0))
    Frame(ScaleXBy(2.0)).SetTime(Duration)
    Frame(ScaleXBy(-0.5))

BuildAnim():[]frame = array:
    Frame(MoveZBy(-100.0), RotateYawBy(180.0), ScaleBy(0.1))
    Frame(MoveZBy(100.0), RotateYawBy(-180.0), ScaleBy(10.0)).SetTime(0.5).SetEasing(EaseOut)
    Frame(ScaleBy(0.5)).SetTime(0.1).SetEasing(EaseIn)
    Frame(ScaleBy(2.0)).SetTime(0.1).SetEasing(EaseOut)

producer_device<public> := class(creative_device, config_device, side_effect_device):
    @editable Settings<public>:producer_settings = producer_settings{}
    GetResources<override>():[]resource= array. CreateProducerResource(Settings)

    @editable Building:?creative_prop = creative_prop{}
    @editable VFXRef:creative_prop = creative_prop{}
    @editable BarProp:creative_prop_asset = DefaultCreativePropAsset

    Hologram:material = TableauAssets.UI.MI_BlueHologram
    Summer:material = ResizedKayKitMedieval.Materials.MI_Summer
    BuildVFX:?particle_system = option. TycoonPack.Particles.Smoke.P_Building
    ProduceVFXs:[]particle_system = array:
        TycoonPack.Particles.Money.P_CoinBurst_1
        TycoonPack.Particles.Money.P_CoinBurst_5
        TycoonPack.Particles.Money.P_CoinBurst_10
        TycoonPack.Particles.Money.P_CoinBurst_25
        TycoonPack.Particles.Money.P_CoinBurst_50
        TycoonPack.Particles.Money.P_CoinBurst_100

    GetResourceID<override>()<computes>:?string= option. Settings.ID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(State:scoped_state)<suspends>:[]side_effect=
        Loc := GetTransform().Translation
        BuildingLoc := Building.GetTransform().Translation
        VFXLoc := VFXRef.GetTransform().Translation

        Bar := Spawn(BarProp, Loc, R3(), V3(-1.0, 1.0, 1.0))

        Tier := State.GetInt("Tier").Get()
        ProduceVFX := option. ProduceVFXs[Tier-1]

        SetupOneShot(Building, BuildAnim())

        array:
            Push("Start Produced Count", PlayAnim(Bar).FN)
            PushBool("Exists", Toggle(Building).FN)
            PushBool("Has Some", ToggleMaterial(Building, Summer, Hologram).FN)
            Push("Count", SpawnVFX(BuildVFX, BuildingLoc).FN)
            Push("Produced Count", SpawnVFX(option. ProduceVFX, VFXLoc).FN)
            Push("Has Some", PlayAnim(Building).FN)
            PushFloat("Production Rate", UpdateAnimWithFloat(Bar, BarAnim).FN)
            # Debug("Has Some", "{ProducerID} Has Some")
