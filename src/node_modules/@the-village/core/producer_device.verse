
using. /Verse.org/Assets
using. /Fortnite.com/Devices
using. /Verse.org/Simulation
using. /Fortnite.com/Devices/CreativeAnimation
using. /UnrealEngine.com/Temporary/SpatialMath

using. Anima
using. Tableau
using. TableauDevice
using. TableauResource

producer_device<public> := class(creative_device, config_device, side_effect_device):
    @editable Settings<public>:producer_settings = producer_settings{}
    GetResources<override>():[]resource= array. CreateProducerResource(Settings)

    @editable Building:creative_prop = creative_prop{}
    @editable BarProp:creative_prop_asset = DefaultCreativePropAsset
    var Bar:?creative_prop = false

    Hologram:material = TableauAssets.UI.MI_BlueHologram
    Summer:material = ResizedKayKitMedieval.Materials.MI_Summer

    GetResourceID<override>()<computes>:?string= option. Settings.ID
    GetPerType<override>()<computes>:?string= false
    GetPerSubType<override>()<computes>:?string= option. "Player"
    GetSideEffects<override>(GameState:game_state, ProducerID:string, PlayerID:string)<suspends>:[]side_effect=
        Building.Hide()
        Building.SetMaterial(Hologram)
        set Bar = SpawnProp(BarProp, GetTransform().Translation, IdentityRotation())(0)
        Duration := GameState.GetFloatProp(ProducerID, "Production Rate", PlayerID).Latest
        if (Anim := Bar?.GetAnimationController[]):
            Invisible := frame. Transformers := array. ScaleXBy(-1.0)
            Anim.SetAnimation(array. Invisible.Delta(), ?Mode:=animation_mode.OneShot)
            Anim.Play()
            Sleep(0.0)
            Frames:[]frame = array:
                frame. Transformers := array. ScaleXBy(-1.0)
                frame{ Time := Duration, Transformers := array. ScaleXBy(2.0) }
                frame. Transformers := array. ScaleXBy(-0.5)
            Anim.SetAnimation(Frames.Deltas(), ?Mode:=animation_mode.OneShot)

        array:
            play_animation{ Focus := Path(ProducerID, "Start Produced Count"), Prop := Bar }
            toggle_prop{ Focus := Path("Exists"), Prop := option. Building }
            toggle_material{ Focus := Path("Has Some"), Prop := option. Building, True := Summer, False := Hologram }

    UpdateAnimation(Duration:float):void=
        if (Anim := Bar?.GetAnimationController[]):
            KeyFrames:[]keyframe_delta = array:
                keyframe_delta:
                    DeltaLocation := vector3{}
                    DeltaRotation := IdentityRotation()
                    DeltaScale := vector3{X:=-1.0, Y:=1.0, Z:=1.0}
                    Time := 0.0
                keyframe_delta:
                    DeltaLocation := vector3{}
                    DeltaRotation := IdentityRotation()
                    DeltaScale := vector3{X:=2.0, Y:=1.0, Z:=1.0}
                    Time := Duration
                keyframe_delta:
                    DeltaLocation := vector3{}
                    DeltaRotation := IdentityRotation()
                    DeltaScale := vector3{X:=-0.5, Y:=1.0, Z:=1.0}
                    Time := 0.0
            Anim.SetAnimation(KeyFrames, ?Mode:=animation_mode.OneShot)
