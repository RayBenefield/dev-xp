
using. /Fortnite.com/Devices
using. /Verse.org/Simulation

using. Numb
using. Tableau
using. TableauResource

producer_settings<public> := class<concrete>():
    @editable ID:string = ""
    @editable CostResource:string = ""
    @editable ProduceResource:string = ""
    @editable BaseCost:float = 3.738
    @editable CostGrowth:float = 1.07
    @editable ProductionRate:float = 0.6
    @editable Production:float = 1.67
    @editable HireCost:num = num. Value := 1000.0

CreateProducerResource<public><constructor>(P:producer_settings) := resource:
    ID := P.ID
    Props := props:
        Static := map:
            "Name" => prop_str. Default := P.ID
            "Cost Growth" => prop_float. Default := P.CostGrowth
            "Base Cost" => prop_float. Default := P.BaseCost
            "Production Rate" => prop_float. Default := P.ProductionRate
            "Hire Cost" => prop_num. Default := P.HireCost
        Per := map:
            "Working" => prop_bool. Default := false
            "Count" => prop_num{}
            "Workers" => prop_num{}
            "Produced Count" => prop_num{}
            "Start Produced Count" => prop_num{}
            "Production" => prop_float. Default := P.Production
        Computed := map:
            "Production Amount" => comp_num:
                Focus := Path("Count")
                FN := "Multiply"
                Pay := Load(Path("Production"))
            "Cost Rate" => comp_num:
                Focus := Path("Cost Growth")
                FN := "Power"
                Pay := Load(Path("Count"))
            "Cost" => comp_num:
                Focus := Path("Cost Rate")
                FN := "Multiply"
                Pay := Load(Path("Base Cost"))
            "Can Afford" => comp_bool:
                Focus := Path(P.CostResource, "Count")
                FN := ">="
                Pay := Load(Path("Cost"))
            "Can Afford Hire" => comp_bool:
                Focus := Path(P.CostResource, "Count")
                FN := ">="
                Pay := Load(Path("Hire Cost"))
            "Has One" => comp_bool:
                Focus := Path("Count")
                FN := "="
                Pay := load. Float := 1.0
            "Has Some" => comp_bool:
                Focus := Path("Count")
                FN := ">="
                Pay := load. Float := 1.0
            "Has Workers" => comp_bool:
                Focus := Path("Workers")
                FN := ">="
                Pay := load. Float := 1.0
            "No Workers" => comp_bool:
                Focus := Path("Workers")
                FN := "="
                Pay := load. Float := 0.0
            "Hireable" => comp_bool:
                Focus := Path("No Workers")
                FN := "AND"
                Pay := Load(Path("Can Afford Hire"))
            "Can Work" => comp_bool:
                Focus := Path("Has Some")
                FN := "AND"
                Pay := Load(Path("No Workers"))
            "Not Working" => comp_bool:
                Focus := Path("Working")
                FN := "NOT"
    Abilities := map:
        "Buy" => array:
            effect{ FN := "Is True", Focus := Path("Can Afford") }
            effect{ FN := "Decrease", Focus := Path(P.CostResource, "Count"), Pay := Load(Path("Cost")) }
            effect{ FN := "Increase", Focus := Path("Count"), Pay := load. Float := 1.0 }
            effect{ FN := "Is True", Focus := Path("Has One") }
            effect{ FN := "Is True", Focus := Path("Has Workers") }
            effect{ FN := "Execute Ability", Focus := Path("Produce") }
        "Produce" => array:
            effect{ FN := "Is True", Focus := Path("Has Some") }
            effect{ FN := "Is False", Focus := Path("Working") }
            effect{ FN := "Make True", Focus := Path("Working") }
            effect{ FN := "Increase", Focus := Path("Start Produced Count"), Pay := load. Float := 1.0 }
            effect{ FN := "Delay", Focus := Path("Production Rate") }
            effect{ FN := "Increase", Focus := Path(P.ProduceResource, "Count"), Pay := Load(Path("Production Amount")) }
            effect{ FN := "Increase", Focus := Path("Produced Count"), Pay := load. Float := 1.0 }
            effect{ FN := "Make False", Focus := Path("Working") }
            effect{ FN := "Is True", Focus := Path("Has Workers") }
            effect{ FN := "Execute Ability", Focus := Path("Produce") }
        "Hire" => array:
            effect{ FN := "Is False", Focus := Path("Has Workers") }
            effect{ FN := "Is True", Focus := Path("Can Afford Hire") }
            effect{ FN := "Decrease", Focus := Path(P.CostResource, "Count"), Pay := Load(Path("Hire Cost")) }
            effect{ FN := "Increase", Focus := Path("Workers"), Pay := load. Float := 1.0 }
            effect{ FN := "Is True", Focus := Path("Has Some") }
            effect{ FN := "Execute Ability", Focus := Path("Produce") }

producer_config<public> := class(creative_device, config_device):
    @editable ProducerSettings<public>:[]producer_settings = array{}
    GetResources<override>():[]resource= for (P:ProducerSettings). CreateProducerResource(P)
