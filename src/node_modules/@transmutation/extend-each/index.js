import log from '@dev-xp/log'
import * as _ from '@dev-xp/utils'
import merger from '@transmutation/merging-function'
import extend from '@transmutation/extension-operator'

export default (...args) => value => {
    const [key, target, map] = _.cond([
        [_.equals(2), _.always([undefined, args[0], args[1]])],
        [_.equals(3), _.always(args)],
    ])(args.filter(_.identity).length)

    return _.$(value).pipe([
        _.getProp(target),
        _.ifElse(
            _.isObject,
            _.mapObjIndexed((v, k) => map(v, value, k)),
            _.mapIndexed((v, k) => map(v, value, k))
        ),
        _.list,
        _.flattenDepth(1),
        _.cond([
            [_.pipe(_.first, _.isObject), _.reduce(merger, {})],
            [_.pipe(_.first, _.isArray), _.concat([])],
            [_.pipe(_.first, _.identity), _.identity],
        ]),
        v => extend(key, v)(value),
    ])
}
