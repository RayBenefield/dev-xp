import RenderKid from 'renderkid';

const isPromise = obj =>
    !!obj &&
    (typeof obj === 'object' || typeof obj === 'function') &&
    typeof obj.then === 'function';

export default ({ defaultStyle, defaultRenderer = console.log }) => command => (
    ...args
) => {
    const result = command.run(...args);
    const renderer = command.renderer || defaultRenderer;
    const formatter = new RenderKid();
    formatter.style(defaultStyle);

    if (isPromise(result)) {
        return result
            .then(
                toFormat =>
                    command.template
                        ? formatter.render(command.template(toFormat))
                        : toFormat,
            )
            .then(renderer);
    }
    const formattedResult = command.template
        ? formatter.render(command.template(result))
        : result;
    return renderer(formattedResult);
};
