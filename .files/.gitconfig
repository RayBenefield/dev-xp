[user]
	name = Raymond Benefield
	email = raymond.benefield@gmail.com
[diff]
	tool = vimdiff
	mnemonicprefix = true
	renames = copies
	colorMoved = zebra
[difftool]
	prompt = false
[alias]
	a = add .
	l = log --oneline
	p = pull --rebase --tags
	f = fetch --all --tags --prune
    ac = !sh -c \"git add $1 && git commit -m '$2'\"
	br = branch
    ci = commit
	st = status -u
    cb = checkout -b
    co = !sh -c 'git checkout $(git branch | fzf)'
    ls = "!f() { git ls-files; git ls-files --others --exclude-standard; }; f"
    pu = "!f() { BRANCH=$(git symbolic-ref --short HEAD); git push -u origin $BRANCH; }; f"
    rw = "!f() { COMMIT=$1; BRANCH=$(git symbolic-ref --short HEAD); git checkout $COMMIT; git commit --amend; git rebase HEAD $BRANCH; git checkout $BRANCH; }; f"
	dif = diff --staged
    fix = !sh -c 'REV=$(git rev-parse $1) && git commit --fixup $@ && git stash -u && GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $REV^ && git stash pop' -
	last = log -1 HEAD
    save = stash save -u
    drop = "!f() { git stash drop stash@{0}; }; f"
    check = "!f() { FILE=$1; git log --follow $FILE; }; f"
	amend = commit -a --amend --no-edit
	staged = diff --staged
	pretty = log --graph --oneline --decorate
	unstage = restore --staged .
	refresh = reset --hard @{u}
	show-files = show --pretty="format:" --name-only
    EX-shell-var = "!f() { COMMIT=$1; BRANCH=$(git symbolic-ref --short HEAD); echo $COMMIT; echo $BRANCH; }; f"
[color "status"]
	untracked = cyan
[core]
	whitespace = trailing-space,space-before-tab
	excludesfile = ~/.gitignore
	editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX
[push]
	followTags = true
[rerere]
	enabled = true
[color "diff-highlight"]
	oldNormal = red
	oldHighlight = red 52
	newNormal = green
	newHighlight = green 22
[color "diff"]
	meta = 227
	frag = magenta bold
	commit = 227 bold
	old = red
	new = green
	whitespace = red reverse
